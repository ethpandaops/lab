@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
	html {
		@apply bg-bg;
	}

	body {
		@apply bg-bg text-text-primary min-h-screen;
	}

	/* Text colors */
	.text-primary {
		color: rgb(var(--text-primary) / 1);
	}
	.text-secondary {
		color: rgb(var(--text-secondary) / 1);
	}
	.text-tertiary {
		color: rgb(var(--text-tertiary) / 1);
	}
	.text-muted {
		color: rgb(var(--text-muted) / 1);
	}

	/* Background colors */
	.bg-base {
		background-color: rgb(var(--bg-base) / 1);
	}
	.bg-surface {
		background-color: rgb(var(--bg-surface) / 1);
	}
	.bg-surface-raised {
		background-color: rgb(var(--bg-surface-raised) / 1);
	}
	.bg-hover {
		background-color: rgb(var(--bg-hover) / 1);
	}
	.bg-active {
		background-color: rgb(var(--bg-active) / 1);
	}
	.bg-card {
		background-color: rgb(var(--bg-card) / 1);
	}

	/* Border colors */
	.border-subtle {
		border-color: rgb(var(--border-subtle) / 1);
	}
	.border-default {
		border-color: rgb(var(--border-default) / 1);
	}
	.border-prominent {
		border-color: rgb(var(--border-prominent) / 1);
	}

	/* Accent colors */
	.text-accent {
		color: rgb(var(--accent) / 1);
	}
	.text-accent-muted {
		color: rgb(var(--accent-muted) / 1);
	}
	.bg-accent {
		background-color: rgb(var(--accent) / 1);
	}
	.bg-accent-muted {
		background-color: rgb(var(--accent-muted) / 1);
	}

	/* Status colors */
	.text-success {
		color: rgb(var(--success) / 1);
	}
	.bg-success {
		background-color: rgb(var(--success) / 1);
	}
	.text-warning {
		color: rgb(var(--warning) / 1);
	}
	.bg-warning {
		background-color: rgb(var(--warning) / 1);
	}
	.text-error {
		color: rgb(var(--error) / 1);
	}
	.bg-error {
		background-color: rgb(var(--error) / 1);
	}

	@font-face {
		font-family: Inter;
		font-style: normal;
		font-weight: 400;
		font-display: swap;
		src: url('/fonts/Inter-Regular.woff2') format('woff2');
	}

	@font-face {
		font-family: Inter;
		font-style: normal;
		font-weight: 500;
		font-display: swap;
		src: url('/fonts/Inter-Medium.woff2') format('woff2');
	}

	@font-face {
		font-family: Inter;
		font-style: normal;
		font-weight: 700;
		font-display: swap;
		src: url('/fonts/Inter-Bold.woff2') format('woff2');
	}

	/* Set default text color */
	body {
		@apply text-text-primary;
	}

	/* Border styles */
	.border {
		border-color: rgb(var(--border-default) / 0.25);
	}
	.border-b {
		border-bottom-color: rgb(var(--border-default) / 0.25);
	}

	/* Background colors */
	.bg-surface-20 {
		background-color: rgb(var(--bg-surface) / 0.2);
	}
	.bg-surface-30 {
		background-color: rgb(var(--bg-surface) / 0.3);
	}
	.bg-accent-10 {
		background-color: rgb(var(--accent) / 0.1);
	}
	.bg-accent-20 {
		background-color: rgb(var(--accent) / 0.2);
	}
	.bg-error-10 {
		background-color: rgb(var(--error) / 0.1);
	}
	.bg-error-20 {
		background-color: rgb(var(--error) / 0.2);
	}
}

@layer components {
	/* Title styles */
	.title-gradient {
		@apply font-sans font-black text-accent;
	}

	/* Button styles */
	.btn {
		@apply px-4 py-2 border transition-all duration-300 font-mono;
		background-color: rgb(var(--bg-surface) / 0.8);
		@apply border-subtle hover:border-default;
		&:hover {
			background-color: rgb(var(--bg-surface) / 0.9);
		}
	}
	.btn-primary {
		@apply border-accent hover:border-accent;
		background-color: rgb(var(--accent) / 0.2);
		&:hover {
			background-color: rgb(var(--accent) / 0.3);
		}
	}
	.btn-error {
		@apply border-error hover:border-error;
		background-color: rgb(var(--error) / 0.2);
		&:hover {
			background-color: rgb(var(--error) / 0.3);
		}
	}
	.btn-lg {
		@apply px-6 py-3 text-lg;
	}
	.btn-sm {
		@apply px-3 py-1.5 text-sm;
	}

	/* Cyberpunk grid background */
	body::before {
		content: '';
		position: fixed;
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;
		background: linear-gradient(rgba(0, 242, 255, 0.03) 1px, transparent 1px),
			linear-gradient(90deg, rgba(0, 242, 255, 0.03) 1px, transparent 1px),
			linear-gradient(rgba(0, 242, 255, 0.05) 2px, transparent 2px),
			linear-gradient(90deg, rgba(0, 242, 255, 0.05) 2px, transparent 2px),
			radial-gradient(circle at 20% 30%, rgba(0, 255, 159, 0.05) 0%, transparent 50%),
			radial-gradient(circle at 80% 70%, rgba(0, 242, 255, 0.05) 0%, transparent 50%),
			radial-gradient(circle at 50% 50%, rgba(255, 0, 102, 0.05) 0%, transparent 70%);
		background-size: 
			30px 30px,
			30px 30px,
			150px 150px,
			150px 150px,
			100% 100%,
			100% 100%,
			100% 100%;
		background-position: center center;
		mask-image: radial-gradient(ellipse at center, rgba(0, 0, 0, 0.8) 0%, rgba(0, 0, 0, 0.1) 100%);
		pointer-events: none;
		z-index: -1;
		opacity: 0.5;
		animation: pulse 4s ease-in-out infinite;
	}

	/* Enhanced noise texture */
	body::after {
		content: '';
		position: fixed;
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;
		background-image: url("data:image/svg+xml,%3Csvg viewBox='0 0 200 200' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noise'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='0.8' numOctaves='4' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%' height='100%' filter='url(%23noise)'/%3E%3C/svg%3E");
		opacity: 0.02;
		pointer-events: none;
		z-index: -1;
		mix-blend-mode: overlay;
	}

	/* Scanline effect */
	body::after {
		content: '';
		position: fixed;
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;
		background: linear-gradient(
			to bottom,
			transparent 50%,
			rgba(0, 0, 0, 0.05) 51%,
			transparent 52%
		);
		background-size: 100% 4px;
		pointer-events: none;
		z-index: 2;
		opacity: 0.2;
	}
}

@keyframes scanline {
	from {
		transform: translateY(0);
	}
	to {
		transform: translateY(100%);
	}
}

@keyframes pulse {
	0%, 100% {
		opacity: 0.5;
	}
	50% {
		opacity: 0.3;
	}
}

@layer utilities {
	.bg-nav {
		background-color: rgb(var(--bg-surface) / 0.95);
		border-color: rgb(var(--border-subtle) / 0.2);
	}
	.bg-content {
		background-color: rgb(var(--bg-surface) / 0.95);
	}
}
