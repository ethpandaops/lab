// @generated by protoc-gen-es v1.10.0 with parameter "target=ts"
// @generated from file vendor/xatu-cbt/clickhouse/int_block_proposer_head.proto (package cbt, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, StringValue } from "@bufbuild/protobuf";
import { NullableStringFilter, StringFilter, UInt32Filter } from "./common_pb.js";

/**
 * @generated from message cbt.IntBlockProposerHead
 */
export class IntBlockProposerHead extends Message<IntBlockProposerHead> {
  /**
   * Timestamp when the record was last updated
   *
   * @generated from field: uint32 updated_date_time = 11;
   */
  updatedDateTime = 0;

  /**
   * The slot number for which the proposer duty is assigned
   *
   * @generated from field: uint32 slot = 12;
   */
  slot = 0;

  /**
   * The wall clock time when the slot started
   *
   * @generated from field: uint32 slot_start_date_time = 13;
   */
  slotStartDateTime = 0;

  /**
   * The epoch number containing the slot
   *
   * @generated from field: uint32 epoch = 14;
   */
  epoch = 0;

  /**
   * The wall clock time when the epoch started
   *
   * @generated from field: uint32 epoch_start_date_time = 15;
   */
  epochStartDateTime = 0;

  /**
   * The validator index of the proposer for the slot
   *
   * @generated from field: uint32 proposer_validator_index = 16;
   */
  proposerValidatorIndex = 0;

  /**
   * The public key of the validator proposer
   *
   * @generated from field: string proposer_pubkey = 17;
   */
  proposerPubkey = "";

  /**
   * The beacon block root hash
   *
   * @generated from field: google.protobuf.StringValue block_root = 18;
   */
  blockRoot?: string;

  constructor(data?: PartialMessage<IntBlockProposerHead>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cbt.IntBlockProposerHead";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 11, name: "updated_date_time", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 12, name: "slot", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 13, name: "slot_start_date_time", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 14, name: "epoch", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 15, name: "epoch_start_date_time", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 16, name: "proposer_validator_index", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 17, name: "proposer_pubkey", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 18, name: "block_root", kind: "message", T: StringValue },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): IntBlockProposerHead {
    return new IntBlockProposerHead().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): IntBlockProposerHead {
    return new IntBlockProposerHead().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): IntBlockProposerHead {
    return new IntBlockProposerHead().fromJsonString(jsonString, options);
  }

  static equals(a: IntBlockProposerHead | PlainMessage<IntBlockProposerHead> | undefined, b: IntBlockProposerHead | PlainMessage<IntBlockProposerHead> | undefined): boolean {
    return proto3.util.equals(IntBlockProposerHead, a, b);
  }
}

/**
 * ListIntBlockProposerHeadRequest is the request message for listing int_block_proposer_head records
 *
 * @generated from message cbt.ListIntBlockProposerHeadRequest
 */
export class ListIntBlockProposerHeadRequest extends Message<ListIntBlockProposerHeadRequest> {
  /**
   * Filter by slot_start_date_time (PRIMARY KEY - required)
   *
   * @generated from field: cbt.UInt32Filter slot_start_date_time = 1;
   */
  slotStartDateTime?: UInt32Filter;

  /**
   * Filter by proposer_validator_index (ORDER BY column 2 - optional)
   *
   * @generated from field: cbt.UInt32Filter proposer_validator_index = 2;
   */
  proposerValidatorIndex?: UInt32Filter;

  /**
   * Filter by updated_date_time (optional)
   *
   * @generated from field: cbt.UInt32Filter updated_date_time = 3;
   */
  updatedDateTime?: UInt32Filter;

  /**
   * Filter by slot (optional)
   *
   * @generated from field: cbt.UInt32Filter slot = 4;
   */
  slot?: UInt32Filter;

  /**
   * Filter by epoch (optional)
   *
   * @generated from field: cbt.UInt32Filter epoch = 5;
   */
  epoch?: UInt32Filter;

  /**
   * Filter by epoch_start_date_time (optional)
   *
   * @generated from field: cbt.UInt32Filter epoch_start_date_time = 6;
   */
  epochStartDateTime?: UInt32Filter;

  /**
   * Filter by proposer_pubkey (optional)
   *
   * @generated from field: cbt.StringFilter proposer_pubkey = 7;
   */
  proposerPubkey?: StringFilter;

  /**
   * Filter by block_root (optional)
   *
   * @generated from field: cbt.NullableStringFilter block_root = 8;
   */
  blockRoot?: NullableStringFilter;

  /**
   * The maximum number of int_block_proposer_head to return.
   * If unspecified, at most 100 items will be returned.
   * The maximum value is 1000; values above 1000 will be coerced to 1000.
   *
   * @generated from field: int32 page_size = 9;
   */
  pageSize = 0;

  /**
   * A page token, received from a previous `ListIntBlockProposerHead` call.
   * Provide this to retrieve the subsequent page.
   *
   * @generated from field: string page_token = 10;
   */
  pageToken = "";

  /**
   * The order of results. Format: comma-separated list of fields.
   * Example: "foo,bar" or "foo desc,bar" for descending order on foo.
   * If unspecified, results will be returned in the default order.
   *
   * @generated from field: string order_by = 11;
   */
  orderBy = "";

  constructor(data?: PartialMessage<ListIntBlockProposerHeadRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cbt.ListIntBlockProposerHeadRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "slot_start_date_time", kind: "message", T: UInt32Filter },
    { no: 2, name: "proposer_validator_index", kind: "message", T: UInt32Filter },
    { no: 3, name: "updated_date_time", kind: "message", T: UInt32Filter },
    { no: 4, name: "slot", kind: "message", T: UInt32Filter },
    { no: 5, name: "epoch", kind: "message", T: UInt32Filter },
    { no: 6, name: "epoch_start_date_time", kind: "message", T: UInt32Filter },
    { no: 7, name: "proposer_pubkey", kind: "message", T: StringFilter },
    { no: 8, name: "block_root", kind: "message", T: NullableStringFilter },
    { no: 9, name: "page_size", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 10, name: "page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "order_by", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListIntBlockProposerHeadRequest {
    return new ListIntBlockProposerHeadRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListIntBlockProposerHeadRequest {
    return new ListIntBlockProposerHeadRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListIntBlockProposerHeadRequest {
    return new ListIntBlockProposerHeadRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListIntBlockProposerHeadRequest | PlainMessage<ListIntBlockProposerHeadRequest> | undefined, b: ListIntBlockProposerHeadRequest | PlainMessage<ListIntBlockProposerHeadRequest> | undefined): boolean {
    return proto3.util.equals(ListIntBlockProposerHeadRequest, a, b);
  }
}

/**
 * ListIntBlockProposerHeadResponse is the response message for listing int_block_proposer_head records
 *
 * @generated from message cbt.ListIntBlockProposerHeadResponse
 */
export class ListIntBlockProposerHeadResponse extends Message<ListIntBlockProposerHeadResponse> {
  /**
   * The list of int_block_proposer_head.
   *
   * @generated from field: repeated cbt.IntBlockProposerHead int_block_proposer_head = 1;
   */
  intBlockProposerHead: IntBlockProposerHead[] = [];

  /**
   * A token, which can be sent as `page_token` to retrieve the next page.
   * If this field is omitted, there are no subsequent pages.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken = "";

  constructor(data?: PartialMessage<ListIntBlockProposerHeadResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cbt.ListIntBlockProposerHeadResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "int_block_proposer_head", kind: "message", T: IntBlockProposerHead, repeated: true },
    { no: 2, name: "next_page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListIntBlockProposerHeadResponse {
    return new ListIntBlockProposerHeadResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListIntBlockProposerHeadResponse {
    return new ListIntBlockProposerHeadResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListIntBlockProposerHeadResponse {
    return new ListIntBlockProposerHeadResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListIntBlockProposerHeadResponse | PlainMessage<ListIntBlockProposerHeadResponse> | undefined, b: ListIntBlockProposerHeadResponse | PlainMessage<ListIntBlockProposerHeadResponse> | undefined): boolean {
    return proto3.util.equals(ListIntBlockProposerHeadResponse, a, b);
  }
}

/**
 * GetIntBlockProposerHeadRequest is the request message for getting a single int_block_proposer_head record by primary key
 *
 * @generated from message cbt.GetIntBlockProposerHeadRequest
 */
export class GetIntBlockProposerHeadRequest extends Message<GetIntBlockProposerHeadRequest> {
  /**
   * The wall clock time when the slot started
   *
   * Primary key (required)
   *
   * @generated from field: uint32 slot_start_date_time = 1;
   */
  slotStartDateTime = 0;

  constructor(data?: PartialMessage<GetIntBlockProposerHeadRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cbt.GetIntBlockProposerHeadRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "slot_start_date_time", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetIntBlockProposerHeadRequest {
    return new GetIntBlockProposerHeadRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetIntBlockProposerHeadRequest {
    return new GetIntBlockProposerHeadRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetIntBlockProposerHeadRequest {
    return new GetIntBlockProposerHeadRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetIntBlockProposerHeadRequest | PlainMessage<GetIntBlockProposerHeadRequest> | undefined, b: GetIntBlockProposerHeadRequest | PlainMessage<GetIntBlockProposerHeadRequest> | undefined): boolean {
    return proto3.util.equals(GetIntBlockProposerHeadRequest, a, b);
  }
}

/**
 * GetIntBlockProposerHeadResponse is the response message for getting a single int_block_proposer_head record
 *
 * @generated from message cbt.GetIntBlockProposerHeadResponse
 */
export class GetIntBlockProposerHeadResponse extends Message<GetIntBlockProposerHeadResponse> {
  /**
   * @generated from field: cbt.IntBlockProposerHead item = 1;
   */
  item?: IntBlockProposerHead;

  constructor(data?: PartialMessage<GetIntBlockProposerHeadResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cbt.GetIntBlockProposerHeadResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "item", kind: "message", T: IntBlockProposerHead },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetIntBlockProposerHeadResponse {
    return new GetIntBlockProposerHeadResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetIntBlockProposerHeadResponse {
    return new GetIntBlockProposerHeadResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetIntBlockProposerHeadResponse {
    return new GetIntBlockProposerHeadResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetIntBlockProposerHeadResponse | PlainMessage<GetIntBlockProposerHeadResponse> | undefined, b: GetIntBlockProposerHeadResponse | PlainMessage<GetIntBlockProposerHeadResponse> | undefined): boolean {
    return proto3.util.equals(GetIntBlockProposerHeadResponse, a, b);
  }
}

