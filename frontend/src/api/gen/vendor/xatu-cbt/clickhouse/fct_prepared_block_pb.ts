// @generated by protoc-gen-es v1.10.0 with parameter "target=ts"
// @generated from file vendor/xatu-cbt/clickhouse/fct_prepared_block.proto (package cbt, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, UInt32Value, UInt64Value } from "@bufbuild/protobuf";
import { NullableUInt32Filter, NullableUInt64Filter, StringFilter, UInt32Filter } from "./common_pb.js";

/**
 * @generated from message cbt.FctPreparedBlock
 */
export class FctPreparedBlock extends Message<FctPreparedBlock> {
  /**
   * Timestamp when the record was last updated
   *
   * @generated from field: uint32 updated_date_time = 11;
   */
  updatedDateTime = 0;

  /**
   * The slot number from beacon block
   *
   * @generated from field: uint32 slot = 12;
   */
  slot = 0;

  /**
   * The wall clock time when the slot started
   *
   * @generated from field: uint32 slot_start_date_time = 13;
   */
  slotStartDateTime = 0;

  /**
   * The wall clock time when the event was received
   *
   * @generated from field: uint32 event_date_time = 14;
   */
  eventDateTime = 0;

  /**
   * Name of the client that generated the event
   *
   * @generated from field: string meta_client_name = 15;
   */
  metaClientName = "";

  /**
   * Version of the client that generated the event
   *
   * @generated from field: string meta_client_version = 16;
   */
  metaClientVersion = "";

  /**
   * Implementation of the client that generated the event
   *
   * @generated from field: string meta_client_implementation = 17;
   */
  metaClientImplementation = "";

  /**
   * Consensus implementation of the validator
   *
   * @generated from field: string meta_consensus_implementation = 18;
   */
  metaConsensusImplementation = "";

  /**
   * Consensus version of the validator
   *
   * @generated from field: string meta_consensus_version = 19;
   */
  metaConsensusVersion = "";

  /**
   * City of the client that generated the event
   *
   * @generated from field: string meta_client_geo_city = 20;
   */
  metaClientGeoCity = "";

  /**
   * Country of the client that generated the event
   *
   * @generated from field: string meta_client_geo_country = 21;
   */
  metaClientGeoCountry = "";

  /**
   * Country code of the client that generated the event
   *
   * @generated from field: string meta_client_geo_country_code = 22;
   */
  metaClientGeoCountryCode = "";

  /**
   * The version of the beacon block
   *
   * @generated from field: string block_version = 23;
   */
  blockVersion = "";

  /**
   * The total bytes of the beacon block payload
   *
   * @generated from field: google.protobuf.UInt32Value block_total_bytes = 24;
   */
  blockTotalBytes?: number;

  /**
   * The total bytes of the beacon block payload when compressed using snappy
   *
   * @generated from field: google.protobuf.UInt32Value block_total_bytes_compressed = 25;
   */
  blockTotalBytesCompressed?: number;

  /**
   * The value of the execution payload in wei
   *
   * @generated from field: google.protobuf.UInt64Value execution_payload_value = 26;
   */
  executionPayloadValue?: bigint;

  /**
   * The value of the consensus payload in wei
   *
   * @generated from field: google.protobuf.UInt64Value consensus_payload_value = 27;
   */
  consensusPayloadValue?: bigint;

  /**
   * The block number of the execution payload
   *
   * @generated from field: uint32 execution_payload_block_number = 28;
   */
  executionPayloadBlockNumber = 0;

  /**
   * Gas limit for execution payload
   *
   * @generated from field: google.protobuf.UInt64Value execution_payload_gas_limit = 29;
   */
  executionPayloadGasLimit?: bigint;

  /**
   * Gas used for execution payload
   *
   * @generated from field: google.protobuf.UInt64Value execution_payload_gas_used = 30;
   */
  executionPayloadGasUsed?: bigint;

  /**
   * The transaction count of the execution payload
   *
   * @generated from field: google.protobuf.UInt32Value execution_payload_transactions_count = 31;
   */
  executionPayloadTransactionsCount?: number;

  /**
   * The transaction total bytes of the execution payload
   *
   * @generated from field: google.protobuf.UInt32Value execution_payload_transactions_total_bytes = 32;
   */
  executionPayloadTransactionsTotalBytes?: number;

  constructor(data?: PartialMessage<FctPreparedBlock>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cbt.FctPreparedBlock";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 11, name: "updated_date_time", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 12, name: "slot", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 13, name: "slot_start_date_time", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 14, name: "event_date_time", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 15, name: "meta_client_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 16, name: "meta_client_version", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 17, name: "meta_client_implementation", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 18, name: "meta_consensus_implementation", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 19, name: "meta_consensus_version", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 20, name: "meta_client_geo_city", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 21, name: "meta_client_geo_country", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 22, name: "meta_client_geo_country_code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 23, name: "block_version", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 24, name: "block_total_bytes", kind: "message", T: UInt32Value },
    { no: 25, name: "block_total_bytes_compressed", kind: "message", T: UInt32Value },
    { no: 26, name: "execution_payload_value", kind: "message", T: UInt64Value },
    { no: 27, name: "consensus_payload_value", kind: "message", T: UInt64Value },
    { no: 28, name: "execution_payload_block_number", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 29, name: "execution_payload_gas_limit", kind: "message", T: UInt64Value },
    { no: 30, name: "execution_payload_gas_used", kind: "message", T: UInt64Value },
    { no: 31, name: "execution_payload_transactions_count", kind: "message", T: UInt32Value },
    { no: 32, name: "execution_payload_transactions_total_bytes", kind: "message", T: UInt32Value },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FctPreparedBlock {
    return new FctPreparedBlock().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FctPreparedBlock {
    return new FctPreparedBlock().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FctPreparedBlock {
    return new FctPreparedBlock().fromJsonString(jsonString, options);
  }

  static equals(a: FctPreparedBlock | PlainMessage<FctPreparedBlock> | undefined, b: FctPreparedBlock | PlainMessage<FctPreparedBlock> | undefined): boolean {
    return proto3.util.equals(FctPreparedBlock, a, b);
  }
}

/**
 * ListFctPreparedBlockRequest is the request message for listing fct_prepared_block records
 *
 * @generated from message cbt.ListFctPreparedBlockRequest
 */
export class ListFctPreparedBlockRequest extends Message<ListFctPreparedBlockRequest> {
  /**
   * Filter by slot_start_date_time (PRIMARY KEY - required)
   *
   * @generated from field: cbt.UInt32Filter slot_start_date_time = 1;
   */
  slotStartDateTime?: UInt32Filter;

  /**
   * Filter by slot (ORDER BY column 2 - optional)
   *
   * @generated from field: cbt.UInt32Filter slot = 2;
   */
  slot?: UInt32Filter;

  /**
   * Filter by meta_client_name (ORDER BY column 3 - optional)
   *
   * @generated from field: cbt.StringFilter meta_client_name = 3;
   */
  metaClientName?: StringFilter;

  /**
   * Filter by event_date_time (ORDER BY column 4 - optional)
   *
   * @generated from field: cbt.UInt32Filter event_date_time = 4;
   */
  eventDateTime?: UInt32Filter;

  /**
   * Filter by updated_date_time (optional)
   *
   * @generated from field: cbt.UInt32Filter updated_date_time = 5;
   */
  updatedDateTime?: UInt32Filter;

  /**
   * Filter by meta_client_version (optional)
   *
   * @generated from field: cbt.StringFilter meta_client_version = 6;
   */
  metaClientVersion?: StringFilter;

  /**
   * Filter by meta_client_implementation (optional)
   *
   * @generated from field: cbt.StringFilter meta_client_implementation = 7;
   */
  metaClientImplementation?: StringFilter;

  /**
   * Filter by meta_consensus_implementation (optional)
   *
   * @generated from field: cbt.StringFilter meta_consensus_implementation = 8;
   */
  metaConsensusImplementation?: StringFilter;

  /**
   * Filter by meta_consensus_version (optional)
   *
   * @generated from field: cbt.StringFilter meta_consensus_version = 9;
   */
  metaConsensusVersion?: StringFilter;

  /**
   * Filter by meta_client_geo_city (optional)
   *
   * @generated from field: cbt.StringFilter meta_client_geo_city = 10;
   */
  metaClientGeoCity?: StringFilter;

  /**
   * Filter by meta_client_geo_country (optional)
   *
   * @generated from field: cbt.StringFilter meta_client_geo_country = 11;
   */
  metaClientGeoCountry?: StringFilter;

  /**
   * Filter by meta_client_geo_country_code (optional)
   *
   * @generated from field: cbt.StringFilter meta_client_geo_country_code = 12;
   */
  metaClientGeoCountryCode?: StringFilter;

  /**
   * Filter by block_version (optional)
   *
   * @generated from field: cbt.StringFilter block_version = 13;
   */
  blockVersion?: StringFilter;

  /**
   * Filter by block_total_bytes (optional)
   *
   * @generated from field: cbt.NullableUInt32Filter block_total_bytes = 14;
   */
  blockTotalBytes?: NullableUInt32Filter;

  /**
   * Filter by block_total_bytes_compressed (optional)
   *
   * @generated from field: cbt.NullableUInt32Filter block_total_bytes_compressed = 15;
   */
  blockTotalBytesCompressed?: NullableUInt32Filter;

  /**
   * Filter by execution_payload_value (optional)
   *
   * @generated from field: cbt.NullableUInt64Filter execution_payload_value = 16;
   */
  executionPayloadValue?: NullableUInt64Filter;

  /**
   * Filter by consensus_payload_value (optional)
   *
   * @generated from field: cbt.NullableUInt64Filter consensus_payload_value = 17;
   */
  consensusPayloadValue?: NullableUInt64Filter;

  /**
   * Filter by execution_payload_block_number (optional)
   *
   * @generated from field: cbt.UInt32Filter execution_payload_block_number = 18;
   */
  executionPayloadBlockNumber?: UInt32Filter;

  /**
   * Filter by execution_payload_gas_limit (optional)
   *
   * @generated from field: cbt.NullableUInt64Filter execution_payload_gas_limit = 19;
   */
  executionPayloadGasLimit?: NullableUInt64Filter;

  /**
   * Filter by execution_payload_gas_used (optional)
   *
   * @generated from field: cbt.NullableUInt64Filter execution_payload_gas_used = 20;
   */
  executionPayloadGasUsed?: NullableUInt64Filter;

  /**
   * Filter by execution_payload_transactions_count (optional)
   *
   * @generated from field: cbt.NullableUInt32Filter execution_payload_transactions_count = 21;
   */
  executionPayloadTransactionsCount?: NullableUInt32Filter;

  /**
   * Filter by execution_payload_transactions_total_bytes (optional)
   *
   * @generated from field: cbt.NullableUInt32Filter execution_payload_transactions_total_bytes = 22;
   */
  executionPayloadTransactionsTotalBytes?: NullableUInt32Filter;

  /**
   * The maximum number of fct_prepared_block to return.
   * If unspecified, at most 100 items will be returned.
   * The maximum value is 10000; values above 10000 will be coerced to 10000.
   *
   * @generated from field: int32 page_size = 23;
   */
  pageSize = 0;

  /**
   * A page token, received from a previous `ListFctPreparedBlock` call.
   * Provide this to retrieve the subsequent page.
   *
   * @generated from field: string page_token = 24;
   */
  pageToken = "";

  /**
   * The order of results. Format: comma-separated list of fields.
   * Example: "foo,bar" or "foo desc,bar" for descending order on foo.
   * If unspecified, results will be returned in the default order.
   *
   * @generated from field: string order_by = 25;
   */
  orderBy = "";

  constructor(data?: PartialMessage<ListFctPreparedBlockRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cbt.ListFctPreparedBlockRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "slot_start_date_time", kind: "message", T: UInt32Filter },
    { no: 2, name: "slot", kind: "message", T: UInt32Filter },
    { no: 3, name: "meta_client_name", kind: "message", T: StringFilter },
    { no: 4, name: "event_date_time", kind: "message", T: UInt32Filter },
    { no: 5, name: "updated_date_time", kind: "message", T: UInt32Filter },
    { no: 6, name: "meta_client_version", kind: "message", T: StringFilter },
    { no: 7, name: "meta_client_implementation", kind: "message", T: StringFilter },
    { no: 8, name: "meta_consensus_implementation", kind: "message", T: StringFilter },
    { no: 9, name: "meta_consensus_version", kind: "message", T: StringFilter },
    { no: 10, name: "meta_client_geo_city", kind: "message", T: StringFilter },
    { no: 11, name: "meta_client_geo_country", kind: "message", T: StringFilter },
    { no: 12, name: "meta_client_geo_country_code", kind: "message", T: StringFilter },
    { no: 13, name: "block_version", kind: "message", T: StringFilter },
    { no: 14, name: "block_total_bytes", kind: "message", T: NullableUInt32Filter },
    { no: 15, name: "block_total_bytes_compressed", kind: "message", T: NullableUInt32Filter },
    { no: 16, name: "execution_payload_value", kind: "message", T: NullableUInt64Filter },
    { no: 17, name: "consensus_payload_value", kind: "message", T: NullableUInt64Filter },
    { no: 18, name: "execution_payload_block_number", kind: "message", T: UInt32Filter },
    { no: 19, name: "execution_payload_gas_limit", kind: "message", T: NullableUInt64Filter },
    { no: 20, name: "execution_payload_gas_used", kind: "message", T: NullableUInt64Filter },
    { no: 21, name: "execution_payload_transactions_count", kind: "message", T: NullableUInt32Filter },
    { no: 22, name: "execution_payload_transactions_total_bytes", kind: "message", T: NullableUInt32Filter },
    { no: 23, name: "page_size", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 24, name: "page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 25, name: "order_by", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListFctPreparedBlockRequest {
    return new ListFctPreparedBlockRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListFctPreparedBlockRequest {
    return new ListFctPreparedBlockRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListFctPreparedBlockRequest {
    return new ListFctPreparedBlockRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListFctPreparedBlockRequest | PlainMessage<ListFctPreparedBlockRequest> | undefined, b: ListFctPreparedBlockRequest | PlainMessage<ListFctPreparedBlockRequest> | undefined): boolean {
    return proto3.util.equals(ListFctPreparedBlockRequest, a, b);
  }
}

/**
 * ListFctPreparedBlockResponse is the response message for listing fct_prepared_block records
 *
 * @generated from message cbt.ListFctPreparedBlockResponse
 */
export class ListFctPreparedBlockResponse extends Message<ListFctPreparedBlockResponse> {
  /**
   * The list of fct_prepared_block.
   *
   * @generated from field: repeated cbt.FctPreparedBlock fct_prepared_block = 1;
   */
  fctPreparedBlock: FctPreparedBlock[] = [];

  /**
   * A token, which can be sent as `page_token` to retrieve the next page.
   * If this field is omitted, there are no subsequent pages.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken = "";

  constructor(data?: PartialMessage<ListFctPreparedBlockResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cbt.ListFctPreparedBlockResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "fct_prepared_block", kind: "message", T: FctPreparedBlock, repeated: true },
    { no: 2, name: "next_page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListFctPreparedBlockResponse {
    return new ListFctPreparedBlockResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListFctPreparedBlockResponse {
    return new ListFctPreparedBlockResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListFctPreparedBlockResponse {
    return new ListFctPreparedBlockResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListFctPreparedBlockResponse | PlainMessage<ListFctPreparedBlockResponse> | undefined, b: ListFctPreparedBlockResponse | PlainMessage<ListFctPreparedBlockResponse> | undefined): boolean {
    return proto3.util.equals(ListFctPreparedBlockResponse, a, b);
  }
}

/**
 * GetFctPreparedBlockRequest is the request message for getting a single fct_prepared_block record by primary key
 *
 * @generated from message cbt.GetFctPreparedBlockRequest
 */
export class GetFctPreparedBlockRequest extends Message<GetFctPreparedBlockRequest> {
  /**
   * The wall clock time when the slot started
   *
   * Primary key (required)
   *
   * @generated from field: uint32 slot_start_date_time = 1;
   */
  slotStartDateTime = 0;

  constructor(data?: PartialMessage<GetFctPreparedBlockRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cbt.GetFctPreparedBlockRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "slot_start_date_time", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetFctPreparedBlockRequest {
    return new GetFctPreparedBlockRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetFctPreparedBlockRequest {
    return new GetFctPreparedBlockRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetFctPreparedBlockRequest {
    return new GetFctPreparedBlockRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetFctPreparedBlockRequest | PlainMessage<GetFctPreparedBlockRequest> | undefined, b: GetFctPreparedBlockRequest | PlainMessage<GetFctPreparedBlockRequest> | undefined): boolean {
    return proto3.util.equals(GetFctPreparedBlockRequest, a, b);
  }
}

/**
 * GetFctPreparedBlockResponse is the response message for getting a single fct_prepared_block record
 *
 * @generated from message cbt.GetFctPreparedBlockResponse
 */
export class GetFctPreparedBlockResponse extends Message<GetFctPreparedBlockResponse> {
  /**
   * @generated from field: cbt.FctPreparedBlock item = 1;
   */
  item?: FctPreparedBlock;

  constructor(data?: PartialMessage<GetFctPreparedBlockResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cbt.GetFctPreparedBlockResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "item", kind: "message", T: FctPreparedBlock },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetFctPreparedBlockResponse {
    return new GetFctPreparedBlockResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetFctPreparedBlockResponse {
    return new GetFctPreparedBlockResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetFctPreparedBlockResponse {
    return new GetFctPreparedBlockResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetFctPreparedBlockResponse | PlainMessage<GetFctPreparedBlockResponse> | undefined, b: GetFctPreparedBlockResponse | PlainMessage<GetFctPreparedBlockResponse> | undefined): boolean {
    return proto3.util.equals(GetFctPreparedBlockResponse, a, b);
  }
}

