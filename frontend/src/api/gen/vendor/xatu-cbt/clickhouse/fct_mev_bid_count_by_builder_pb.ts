// @generated by protoc-gen-es v1.10.0 with parameter "target=ts"
// @generated from file vendor/xatu-cbt/clickhouse/fct_mev_bid_count_by_builder.proto (package cbt, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import { StringFilter, UInt32Filter } from "./common_pb.js";

/**
 * @generated from message cbt.FctMevBidCountByBuilder
 */
export class FctMevBidCountByBuilder extends Message<FctMevBidCountByBuilder> {
  /**
   * Timestamp when the record was last updated
   *
   * @generated from field: uint32 updated_date_time = 11;
   */
  updatedDateTime = 0;

  /**
   * Slot number within the block bid
   *
   * @generated from field: uint32 slot = 12;
   */
  slot = 0;

  /**
   * The start time for the slot that the bid is for
   *
   * @generated from field: uint32 slot_start_date_time = 13;
   */
  slotStartDateTime = 0;

  /**
   * Epoch number derived from the slot that the bid is for
   *
   * @generated from field: uint32 epoch = 14;
   */
  epoch = 0;

  /**
   * The start time for the epoch that the bid is for
   *
   * @generated from field: uint32 epoch_start_date_time = 15;
   */
  epochStartDateTime = 0;

  /**
   * The relay that the bid was fetched from
   *
   * @generated from field: string builder_pubkey = 16;
   */
  builderPubkey = "";

  /**
   * The total number of bids from the builder
   *
   * @generated from field: uint32 bid_total = 17;
   */
  bidTotal = 0;

  constructor(data?: PartialMessage<FctMevBidCountByBuilder>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cbt.FctMevBidCountByBuilder";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 11, name: "updated_date_time", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 12, name: "slot", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 13, name: "slot_start_date_time", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 14, name: "epoch", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 15, name: "epoch_start_date_time", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 16, name: "builder_pubkey", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 17, name: "bid_total", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FctMevBidCountByBuilder {
    return new FctMevBidCountByBuilder().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FctMevBidCountByBuilder {
    return new FctMevBidCountByBuilder().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FctMevBidCountByBuilder {
    return new FctMevBidCountByBuilder().fromJsonString(jsonString, options);
  }

  static equals(a: FctMevBidCountByBuilder | PlainMessage<FctMevBidCountByBuilder> | undefined, b: FctMevBidCountByBuilder | PlainMessage<FctMevBidCountByBuilder> | undefined): boolean {
    return proto3.util.equals(FctMevBidCountByBuilder, a, b);
  }
}

/**
 * ListFctMevBidCountByBuilderRequest is the request message for listing fct_mev_bid_count_by_builder records
 *
 * @generated from message cbt.ListFctMevBidCountByBuilderRequest
 */
export class ListFctMevBidCountByBuilderRequest extends Message<ListFctMevBidCountByBuilderRequest> {
  /**
   * Filter by slot_start_date_time (PRIMARY KEY - required)
   *
   * @generated from field: cbt.UInt32Filter slot_start_date_time = 1;
   */
  slotStartDateTime?: UInt32Filter;

  /**
   * Filter by builder_pubkey (ORDER BY column 2 - optional)
   *
   * @generated from field: cbt.StringFilter builder_pubkey = 2;
   */
  builderPubkey?: StringFilter;

  /**
   * Filter by updated_date_time (optional)
   *
   * @generated from field: cbt.UInt32Filter updated_date_time = 3;
   */
  updatedDateTime?: UInt32Filter;

  /**
   * Filter by slot (optional)
   *
   * @generated from field: cbt.UInt32Filter slot = 4;
   */
  slot?: UInt32Filter;

  /**
   * Filter by epoch (optional)
   *
   * @generated from field: cbt.UInt32Filter epoch = 5;
   */
  epoch?: UInt32Filter;

  /**
   * Filter by epoch_start_date_time (optional)
   *
   * @generated from field: cbt.UInt32Filter epoch_start_date_time = 6;
   */
  epochStartDateTime?: UInt32Filter;

  /**
   * Filter by bid_total (optional)
   *
   * @generated from field: cbt.UInt32Filter bid_total = 7;
   */
  bidTotal?: UInt32Filter;

  /**
   * The maximum number of fct_mev_bid_count_by_builder to return.
   * If unspecified, at most 100 items will be returned.
   * The maximum value is 10000; values above 10000 will be coerced to 10000.
   *
   * @generated from field: int32 page_size = 8;
   */
  pageSize = 0;

  /**
   * A page token, received from a previous `ListFctMevBidCountByBuilder` call.
   * Provide this to retrieve the subsequent page.
   *
   * @generated from field: string page_token = 9;
   */
  pageToken = "";

  /**
   * The order of results. Format: comma-separated list of fields.
   * Example: "foo,bar" or "foo desc,bar" for descending order on foo.
   * If unspecified, results will be returned in the default order.
   *
   * @generated from field: string order_by = 10;
   */
  orderBy = "";

  constructor(data?: PartialMessage<ListFctMevBidCountByBuilderRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cbt.ListFctMevBidCountByBuilderRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "slot_start_date_time", kind: "message", T: UInt32Filter },
    { no: 2, name: "builder_pubkey", kind: "message", T: StringFilter },
    { no: 3, name: "updated_date_time", kind: "message", T: UInt32Filter },
    { no: 4, name: "slot", kind: "message", T: UInt32Filter },
    { no: 5, name: "epoch", kind: "message", T: UInt32Filter },
    { no: 6, name: "epoch_start_date_time", kind: "message", T: UInt32Filter },
    { no: 7, name: "bid_total", kind: "message", T: UInt32Filter },
    { no: 8, name: "page_size", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 9, name: "page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "order_by", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListFctMevBidCountByBuilderRequest {
    return new ListFctMevBidCountByBuilderRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListFctMevBidCountByBuilderRequest {
    return new ListFctMevBidCountByBuilderRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListFctMevBidCountByBuilderRequest {
    return new ListFctMevBidCountByBuilderRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListFctMevBidCountByBuilderRequest | PlainMessage<ListFctMevBidCountByBuilderRequest> | undefined, b: ListFctMevBidCountByBuilderRequest | PlainMessage<ListFctMevBidCountByBuilderRequest> | undefined): boolean {
    return proto3.util.equals(ListFctMevBidCountByBuilderRequest, a, b);
  }
}

/**
 * ListFctMevBidCountByBuilderResponse is the response message for listing fct_mev_bid_count_by_builder records
 *
 * @generated from message cbt.ListFctMevBidCountByBuilderResponse
 */
export class ListFctMevBidCountByBuilderResponse extends Message<ListFctMevBidCountByBuilderResponse> {
  /**
   * The list of fct_mev_bid_count_by_builder.
   *
   * @generated from field: repeated cbt.FctMevBidCountByBuilder fct_mev_bid_count_by_builder = 1;
   */
  fctMevBidCountByBuilder: FctMevBidCountByBuilder[] = [];

  /**
   * A token, which can be sent as `page_token` to retrieve the next page.
   * If this field is omitted, there are no subsequent pages.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken = "";

  constructor(data?: PartialMessage<ListFctMevBidCountByBuilderResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cbt.ListFctMevBidCountByBuilderResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "fct_mev_bid_count_by_builder", kind: "message", T: FctMevBidCountByBuilder, repeated: true },
    { no: 2, name: "next_page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListFctMevBidCountByBuilderResponse {
    return new ListFctMevBidCountByBuilderResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListFctMevBidCountByBuilderResponse {
    return new ListFctMevBidCountByBuilderResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListFctMevBidCountByBuilderResponse {
    return new ListFctMevBidCountByBuilderResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListFctMevBidCountByBuilderResponse | PlainMessage<ListFctMevBidCountByBuilderResponse> | undefined, b: ListFctMevBidCountByBuilderResponse | PlainMessage<ListFctMevBidCountByBuilderResponse> | undefined): boolean {
    return proto3.util.equals(ListFctMevBidCountByBuilderResponse, a, b);
  }
}

/**
 * GetFctMevBidCountByBuilderRequest is the request message for getting a single fct_mev_bid_count_by_builder record by primary key
 *
 * @generated from message cbt.GetFctMevBidCountByBuilderRequest
 */
export class GetFctMevBidCountByBuilderRequest extends Message<GetFctMevBidCountByBuilderRequest> {
  /**
   * The start time for the slot that the bid is for
   *
   * Primary key (required)
   *
   * @generated from field: uint32 slot_start_date_time = 1;
   */
  slotStartDateTime = 0;

  constructor(data?: PartialMessage<GetFctMevBidCountByBuilderRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cbt.GetFctMevBidCountByBuilderRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "slot_start_date_time", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetFctMevBidCountByBuilderRequest {
    return new GetFctMevBidCountByBuilderRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetFctMevBidCountByBuilderRequest {
    return new GetFctMevBidCountByBuilderRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetFctMevBidCountByBuilderRequest {
    return new GetFctMevBidCountByBuilderRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetFctMevBidCountByBuilderRequest | PlainMessage<GetFctMevBidCountByBuilderRequest> | undefined, b: GetFctMevBidCountByBuilderRequest | PlainMessage<GetFctMevBidCountByBuilderRequest> | undefined): boolean {
    return proto3.util.equals(GetFctMevBidCountByBuilderRequest, a, b);
  }
}

/**
 * GetFctMevBidCountByBuilderResponse is the response message for getting a single fct_mev_bid_count_by_builder record
 *
 * @generated from message cbt.GetFctMevBidCountByBuilderResponse
 */
export class GetFctMevBidCountByBuilderResponse extends Message<GetFctMevBidCountByBuilderResponse> {
  /**
   * @generated from field: cbt.FctMevBidCountByBuilder item = 1;
   */
  item?: FctMevBidCountByBuilder;

  constructor(data?: PartialMessage<GetFctMevBidCountByBuilderResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cbt.GetFctMevBidCountByBuilderResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "item", kind: "message", T: FctMevBidCountByBuilder },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetFctMevBidCountByBuilderResponse {
    return new GetFctMevBidCountByBuilderResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetFctMevBidCountByBuilderResponse {
    return new GetFctMevBidCountByBuilderResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetFctMevBidCountByBuilderResponse {
    return new GetFctMevBidCountByBuilderResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetFctMevBidCountByBuilderResponse | PlainMessage<GetFctMevBidCountByBuilderResponse> | undefined, b: GetFctMevBidCountByBuilderResponse | PlainMessage<GetFctMevBidCountByBuilderResponse> | undefined): boolean {
    return proto3.util.equals(GetFctMevBidCountByBuilderResponse, a, b);
  }
}

