// @generated by protoc-gen-es v1.10.0 with parameter "target=ts"
// @generated from file vendor/xatu-cbt/clickhouse/fct_mev_bid_count_by_relay.proto (package cbt, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import { StringFilter, UInt32Filter } from "./common_pb.js";

/**
 * @generated from message cbt.FctMevBidCountByRelay
 */
export class FctMevBidCountByRelay extends Message<FctMevBidCountByRelay> {
  /**
   * Timestamp when the record was last updated
   *
   * @generated from field: uint32 updated_date_time = 11;
   */
  updatedDateTime = 0;

  /**
   * Slot number within the block bid
   *
   * @generated from field: uint32 slot = 12;
   */
  slot = 0;

  /**
   * The start time for the slot that the bid is for
   *
   * @generated from field: uint32 slot_start_date_time = 13;
   */
  slotStartDateTime = 0;

  /**
   * Epoch number derived from the slot that the bid is for
   *
   * @generated from field: uint32 epoch = 14;
   */
  epoch = 0;

  /**
   * The start time for the epoch that the bid is for
   *
   * @generated from field: uint32 epoch_start_date_time = 15;
   */
  epochStartDateTime = 0;

  /**
   * The relay that the bid was fetched from
   *
   * @generated from field: string relay_name = 16;
   */
  relayName = "";

  /**
   * The total number of bids for the relay
   *
   * @generated from field: uint32 bid_total = 17;
   */
  bidTotal = 0;

  constructor(data?: PartialMessage<FctMevBidCountByRelay>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cbt.FctMevBidCountByRelay";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 11, name: "updated_date_time", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 12, name: "slot", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 13, name: "slot_start_date_time", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 14, name: "epoch", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 15, name: "epoch_start_date_time", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 16, name: "relay_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 17, name: "bid_total", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FctMevBidCountByRelay {
    return new FctMevBidCountByRelay().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FctMevBidCountByRelay {
    return new FctMevBidCountByRelay().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FctMevBidCountByRelay {
    return new FctMevBidCountByRelay().fromJsonString(jsonString, options);
  }

  static equals(a: FctMevBidCountByRelay | PlainMessage<FctMevBidCountByRelay> | undefined, b: FctMevBidCountByRelay | PlainMessage<FctMevBidCountByRelay> | undefined): boolean {
    return proto3.util.equals(FctMevBidCountByRelay, a, b);
  }
}

/**
 * ListFctMevBidCountByRelayRequest is the request message for listing fct_mev_bid_count_by_relay records
 *
 * @generated from message cbt.ListFctMevBidCountByRelayRequest
 */
export class ListFctMevBidCountByRelayRequest extends Message<ListFctMevBidCountByRelayRequest> {
  /**
   * Filter by slot_start_date_time (PRIMARY KEY - required)
   *
   * @generated from field: cbt.UInt32Filter slot_start_date_time = 1;
   */
  slotStartDateTime?: UInt32Filter;

  /**
   * Filter by relay_name (ORDER BY column 2 - optional)
   *
   * @generated from field: cbt.StringFilter relay_name = 2;
   */
  relayName?: StringFilter;

  /**
   * Filter by updated_date_time (optional)
   *
   * @generated from field: cbt.UInt32Filter updated_date_time = 3;
   */
  updatedDateTime?: UInt32Filter;

  /**
   * Filter by slot (optional)
   *
   * @generated from field: cbt.UInt32Filter slot = 4;
   */
  slot?: UInt32Filter;

  /**
   * Filter by epoch (optional)
   *
   * @generated from field: cbt.UInt32Filter epoch = 5;
   */
  epoch?: UInt32Filter;

  /**
   * Filter by epoch_start_date_time (optional)
   *
   * @generated from field: cbt.UInt32Filter epoch_start_date_time = 6;
   */
  epochStartDateTime?: UInt32Filter;

  /**
   * Filter by bid_total (optional)
   *
   * @generated from field: cbt.UInt32Filter bid_total = 7;
   */
  bidTotal?: UInt32Filter;

  /**
   * The maximum number of fct_mev_bid_count_by_relay to return.
   * If unspecified, at most 100 items will be returned.
   * The maximum value is 10000; values above 10000 will be coerced to 10000.
   *
   * @generated from field: int32 page_size = 8;
   */
  pageSize = 0;

  /**
   * A page token, received from a previous `ListFctMevBidCountByRelay` call.
   * Provide this to retrieve the subsequent page.
   *
   * @generated from field: string page_token = 9;
   */
  pageToken = "";

  /**
   * The order of results. Format: comma-separated list of fields.
   * Example: "foo,bar" or "foo desc,bar" for descending order on foo.
   * If unspecified, results will be returned in the default order.
   *
   * @generated from field: string order_by = 10;
   */
  orderBy = "";

  constructor(data?: PartialMessage<ListFctMevBidCountByRelayRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cbt.ListFctMevBidCountByRelayRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "slot_start_date_time", kind: "message", T: UInt32Filter },
    { no: 2, name: "relay_name", kind: "message", T: StringFilter },
    { no: 3, name: "updated_date_time", kind: "message", T: UInt32Filter },
    { no: 4, name: "slot", kind: "message", T: UInt32Filter },
    { no: 5, name: "epoch", kind: "message", T: UInt32Filter },
    { no: 6, name: "epoch_start_date_time", kind: "message", T: UInt32Filter },
    { no: 7, name: "bid_total", kind: "message", T: UInt32Filter },
    { no: 8, name: "page_size", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 9, name: "page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "order_by", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListFctMevBidCountByRelayRequest {
    return new ListFctMevBidCountByRelayRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListFctMevBidCountByRelayRequest {
    return new ListFctMevBidCountByRelayRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListFctMevBidCountByRelayRequest {
    return new ListFctMevBidCountByRelayRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListFctMevBidCountByRelayRequest | PlainMessage<ListFctMevBidCountByRelayRequest> | undefined, b: ListFctMevBidCountByRelayRequest | PlainMessage<ListFctMevBidCountByRelayRequest> | undefined): boolean {
    return proto3.util.equals(ListFctMevBidCountByRelayRequest, a, b);
  }
}

/**
 * ListFctMevBidCountByRelayResponse is the response message for listing fct_mev_bid_count_by_relay records
 *
 * @generated from message cbt.ListFctMevBidCountByRelayResponse
 */
export class ListFctMevBidCountByRelayResponse extends Message<ListFctMevBidCountByRelayResponse> {
  /**
   * The list of fct_mev_bid_count_by_relay.
   *
   * @generated from field: repeated cbt.FctMevBidCountByRelay fct_mev_bid_count_by_relay = 1;
   */
  fctMevBidCountByRelay: FctMevBidCountByRelay[] = [];

  /**
   * A token, which can be sent as `page_token` to retrieve the next page.
   * If this field is omitted, there are no subsequent pages.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken = "";

  constructor(data?: PartialMessage<ListFctMevBidCountByRelayResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cbt.ListFctMevBidCountByRelayResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "fct_mev_bid_count_by_relay", kind: "message", T: FctMevBidCountByRelay, repeated: true },
    { no: 2, name: "next_page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListFctMevBidCountByRelayResponse {
    return new ListFctMevBidCountByRelayResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListFctMevBidCountByRelayResponse {
    return new ListFctMevBidCountByRelayResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListFctMevBidCountByRelayResponse {
    return new ListFctMevBidCountByRelayResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListFctMevBidCountByRelayResponse | PlainMessage<ListFctMevBidCountByRelayResponse> | undefined, b: ListFctMevBidCountByRelayResponse | PlainMessage<ListFctMevBidCountByRelayResponse> | undefined): boolean {
    return proto3.util.equals(ListFctMevBidCountByRelayResponse, a, b);
  }
}

/**
 * GetFctMevBidCountByRelayRequest is the request message for getting a single fct_mev_bid_count_by_relay record by primary key
 *
 * @generated from message cbt.GetFctMevBidCountByRelayRequest
 */
export class GetFctMevBidCountByRelayRequest extends Message<GetFctMevBidCountByRelayRequest> {
  /**
   * The start time for the slot that the bid is for
   *
   * Primary key (required)
   *
   * @generated from field: uint32 slot_start_date_time = 1;
   */
  slotStartDateTime = 0;

  constructor(data?: PartialMessage<GetFctMevBidCountByRelayRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cbt.GetFctMevBidCountByRelayRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "slot_start_date_time", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetFctMevBidCountByRelayRequest {
    return new GetFctMevBidCountByRelayRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetFctMevBidCountByRelayRequest {
    return new GetFctMevBidCountByRelayRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetFctMevBidCountByRelayRequest {
    return new GetFctMevBidCountByRelayRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetFctMevBidCountByRelayRequest | PlainMessage<GetFctMevBidCountByRelayRequest> | undefined, b: GetFctMevBidCountByRelayRequest | PlainMessage<GetFctMevBidCountByRelayRequest> | undefined): boolean {
    return proto3.util.equals(GetFctMevBidCountByRelayRequest, a, b);
  }
}

/**
 * GetFctMevBidCountByRelayResponse is the response message for getting a single fct_mev_bid_count_by_relay record
 *
 * @generated from message cbt.GetFctMevBidCountByRelayResponse
 */
export class GetFctMevBidCountByRelayResponse extends Message<GetFctMevBidCountByRelayResponse> {
  /**
   * @generated from field: cbt.FctMevBidCountByRelay item = 1;
   */
  item?: FctMevBidCountByRelay;

  constructor(data?: PartialMessage<GetFctMevBidCountByRelayResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cbt.GetFctMevBidCountByRelayResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "item", kind: "message", T: FctMevBidCountByRelay },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetFctMevBidCountByRelayResponse {
    return new GetFctMevBidCountByRelayResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetFctMevBidCountByRelayResponse {
    return new GetFctMevBidCountByRelayResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetFctMevBidCountByRelayResponse {
    return new GetFctMevBidCountByRelayResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetFctMevBidCountByRelayResponse | PlainMessage<GetFctMevBidCountByRelayResponse> | undefined, b: GetFctMevBidCountByRelayResponse | PlainMessage<GetFctMevBidCountByRelayResponse> | undefined): boolean {
    return proto3.util.equals(GetFctMevBidCountByRelayResponse, a, b);
  }
}

