// @generated by protoc-gen-es v1.10.0 with parameter "target=ts"
// @generated from file vendor/xatu-cbt/clickhouse/fct_address_storage_slot_chunked_10000.proto (package cbt, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import { UInt32Filter } from "./common_pb.js";

/**
 * @generated from message cbt.FctAddressStorageSlotChunked10000
 */
export class FctAddressStorageSlotChunked10000 extends Message<FctAddressStorageSlotChunked10000> {
  /**
   * Timestamp when the record was last updated
   *
   * @generated from field: uint32 updated_date_time = 11;
   */
  updatedDateTime = 0;

  /**
   * Start block number of the chunk
   *
   * @generated from field: uint32 chunk_start_block_number = 12;
   */
  chunkStartBlockNumber = 0;

  /**
   * Number of slots first accessed in the chunk
   *
   * @generated from field: uint32 first_accessed_slots = 13;
   */
  firstAccessedSlots = 0;

  /**
   * Number of slots last accessed in the chunk
   *
   * @generated from field: uint32 last_accessed_slots = 14;
   */
  lastAccessedSlots = 0;

  constructor(data?: PartialMessage<FctAddressStorageSlotChunked10000>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cbt.FctAddressStorageSlotChunked10000";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 11, name: "updated_date_time", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 12, name: "chunk_start_block_number", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 13, name: "first_accessed_slots", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 14, name: "last_accessed_slots", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FctAddressStorageSlotChunked10000 {
    return new FctAddressStorageSlotChunked10000().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FctAddressStorageSlotChunked10000 {
    return new FctAddressStorageSlotChunked10000().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FctAddressStorageSlotChunked10000 {
    return new FctAddressStorageSlotChunked10000().fromJsonString(jsonString, options);
  }

  static equals(a: FctAddressStorageSlotChunked10000 | PlainMessage<FctAddressStorageSlotChunked10000> | undefined, b: FctAddressStorageSlotChunked10000 | PlainMessage<FctAddressStorageSlotChunked10000> | undefined): boolean {
    return proto3.util.equals(FctAddressStorageSlotChunked10000, a, b);
  }
}

/**
 * ListFctAddressStorageSlotChunked10000Request is the request message for listing fct_address_storage_slot_chunked_10000 records
 *
 * @generated from message cbt.ListFctAddressStorageSlotChunked10000Request
 */
export class ListFctAddressStorageSlotChunked10000Request extends Message<ListFctAddressStorageSlotChunked10000Request> {
  /**
   * Filter by chunk_start_block_number (PRIMARY KEY - required)
   *
   * @generated from field: cbt.UInt32Filter chunk_start_block_number = 1;
   */
  chunkStartBlockNumber?: UInt32Filter;

  /**
   * Filter by updated_date_time (optional)
   *
   * @generated from field: cbt.UInt32Filter updated_date_time = 2;
   */
  updatedDateTime?: UInt32Filter;

  /**
   * Filter by first_accessed_slots (optional)
   *
   * @generated from field: cbt.UInt32Filter first_accessed_slots = 3;
   */
  firstAccessedSlots?: UInt32Filter;

  /**
   * Filter by last_accessed_slots (optional)
   *
   * @generated from field: cbt.UInt32Filter last_accessed_slots = 4;
   */
  lastAccessedSlots?: UInt32Filter;

  /**
   * The maximum number of fct_address_storage_slot_chunked_10000 to return.
   * If unspecified, at most 100 items will be returned.
   * The maximum value is 10000; values above 10000 will be coerced to 10000.
   *
   * @generated from field: int32 page_size = 5;
   */
  pageSize = 0;

  /**
   * A page token, received from a previous `ListFctAddressStorageSlotChunked10000` call.
   * Provide this to retrieve the subsequent page.
   *
   * @generated from field: string page_token = 6;
   */
  pageToken = "";

  /**
   * The order of results. Format: comma-separated list of fields.
   * Example: "foo,bar" or "foo desc,bar" for descending order on foo.
   * If unspecified, results will be returned in the default order.
   *
   * @generated from field: string order_by = 7;
   */
  orderBy = "";

  constructor(data?: PartialMessage<ListFctAddressStorageSlotChunked10000Request>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cbt.ListFctAddressStorageSlotChunked10000Request";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "chunk_start_block_number", kind: "message", T: UInt32Filter },
    { no: 2, name: "updated_date_time", kind: "message", T: UInt32Filter },
    { no: 3, name: "first_accessed_slots", kind: "message", T: UInt32Filter },
    { no: 4, name: "last_accessed_slots", kind: "message", T: UInt32Filter },
    { no: 5, name: "page_size", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 6, name: "page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "order_by", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListFctAddressStorageSlotChunked10000Request {
    return new ListFctAddressStorageSlotChunked10000Request().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListFctAddressStorageSlotChunked10000Request {
    return new ListFctAddressStorageSlotChunked10000Request().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListFctAddressStorageSlotChunked10000Request {
    return new ListFctAddressStorageSlotChunked10000Request().fromJsonString(jsonString, options);
  }

  static equals(a: ListFctAddressStorageSlotChunked10000Request | PlainMessage<ListFctAddressStorageSlotChunked10000Request> | undefined, b: ListFctAddressStorageSlotChunked10000Request | PlainMessage<ListFctAddressStorageSlotChunked10000Request> | undefined): boolean {
    return proto3.util.equals(ListFctAddressStorageSlotChunked10000Request, a, b);
  }
}

/**
 * ListFctAddressStorageSlotChunked10000Response is the response message for listing fct_address_storage_slot_chunked_10000 records
 *
 * @generated from message cbt.ListFctAddressStorageSlotChunked10000Response
 */
export class ListFctAddressStorageSlotChunked10000Response extends Message<ListFctAddressStorageSlotChunked10000Response> {
  /**
   * The list of fct_address_storage_slot_chunked_10000.
   *
   * @generated from field: repeated cbt.FctAddressStorageSlotChunked10000 fct_address_storage_slot_chunked_10000 = 1;
   */
  fctAddressStorageSlotChunked10000: FctAddressStorageSlotChunked10000[] = [];

  /**
   * A token, which can be sent as `page_token` to retrieve the next page.
   * If this field is omitted, there are no subsequent pages.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken = "";

  constructor(data?: PartialMessage<ListFctAddressStorageSlotChunked10000Response>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cbt.ListFctAddressStorageSlotChunked10000Response";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "fct_address_storage_slot_chunked_10000", kind: "message", T: FctAddressStorageSlotChunked10000, repeated: true },
    { no: 2, name: "next_page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListFctAddressStorageSlotChunked10000Response {
    return new ListFctAddressStorageSlotChunked10000Response().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListFctAddressStorageSlotChunked10000Response {
    return new ListFctAddressStorageSlotChunked10000Response().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListFctAddressStorageSlotChunked10000Response {
    return new ListFctAddressStorageSlotChunked10000Response().fromJsonString(jsonString, options);
  }

  static equals(a: ListFctAddressStorageSlotChunked10000Response | PlainMessage<ListFctAddressStorageSlotChunked10000Response> | undefined, b: ListFctAddressStorageSlotChunked10000Response | PlainMessage<ListFctAddressStorageSlotChunked10000Response> | undefined): boolean {
    return proto3.util.equals(ListFctAddressStorageSlotChunked10000Response, a, b);
  }
}

/**
 * GetFctAddressStorageSlotChunked10000Request is the request message for getting a single fct_address_storage_slot_chunked_10000 record by primary key
 *
 * @generated from message cbt.GetFctAddressStorageSlotChunked10000Request
 */
export class GetFctAddressStorageSlotChunked10000Request extends Message<GetFctAddressStorageSlotChunked10000Request> {
  /**
   * Start block number of the chunk
   *
   * Primary key (required)
   *
   * @generated from field: uint32 chunk_start_block_number = 1;
   */
  chunkStartBlockNumber = 0;

  constructor(data?: PartialMessage<GetFctAddressStorageSlotChunked10000Request>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cbt.GetFctAddressStorageSlotChunked10000Request";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "chunk_start_block_number", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetFctAddressStorageSlotChunked10000Request {
    return new GetFctAddressStorageSlotChunked10000Request().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetFctAddressStorageSlotChunked10000Request {
    return new GetFctAddressStorageSlotChunked10000Request().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetFctAddressStorageSlotChunked10000Request {
    return new GetFctAddressStorageSlotChunked10000Request().fromJsonString(jsonString, options);
  }

  static equals(a: GetFctAddressStorageSlotChunked10000Request | PlainMessage<GetFctAddressStorageSlotChunked10000Request> | undefined, b: GetFctAddressStorageSlotChunked10000Request | PlainMessage<GetFctAddressStorageSlotChunked10000Request> | undefined): boolean {
    return proto3.util.equals(GetFctAddressStorageSlotChunked10000Request, a, b);
  }
}

/**
 * GetFctAddressStorageSlotChunked10000Response is the response message for getting a single fct_address_storage_slot_chunked_10000 record
 *
 * @generated from message cbt.GetFctAddressStorageSlotChunked10000Response
 */
export class GetFctAddressStorageSlotChunked10000Response extends Message<GetFctAddressStorageSlotChunked10000Response> {
  /**
   * @generated from field: cbt.FctAddressStorageSlotChunked10000 item = 1;
   */
  item?: FctAddressStorageSlotChunked10000;

  constructor(data?: PartialMessage<GetFctAddressStorageSlotChunked10000Response>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cbt.GetFctAddressStorageSlotChunked10000Response";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "item", kind: "message", T: FctAddressStorageSlotChunked10000 },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetFctAddressStorageSlotChunked10000Response {
    return new GetFctAddressStorageSlotChunked10000Response().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetFctAddressStorageSlotChunked10000Response {
    return new GetFctAddressStorageSlotChunked10000Response().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetFctAddressStorageSlotChunked10000Response {
    return new GetFctAddressStorageSlotChunked10000Response().fromJsonString(jsonString, options);
  }

  static equals(a: GetFctAddressStorageSlotChunked10000Response | PlainMessage<GetFctAddressStorageSlotChunked10000Response> | undefined, b: GetFctAddressStorageSlotChunked10000Response | PlainMessage<GetFctAddressStorageSlotChunked10000Response> | undefined): boolean {
    return proto3.util.equals(GetFctAddressStorageSlotChunked10000Response, a, b);
  }
}

