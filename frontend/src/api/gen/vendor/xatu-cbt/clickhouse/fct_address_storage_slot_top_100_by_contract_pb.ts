// @generated by protoc-gen-es v1.10.0 with parameter "target=ts"
// @generated from file vendor/xatu-cbt/clickhouse/fct_address_storage_slot_top_100_by_contract.proto (package cbt, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, protoInt64 } from "@bufbuild/protobuf";
import { StringFilter, UInt32Filter, UInt64Filter } from "./common_pb.js";

/**
 * @generated from message cbt.FctAddressStorageSlotTop100ByContract
 */
export class FctAddressStorageSlotTop100ByContract extends Message<FctAddressStorageSlotTop100ByContract> {
  /**
   * Timestamp when the record was last updated
   *
   * @generated from field: uint32 updated_date_time = 11;
   */
  updatedDateTime = 0;

  /**
   * Rank by total storage slots (1=highest)
   *
   * @generated from field: uint32 rank = 12;
   */
  rank = 0;

  /**
   * The contract address
   *
   * @generated from field: string contract_address = 13;
   */
  contractAddress = "";

  /**
   * Total number of storage slots for this contract
   *
   * @generated from field: uint64 total_storage_slots = 14;
   */
  totalStorageSlots = protoInt64.zero;

  constructor(data?: PartialMessage<FctAddressStorageSlotTop100ByContract>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cbt.FctAddressStorageSlotTop100ByContract";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 11, name: "updated_date_time", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 12, name: "rank", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 13, name: "contract_address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 14, name: "total_storage_slots", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FctAddressStorageSlotTop100ByContract {
    return new FctAddressStorageSlotTop100ByContract().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FctAddressStorageSlotTop100ByContract {
    return new FctAddressStorageSlotTop100ByContract().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FctAddressStorageSlotTop100ByContract {
    return new FctAddressStorageSlotTop100ByContract().fromJsonString(jsonString, options);
  }

  static equals(a: FctAddressStorageSlotTop100ByContract | PlainMessage<FctAddressStorageSlotTop100ByContract> | undefined, b: FctAddressStorageSlotTop100ByContract | PlainMessage<FctAddressStorageSlotTop100ByContract> | undefined): boolean {
    return proto3.util.equals(FctAddressStorageSlotTop100ByContract, a, b);
  }
}

/**
 * Request for listing fct_address_storage_slot_top_100_by_contract records
 *
 * @generated from message cbt.ListFctAddressStorageSlotTop100ByContractRequest
 */
export class ListFctAddressStorageSlotTop100ByContractRequest extends Message<ListFctAddressStorageSlotTop100ByContractRequest> {
  /**
   * Filter by rank - Rank by total storage slots (1=highest) (PRIMARY KEY - required)
   *
   * @generated from field: cbt.UInt32Filter rank = 1;
   */
  rank?: UInt32Filter;

  /**
   * Filter by updated_date_time - Timestamp when the record was last updated (optional)
   *
   * @generated from field: cbt.UInt32Filter updated_date_time = 2;
   */
  updatedDateTime?: UInt32Filter;

  /**
   * Filter by contract_address - The contract address (optional)
   *
   * @generated from field: cbt.StringFilter contract_address = 3;
   */
  contractAddress?: StringFilter;

  /**
   * Filter by total_storage_slots - Total number of storage slots for this contract (optional)
   *
   * @generated from field: cbt.UInt64Filter total_storage_slots = 4;
   */
  totalStorageSlots?: UInt64Filter;

  /**
   * The maximum number of fct_address_storage_slot_top_100_by_contract to return.
   * If unspecified, at most 100 items will be returned.
   * The maximum value is 10000; values above 10000 will be coerced to 10000.
   *
   * @generated from field: int32 page_size = 5;
   */
  pageSize = 0;

  /**
   * A page token, received from a previous `ListFctAddressStorageSlotTop100ByContract` call.
   * Provide this to retrieve the subsequent page.
   *
   * @generated from field: string page_token = 6;
   */
  pageToken = "";

  /**
   * The order of results. Format: comma-separated list of fields.
   * Example: "foo,bar" or "foo desc,bar" for descending order on foo.
   * If unspecified, results will be returned in the default order.
   *
   * @generated from field: string order_by = 7;
   */
  orderBy = "";

  constructor(data?: PartialMessage<ListFctAddressStorageSlotTop100ByContractRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cbt.ListFctAddressStorageSlotTop100ByContractRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "rank", kind: "message", T: UInt32Filter },
    { no: 2, name: "updated_date_time", kind: "message", T: UInt32Filter },
    { no: 3, name: "contract_address", kind: "message", T: StringFilter },
    { no: 4, name: "total_storage_slots", kind: "message", T: UInt64Filter },
    { no: 5, name: "page_size", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 6, name: "page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "order_by", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListFctAddressStorageSlotTop100ByContractRequest {
    return new ListFctAddressStorageSlotTop100ByContractRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListFctAddressStorageSlotTop100ByContractRequest {
    return new ListFctAddressStorageSlotTop100ByContractRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListFctAddressStorageSlotTop100ByContractRequest {
    return new ListFctAddressStorageSlotTop100ByContractRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListFctAddressStorageSlotTop100ByContractRequest | PlainMessage<ListFctAddressStorageSlotTop100ByContractRequest> | undefined, b: ListFctAddressStorageSlotTop100ByContractRequest | PlainMessage<ListFctAddressStorageSlotTop100ByContractRequest> | undefined): boolean {
    return proto3.util.equals(ListFctAddressStorageSlotTop100ByContractRequest, a, b);
  }
}

/**
 * Response for listing fct_address_storage_slot_top_100_by_contract records
 *
 * @generated from message cbt.ListFctAddressStorageSlotTop100ByContractResponse
 */
export class ListFctAddressStorageSlotTop100ByContractResponse extends Message<ListFctAddressStorageSlotTop100ByContractResponse> {
  /**
   * The list of fct_address_storage_slot_top_100_by_contract.
   *
   * @generated from field: repeated cbt.FctAddressStorageSlotTop100ByContract fct_address_storage_slot_top_100_by_contract = 1;
   */
  fctAddressStorageSlotTop100ByContract: FctAddressStorageSlotTop100ByContract[] = [];

  /**
   * A token, which can be sent as `page_token` to retrieve the next page.
   * If this field is omitted, there are no subsequent pages.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken = "";

  constructor(data?: PartialMessage<ListFctAddressStorageSlotTop100ByContractResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cbt.ListFctAddressStorageSlotTop100ByContractResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "fct_address_storage_slot_top_100_by_contract", kind: "message", T: FctAddressStorageSlotTop100ByContract, repeated: true },
    { no: 2, name: "next_page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListFctAddressStorageSlotTop100ByContractResponse {
    return new ListFctAddressStorageSlotTop100ByContractResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListFctAddressStorageSlotTop100ByContractResponse {
    return new ListFctAddressStorageSlotTop100ByContractResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListFctAddressStorageSlotTop100ByContractResponse {
    return new ListFctAddressStorageSlotTop100ByContractResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListFctAddressStorageSlotTop100ByContractResponse | PlainMessage<ListFctAddressStorageSlotTop100ByContractResponse> | undefined, b: ListFctAddressStorageSlotTop100ByContractResponse | PlainMessage<ListFctAddressStorageSlotTop100ByContractResponse> | undefined): boolean {
    return proto3.util.equals(ListFctAddressStorageSlotTop100ByContractResponse, a, b);
  }
}

/**
 * Request for getting a single fct_address_storage_slot_top_100_by_contract record by primary key
 *
 * @generated from message cbt.GetFctAddressStorageSlotTop100ByContractRequest
 */
export class GetFctAddressStorageSlotTop100ByContractRequest extends Message<GetFctAddressStorageSlotTop100ByContractRequest> {
  /**
   * Rank by total storage slots (1=highest)
   *
   * Primary key (required)
   *
   * @generated from field: uint32 rank = 1;
   */
  rank = 0;

  constructor(data?: PartialMessage<GetFctAddressStorageSlotTop100ByContractRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cbt.GetFctAddressStorageSlotTop100ByContractRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "rank", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetFctAddressStorageSlotTop100ByContractRequest {
    return new GetFctAddressStorageSlotTop100ByContractRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetFctAddressStorageSlotTop100ByContractRequest {
    return new GetFctAddressStorageSlotTop100ByContractRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetFctAddressStorageSlotTop100ByContractRequest {
    return new GetFctAddressStorageSlotTop100ByContractRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetFctAddressStorageSlotTop100ByContractRequest | PlainMessage<GetFctAddressStorageSlotTop100ByContractRequest> | undefined, b: GetFctAddressStorageSlotTop100ByContractRequest | PlainMessage<GetFctAddressStorageSlotTop100ByContractRequest> | undefined): boolean {
    return proto3.util.equals(GetFctAddressStorageSlotTop100ByContractRequest, a, b);
  }
}

/**
 * Response for getting a single fct_address_storage_slot_top_100_by_contract record
 *
 * @generated from message cbt.GetFctAddressStorageSlotTop100ByContractResponse
 */
export class GetFctAddressStorageSlotTop100ByContractResponse extends Message<GetFctAddressStorageSlotTop100ByContractResponse> {
  /**
   * @generated from field: cbt.FctAddressStorageSlotTop100ByContract item = 1;
   */
  item?: FctAddressStorageSlotTop100ByContract;

  constructor(data?: PartialMessage<GetFctAddressStorageSlotTop100ByContractResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cbt.GetFctAddressStorageSlotTop100ByContractResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "item", kind: "message", T: FctAddressStorageSlotTop100ByContract },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetFctAddressStorageSlotTop100ByContractResponse {
    return new GetFctAddressStorageSlotTop100ByContractResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetFctAddressStorageSlotTop100ByContractResponse {
    return new GetFctAddressStorageSlotTop100ByContractResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetFctAddressStorageSlotTop100ByContractResponse {
    return new GetFctAddressStorageSlotTop100ByContractResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetFctAddressStorageSlotTop100ByContractResponse | PlainMessage<GetFctAddressStorageSlotTop100ByContractResponse> | undefined, b: GetFctAddressStorageSlotTop100ByContractResponse | PlainMessage<GetFctAddressStorageSlotTop100ByContractResponse> | undefined): boolean {
    return proto3.util.equals(GetFctAddressStorageSlotTop100ByContractResponse, a, b);
  }
}

