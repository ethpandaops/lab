// @generated by protoc-gen-es v1.10.0 with parameter "target=ts"
// @generated from file vendor/xatu-cbt/clickhouse/int_xatu_nodes__24h.proto (package cbt, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import { StringFilter, UInt32Filter } from "./common_pb.js";

/**
 * @generated from message cbt.IntXatuNodes24h
 */
export class IntXatuNodes24h extends Message<IntXatuNodes24h> {
  /**
   * Timestamp when the record was last updated
   *
   * @generated from field: uint32 updated_date_time = 11;
   */
  updatedDateTime = 0;

  /**
   * Timestamp when the node was last seen
   *
   * @generated from field: uint32 last_seen_date_time = 12;
   */
  lastSeenDateTime = 0;

  /**
   * Username of the node
   *
   * @generated from field: string username = 13;
   */
  username = "";

  /**
   * ID of the node
   *
   * @generated from field: string node_id = 14;
   */
  nodeId = "";

  /**
   * Classification of the node, e.g. "individual", "institution", "internal" (aka ethPandaOps) or "unclassified"
   *
   * @generated from field: string classification = 15;
   */
  classification = "";

  /**
   * Name of the client
   *
   * @generated from field: string meta_client_name = 16;
   */
  metaClientName = "";

  /**
   * Version of the client
   *
   * @generated from field: string meta_client_version = 17;
   */
  metaClientVersion = "";

  /**
   * Implementation of the client
   *
   * @generated from field: string meta_client_implementation = 18;
   */
  metaClientImplementation = "";

  /**
   * City of the client
   *
   * @generated from field: string meta_client_geo_city = 19;
   */
  metaClientGeoCity = "";

  /**
   * Country of the client
   *
   * @generated from field: string meta_client_geo_country = 20;
   */
  metaClientGeoCountry = "";

  /**
   * Country code of the client
   *
   * @generated from field: string meta_client_geo_country_code = 21;
   */
  metaClientGeoCountryCode = "";

  /**
   * Continent code of the client
   *
   * @generated from field: string meta_client_geo_continent_code = 22;
   */
  metaClientGeoContinentCode = "";

  /**
   * Ethereum consensus client version
   *
   * @generated from field: string meta_consensus_version = 23;
   */
  metaConsensusVersion = "";

  /**
   * Ethereum consensus client implementation
   *
   * @generated from field: string meta_consensus_implementation = 24;
   */
  metaConsensusImplementation = "";

  constructor(data?: PartialMessage<IntXatuNodes24h>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cbt.IntXatuNodes24h";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 11, name: "updated_date_time", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 12, name: "last_seen_date_time", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 13, name: "username", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 14, name: "node_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 15, name: "classification", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 16, name: "meta_client_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 17, name: "meta_client_version", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 18, name: "meta_client_implementation", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 19, name: "meta_client_geo_city", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 20, name: "meta_client_geo_country", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 21, name: "meta_client_geo_country_code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 22, name: "meta_client_geo_continent_code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 23, name: "meta_consensus_version", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 24, name: "meta_consensus_implementation", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): IntXatuNodes24h {
    return new IntXatuNodes24h().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): IntXatuNodes24h {
    return new IntXatuNodes24h().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): IntXatuNodes24h {
    return new IntXatuNodes24h().fromJsonString(jsonString, options);
  }

  static equals(a: IntXatuNodes24h | PlainMessage<IntXatuNodes24h> | undefined, b: IntXatuNodes24h | PlainMessage<IntXatuNodes24h> | undefined): boolean {
    return proto3.util.equals(IntXatuNodes24h, a, b);
  }
}

/**
 * ListIntXatuNodes24hRequest is the request message for listing int_xatu_nodes__24h records
 *
 * @generated from message cbt.ListIntXatuNodes24hRequest
 */
export class ListIntXatuNodes24hRequest extends Message<ListIntXatuNodes24hRequest> {
  /**
   * Filter by meta_client_name (PRIMARY KEY - required)
   *
   * @generated from field: cbt.StringFilter meta_client_name = 1;
   */
  metaClientName?: StringFilter;

  /**
   * Filter by updated_date_time (optional)
   *
   * @generated from field: cbt.UInt32Filter updated_date_time = 2;
   */
  updatedDateTime?: UInt32Filter;

  /**
   * Filter by last_seen_date_time (optional)
   *
   * @generated from field: cbt.UInt32Filter last_seen_date_time = 3;
   */
  lastSeenDateTime?: UInt32Filter;

  /**
   * Filter by username (optional)
   *
   * @generated from field: cbt.StringFilter username = 4;
   */
  username?: StringFilter;

  /**
   * Filter by node_id (optional)
   *
   * @generated from field: cbt.StringFilter node_id = 5;
   */
  nodeId?: StringFilter;

  /**
   * Filter by classification (optional)
   *
   * @generated from field: cbt.StringFilter classification = 6;
   */
  classification?: StringFilter;

  /**
   * Filter by meta_client_version (optional)
   *
   * @generated from field: cbt.StringFilter meta_client_version = 7;
   */
  metaClientVersion?: StringFilter;

  /**
   * Filter by meta_client_implementation (optional)
   *
   * @generated from field: cbt.StringFilter meta_client_implementation = 8;
   */
  metaClientImplementation?: StringFilter;

  /**
   * Filter by meta_client_geo_city (optional)
   *
   * @generated from field: cbt.StringFilter meta_client_geo_city = 9;
   */
  metaClientGeoCity?: StringFilter;

  /**
   * Filter by meta_client_geo_country (optional)
   *
   * @generated from field: cbt.StringFilter meta_client_geo_country = 10;
   */
  metaClientGeoCountry?: StringFilter;

  /**
   * Filter by meta_client_geo_country_code (optional)
   *
   * @generated from field: cbt.StringFilter meta_client_geo_country_code = 11;
   */
  metaClientGeoCountryCode?: StringFilter;

  /**
   * Filter by meta_client_geo_continent_code (optional)
   *
   * @generated from field: cbt.StringFilter meta_client_geo_continent_code = 12;
   */
  metaClientGeoContinentCode?: StringFilter;

  /**
   * Filter by meta_consensus_version (optional)
   *
   * @generated from field: cbt.StringFilter meta_consensus_version = 13;
   */
  metaConsensusVersion?: StringFilter;

  /**
   * Filter by meta_consensus_implementation (optional)
   *
   * @generated from field: cbt.StringFilter meta_consensus_implementation = 14;
   */
  metaConsensusImplementation?: StringFilter;

  /**
   * The maximum number of int_xatu_nodes__24h to return.
   * If unspecified, at most 100 items will be returned.
   * The maximum value is 1000; values above 1000 will be coerced to 1000.
   *
   * @generated from field: int32 page_size = 15;
   */
  pageSize = 0;

  /**
   * A page token, received from a previous `ListIntXatuNodes24h` call.
   * Provide this to retrieve the subsequent page.
   *
   * @generated from field: string page_token = 16;
   */
  pageToken = "";

  /**
   * The order of results. Format: comma-separated list of fields.
   * Example: "foo,bar" or "foo desc,bar" for descending order on foo.
   * If unspecified, results will be returned in the default order.
   *
   * @generated from field: string order_by = 17;
   */
  orderBy = "";

  constructor(data?: PartialMessage<ListIntXatuNodes24hRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cbt.ListIntXatuNodes24hRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "meta_client_name", kind: "message", T: StringFilter },
    { no: 2, name: "updated_date_time", kind: "message", T: UInt32Filter },
    { no: 3, name: "last_seen_date_time", kind: "message", T: UInt32Filter },
    { no: 4, name: "username", kind: "message", T: StringFilter },
    { no: 5, name: "node_id", kind: "message", T: StringFilter },
    { no: 6, name: "classification", kind: "message", T: StringFilter },
    { no: 7, name: "meta_client_version", kind: "message", T: StringFilter },
    { no: 8, name: "meta_client_implementation", kind: "message", T: StringFilter },
    { no: 9, name: "meta_client_geo_city", kind: "message", T: StringFilter },
    { no: 10, name: "meta_client_geo_country", kind: "message", T: StringFilter },
    { no: 11, name: "meta_client_geo_country_code", kind: "message", T: StringFilter },
    { no: 12, name: "meta_client_geo_continent_code", kind: "message", T: StringFilter },
    { no: 13, name: "meta_consensus_version", kind: "message", T: StringFilter },
    { no: 14, name: "meta_consensus_implementation", kind: "message", T: StringFilter },
    { no: 15, name: "page_size", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 16, name: "page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 17, name: "order_by", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListIntXatuNodes24hRequest {
    return new ListIntXatuNodes24hRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListIntXatuNodes24hRequest {
    return new ListIntXatuNodes24hRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListIntXatuNodes24hRequest {
    return new ListIntXatuNodes24hRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListIntXatuNodes24hRequest | PlainMessage<ListIntXatuNodes24hRequest> | undefined, b: ListIntXatuNodes24hRequest | PlainMessage<ListIntXatuNodes24hRequest> | undefined): boolean {
    return proto3.util.equals(ListIntXatuNodes24hRequest, a, b);
  }
}

/**
 * ListIntXatuNodes24hResponse is the response message for listing int_xatu_nodes__24h records
 *
 * @generated from message cbt.ListIntXatuNodes24hResponse
 */
export class ListIntXatuNodes24hResponse extends Message<ListIntXatuNodes24hResponse> {
  /**
   * The list of int_xatu_nodes__24h.
   *
   * @generated from field: repeated cbt.IntXatuNodes24h int_xatu_nodes__24h = 1;
   */
  intXatuNodes24h: IntXatuNodes24h[] = [];

  /**
   * A token, which can be sent as `page_token` to retrieve the next page.
   * If this field is omitted, there are no subsequent pages.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken = "";

  constructor(data?: PartialMessage<ListIntXatuNodes24hResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cbt.ListIntXatuNodes24hResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "int_xatu_nodes__24h", kind: "message", T: IntXatuNodes24h, repeated: true },
    { no: 2, name: "next_page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListIntXatuNodes24hResponse {
    return new ListIntXatuNodes24hResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListIntXatuNodes24hResponse {
    return new ListIntXatuNodes24hResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListIntXatuNodes24hResponse {
    return new ListIntXatuNodes24hResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListIntXatuNodes24hResponse | PlainMessage<ListIntXatuNodes24hResponse> | undefined, b: ListIntXatuNodes24hResponse | PlainMessage<ListIntXatuNodes24hResponse> | undefined): boolean {
    return proto3.util.equals(ListIntXatuNodes24hResponse, a, b);
  }
}

/**
 * GetIntXatuNodes24hRequest is the request message for getting a single int_xatu_nodes__24h record by primary key
 *
 * @generated from message cbt.GetIntXatuNodes24hRequest
 */
export class GetIntXatuNodes24hRequest extends Message<GetIntXatuNodes24hRequest> {
  /**
   * Name of the client
   *
   * Primary key (required)
   *
   * @generated from field: string meta_client_name = 1;
   */
  metaClientName = "";

  constructor(data?: PartialMessage<GetIntXatuNodes24hRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cbt.GetIntXatuNodes24hRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "meta_client_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetIntXatuNodes24hRequest {
    return new GetIntXatuNodes24hRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetIntXatuNodes24hRequest {
    return new GetIntXatuNodes24hRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetIntXatuNodes24hRequest {
    return new GetIntXatuNodes24hRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetIntXatuNodes24hRequest | PlainMessage<GetIntXatuNodes24hRequest> | undefined, b: GetIntXatuNodes24hRequest | PlainMessage<GetIntXatuNodes24hRequest> | undefined): boolean {
    return proto3.util.equals(GetIntXatuNodes24hRequest, a, b);
  }
}

/**
 * GetIntXatuNodes24hResponse is the response message for getting a single int_xatu_nodes__24h record
 *
 * @generated from message cbt.GetIntXatuNodes24hResponse
 */
export class GetIntXatuNodes24hResponse extends Message<GetIntXatuNodes24hResponse> {
  /**
   * @generated from field: cbt.IntXatuNodes24h item = 1;
   */
  item?: IntXatuNodes24h;

  constructor(data?: PartialMessage<GetIntXatuNodes24hResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cbt.GetIntXatuNodes24hResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "item", kind: "message", T: IntXatuNodes24h },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetIntXatuNodes24hResponse {
    return new GetIntXatuNodes24hResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetIntXatuNodes24hResponse {
    return new GetIntXatuNodes24hResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetIntXatuNodes24hResponse {
    return new GetIntXatuNodes24hResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetIntXatuNodes24hResponse | PlainMessage<GetIntXatuNodes24hResponse> | undefined, b: GetIntXatuNodes24hResponse | PlainMessage<GetIntXatuNodes24hResponse> | undefined): boolean {
    return proto3.util.equals(GetIntXatuNodes24hResponse, a, b);
  }
}

