// @generated by protoc-gen-es v1.10.0 with parameter "target=ts"
// @generated from file vendor/xatu-cbt/clickhouse/int_block_proposer_canonical.proto (package cbt, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, StringValue } from "@bufbuild/protobuf";
import { NullableStringFilter, StringFilter, UInt32Filter } from "./common_pb.js";

/**
 * @generated from message cbt.IntBlockProposerCanonical
 */
export class IntBlockProposerCanonical extends Message<IntBlockProposerCanonical> {
  /**
   * Timestamp when the record was last updated
   *
   * @generated from field: uint32 updated_date_time = 11;
   */
  updatedDateTime = 0;

  /**
   * The slot number
   *
   * @generated from field: uint32 slot = 12;
   */
  slot = 0;

  /**
   * The wall clock time when the slot started
   *
   * @generated from field: uint32 slot_start_date_time = 13;
   */
  slotStartDateTime = 0;

  /**
   * The epoch number containing the slot
   *
   * @generated from field: uint32 epoch = 14;
   */
  epoch = 0;

  /**
   * The wall clock time when the epoch started
   *
   * @generated from field: uint32 epoch_start_date_time = 15;
   */
  epochStartDateTime = 0;

  /**
   * The validator index of the proposer for the slot
   *
   * @generated from field: uint32 proposer_validator_index = 16;
   */
  proposerValidatorIndex = 0;

  /**
   * The public key of the validator proposer
   *
   * @generated from field: string proposer_pubkey = 17;
   */
  proposerPubkey = "";

  /**
   * The beacon block root hash. Null if a slot was missed
   *
   * @generated from field: google.protobuf.StringValue block_root = 18;
   */
  blockRoot?: string;

  constructor(data?: PartialMessage<IntBlockProposerCanonical>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cbt.IntBlockProposerCanonical";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 11, name: "updated_date_time", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 12, name: "slot", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 13, name: "slot_start_date_time", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 14, name: "epoch", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 15, name: "epoch_start_date_time", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 16, name: "proposer_validator_index", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 17, name: "proposer_pubkey", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 18, name: "block_root", kind: "message", T: StringValue },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): IntBlockProposerCanonical {
    return new IntBlockProposerCanonical().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): IntBlockProposerCanonical {
    return new IntBlockProposerCanonical().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): IntBlockProposerCanonical {
    return new IntBlockProposerCanonical().fromJsonString(jsonString, options);
  }

  static equals(a: IntBlockProposerCanonical | PlainMessage<IntBlockProposerCanonical> | undefined, b: IntBlockProposerCanonical | PlainMessage<IntBlockProposerCanonical> | undefined): boolean {
    return proto3.util.equals(IntBlockProposerCanonical, a, b);
  }
}

/**
 * ListIntBlockProposerCanonicalRequest is the request message for listing int_block_proposer_canonical records
 *
 * @generated from message cbt.ListIntBlockProposerCanonicalRequest
 */
export class ListIntBlockProposerCanonicalRequest extends Message<ListIntBlockProposerCanonicalRequest> {
  /**
   * Filter by slot_start_date_time (PRIMARY KEY - required)
   *
   * @generated from field: cbt.UInt32Filter slot_start_date_time = 1;
   */
  slotStartDateTime?: UInt32Filter;

  /**
   * Filter by updated_date_time (optional)
   *
   * @generated from field: cbt.UInt32Filter updated_date_time = 2;
   */
  updatedDateTime?: UInt32Filter;

  /**
   * Filter by slot (optional)
   *
   * @generated from field: cbt.UInt32Filter slot = 3;
   */
  slot?: UInt32Filter;

  /**
   * Filter by epoch (optional)
   *
   * @generated from field: cbt.UInt32Filter epoch = 4;
   */
  epoch?: UInt32Filter;

  /**
   * Filter by epoch_start_date_time (optional)
   *
   * @generated from field: cbt.UInt32Filter epoch_start_date_time = 5;
   */
  epochStartDateTime?: UInt32Filter;

  /**
   * Filter by proposer_validator_index (optional)
   *
   * @generated from field: cbt.UInt32Filter proposer_validator_index = 6;
   */
  proposerValidatorIndex?: UInt32Filter;

  /**
   * Filter by proposer_pubkey (optional)
   *
   * @generated from field: cbt.StringFilter proposer_pubkey = 7;
   */
  proposerPubkey?: StringFilter;

  /**
   * Filter by block_root (optional)
   *
   * @generated from field: cbt.NullableStringFilter block_root = 8;
   */
  blockRoot?: NullableStringFilter;

  /**
   * The maximum number of int_block_proposer_canonical to return.
   * If unspecified, at most 100 items will be returned.
   * The maximum value is 10000; values above 10000 will be coerced to 10000.
   *
   * @generated from field: int32 page_size = 9;
   */
  pageSize = 0;

  /**
   * A page token, received from a previous `ListIntBlockProposerCanonical` call.
   * Provide this to retrieve the subsequent page.
   *
   * @generated from field: string page_token = 10;
   */
  pageToken = "";

  /**
   * The order of results. Format: comma-separated list of fields.
   * Example: "foo,bar" or "foo desc,bar" for descending order on foo.
   * If unspecified, results will be returned in the default order.
   *
   * @generated from field: string order_by = 11;
   */
  orderBy = "";

  constructor(data?: PartialMessage<ListIntBlockProposerCanonicalRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cbt.ListIntBlockProposerCanonicalRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "slot_start_date_time", kind: "message", T: UInt32Filter },
    { no: 2, name: "updated_date_time", kind: "message", T: UInt32Filter },
    { no: 3, name: "slot", kind: "message", T: UInt32Filter },
    { no: 4, name: "epoch", kind: "message", T: UInt32Filter },
    { no: 5, name: "epoch_start_date_time", kind: "message", T: UInt32Filter },
    { no: 6, name: "proposer_validator_index", kind: "message", T: UInt32Filter },
    { no: 7, name: "proposer_pubkey", kind: "message", T: StringFilter },
    { no: 8, name: "block_root", kind: "message", T: NullableStringFilter },
    { no: 9, name: "page_size", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 10, name: "page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "order_by", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListIntBlockProposerCanonicalRequest {
    return new ListIntBlockProposerCanonicalRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListIntBlockProposerCanonicalRequest {
    return new ListIntBlockProposerCanonicalRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListIntBlockProposerCanonicalRequest {
    return new ListIntBlockProposerCanonicalRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListIntBlockProposerCanonicalRequest | PlainMessage<ListIntBlockProposerCanonicalRequest> | undefined, b: ListIntBlockProposerCanonicalRequest | PlainMessage<ListIntBlockProposerCanonicalRequest> | undefined): boolean {
    return proto3.util.equals(ListIntBlockProposerCanonicalRequest, a, b);
  }
}

/**
 * ListIntBlockProposerCanonicalResponse is the response message for listing int_block_proposer_canonical records
 *
 * @generated from message cbt.ListIntBlockProposerCanonicalResponse
 */
export class ListIntBlockProposerCanonicalResponse extends Message<ListIntBlockProposerCanonicalResponse> {
  /**
   * The list of int_block_proposer_canonical.
   *
   * @generated from field: repeated cbt.IntBlockProposerCanonical int_block_proposer_canonical = 1;
   */
  intBlockProposerCanonical: IntBlockProposerCanonical[] = [];

  /**
   * A token, which can be sent as `page_token` to retrieve the next page.
   * If this field is omitted, there are no subsequent pages.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken = "";

  constructor(data?: PartialMessage<ListIntBlockProposerCanonicalResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cbt.ListIntBlockProposerCanonicalResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "int_block_proposer_canonical", kind: "message", T: IntBlockProposerCanonical, repeated: true },
    { no: 2, name: "next_page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListIntBlockProposerCanonicalResponse {
    return new ListIntBlockProposerCanonicalResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListIntBlockProposerCanonicalResponse {
    return new ListIntBlockProposerCanonicalResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListIntBlockProposerCanonicalResponse {
    return new ListIntBlockProposerCanonicalResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListIntBlockProposerCanonicalResponse | PlainMessage<ListIntBlockProposerCanonicalResponse> | undefined, b: ListIntBlockProposerCanonicalResponse | PlainMessage<ListIntBlockProposerCanonicalResponse> | undefined): boolean {
    return proto3.util.equals(ListIntBlockProposerCanonicalResponse, a, b);
  }
}

/**
 * GetIntBlockProposerCanonicalRequest is the request message for getting a single int_block_proposer_canonical record by primary key
 *
 * @generated from message cbt.GetIntBlockProposerCanonicalRequest
 */
export class GetIntBlockProposerCanonicalRequest extends Message<GetIntBlockProposerCanonicalRequest> {
  /**
   * The wall clock time when the slot started
   *
   * Primary key (required)
   *
   * @generated from field: uint32 slot_start_date_time = 1;
   */
  slotStartDateTime = 0;

  constructor(data?: PartialMessage<GetIntBlockProposerCanonicalRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cbt.GetIntBlockProposerCanonicalRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "slot_start_date_time", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetIntBlockProposerCanonicalRequest {
    return new GetIntBlockProposerCanonicalRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetIntBlockProposerCanonicalRequest {
    return new GetIntBlockProposerCanonicalRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetIntBlockProposerCanonicalRequest {
    return new GetIntBlockProposerCanonicalRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetIntBlockProposerCanonicalRequest | PlainMessage<GetIntBlockProposerCanonicalRequest> | undefined, b: GetIntBlockProposerCanonicalRequest | PlainMessage<GetIntBlockProposerCanonicalRequest> | undefined): boolean {
    return proto3.util.equals(GetIntBlockProposerCanonicalRequest, a, b);
  }
}

/**
 * GetIntBlockProposerCanonicalResponse is the response message for getting a single int_block_proposer_canonical record
 *
 * @generated from message cbt.GetIntBlockProposerCanonicalResponse
 */
export class GetIntBlockProposerCanonicalResponse extends Message<GetIntBlockProposerCanonicalResponse> {
  /**
   * @generated from field: cbt.IntBlockProposerCanonical item = 1;
   */
  item?: IntBlockProposerCanonical;

  constructor(data?: PartialMessage<GetIntBlockProposerCanonicalResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cbt.GetIntBlockProposerCanonicalResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "item", kind: "message", T: IntBlockProposerCanonical },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetIntBlockProposerCanonicalResponse {
    return new GetIntBlockProposerCanonicalResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetIntBlockProposerCanonicalResponse {
    return new GetIntBlockProposerCanonicalResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetIntBlockProposerCanonicalResponse {
    return new GetIntBlockProposerCanonicalResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetIntBlockProposerCanonicalResponse | PlainMessage<GetIntBlockProposerCanonicalResponse> | undefined, b: GetIntBlockProposerCanonicalResponse | PlainMessage<GetIntBlockProposerCanonicalResponse> | undefined): boolean {
    return proto3.util.equals(GetIntBlockProposerCanonicalResponse, a, b);
  }
}

