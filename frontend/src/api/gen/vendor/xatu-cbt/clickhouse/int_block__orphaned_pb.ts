// @generated by protoc-gen-es v1.10.0 with parameter "target=ts"
// @generated from file vendor/xatu-cbt/clickhouse/int_block__orphaned.proto (package cbt, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, UInt32Value } from "@bufbuild/protobuf";
import { NullableUInt32Filter, StringFilter, UInt32Filter } from "./common_pb.js";

/**
 * @generated from message cbt.IntBlockOrphaned
 */
export class IntBlockOrphaned extends Message<IntBlockOrphaned> {
  /**
   * Timestamp when the record was last updated
   *
   * @generated from field: uint32 updated_date_time = 11;
   */
  updatedDateTime = 0;

  /**
   * Slot of the orphaned (reorged) block
   *
   * @generated from field: uint32 slot = 12;
   */
  slot = 0;

  /**
   * The wall clock time when the slot started
   *
   * @generated from field: uint32 slot_start_date_time = 13;
   */
  slotStartDateTime = 0;

  /**
   * Epoch containing the slot
   *
   * @generated from field: uint32 epoch = 14;
   */
  epoch = 0;

  /**
   * The wall clock time when the epoch started
   *
   * @generated from field: uint32 epoch_start_date_time = 15;
   */
  epochStartDateTime = 0;

  /**
   * Beacon block root hash (orphaned)
   *
   * @generated from field: string block_root = 16;
   */
  blockRoot = "";

  /**
   * Proposer index
   *
   * @generated from field: google.protobuf.UInt32Value proposer_index = 17;
   */
  proposerIndex?: number;

  constructor(data?: PartialMessage<IntBlockOrphaned>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cbt.IntBlockOrphaned";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 11, name: "updated_date_time", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 12, name: "slot", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 13, name: "slot_start_date_time", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 14, name: "epoch", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 15, name: "epoch_start_date_time", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 16, name: "block_root", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 17, name: "proposer_index", kind: "message", T: UInt32Value },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): IntBlockOrphaned {
    return new IntBlockOrphaned().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): IntBlockOrphaned {
    return new IntBlockOrphaned().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): IntBlockOrphaned {
    return new IntBlockOrphaned().fromJsonString(jsonString, options);
  }

  static equals(a: IntBlockOrphaned | PlainMessage<IntBlockOrphaned> | undefined, b: IntBlockOrphaned | PlainMessage<IntBlockOrphaned> | undefined): boolean {
    return proto3.util.equals(IntBlockOrphaned, a, b);
  }
}

/**
 * ListIntBlockOrphanedRequest is the request message for listing int_block__orphaned records
 *
 * @generated from message cbt.ListIntBlockOrphanedRequest
 */
export class ListIntBlockOrphanedRequest extends Message<ListIntBlockOrphanedRequest> {
  /**
   * Filter by slot_start_date_time (PRIMARY KEY - required)
   *
   * @generated from field: cbt.UInt32Filter slot_start_date_time = 1;
   */
  slotStartDateTime?: UInt32Filter;

  /**
   * Filter by block_root (ORDER BY column 2 - optional)
   *
   * @generated from field: cbt.StringFilter block_root = 2;
   */
  blockRoot?: StringFilter;

  /**
   * Filter by updated_date_time (optional)
   *
   * @generated from field: cbt.UInt32Filter updated_date_time = 3;
   */
  updatedDateTime?: UInt32Filter;

  /**
   * Filter by slot (optional)
   *
   * @generated from field: cbt.UInt32Filter slot = 4;
   */
  slot?: UInt32Filter;

  /**
   * Filter by epoch (optional)
   *
   * @generated from field: cbt.UInt32Filter epoch = 5;
   */
  epoch?: UInt32Filter;

  /**
   * Filter by epoch_start_date_time (optional)
   *
   * @generated from field: cbt.UInt32Filter epoch_start_date_time = 6;
   */
  epochStartDateTime?: UInt32Filter;

  /**
   * Filter by proposer_index (optional)
   *
   * @generated from field: cbt.NullableUInt32Filter proposer_index = 7;
   */
  proposerIndex?: NullableUInt32Filter;

  /**
   * The maximum number of int_block__orphaned to return.
   * If unspecified, at most 100 items will be returned.
   * The maximum value is 1000; values above 1000 will be coerced to 1000.
   *
   * @generated from field: int32 page_size = 8;
   */
  pageSize = 0;

  /**
   * A page token, received from a previous `ListIntBlockOrphaned` call.
   * Provide this to retrieve the subsequent page.
   *
   * @generated from field: string page_token = 9;
   */
  pageToken = "";

  /**
   * The order of results. Format: comma-separated list of fields.
   * Example: "foo,bar" or "foo desc,bar" for descending order on foo.
   * If unspecified, results will be returned in the default order.
   *
   * @generated from field: string order_by = 10;
   */
  orderBy = "";

  constructor(data?: PartialMessage<ListIntBlockOrphanedRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cbt.ListIntBlockOrphanedRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "slot_start_date_time", kind: "message", T: UInt32Filter },
    { no: 2, name: "block_root", kind: "message", T: StringFilter },
    { no: 3, name: "updated_date_time", kind: "message", T: UInt32Filter },
    { no: 4, name: "slot", kind: "message", T: UInt32Filter },
    { no: 5, name: "epoch", kind: "message", T: UInt32Filter },
    { no: 6, name: "epoch_start_date_time", kind: "message", T: UInt32Filter },
    { no: 7, name: "proposer_index", kind: "message", T: NullableUInt32Filter },
    { no: 8, name: "page_size", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 9, name: "page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "order_by", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListIntBlockOrphanedRequest {
    return new ListIntBlockOrphanedRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListIntBlockOrphanedRequest {
    return new ListIntBlockOrphanedRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListIntBlockOrphanedRequest {
    return new ListIntBlockOrphanedRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListIntBlockOrphanedRequest | PlainMessage<ListIntBlockOrphanedRequest> | undefined, b: ListIntBlockOrphanedRequest | PlainMessage<ListIntBlockOrphanedRequest> | undefined): boolean {
    return proto3.util.equals(ListIntBlockOrphanedRequest, a, b);
  }
}

/**
 * ListIntBlockOrphanedResponse is the response message for listing int_block__orphaned records
 *
 * @generated from message cbt.ListIntBlockOrphanedResponse
 */
export class ListIntBlockOrphanedResponse extends Message<ListIntBlockOrphanedResponse> {
  /**
   * The list of int_block__orphaned.
   *
   * @generated from field: repeated cbt.IntBlockOrphaned int_block__orphaned = 1;
   */
  intBlockOrphaned: IntBlockOrphaned[] = [];

  /**
   * A token, which can be sent as `page_token` to retrieve the next page.
   * If this field is omitted, there are no subsequent pages.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken = "";

  constructor(data?: PartialMessage<ListIntBlockOrphanedResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cbt.ListIntBlockOrphanedResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "int_block__orphaned", kind: "message", T: IntBlockOrphaned, repeated: true },
    { no: 2, name: "next_page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListIntBlockOrphanedResponse {
    return new ListIntBlockOrphanedResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListIntBlockOrphanedResponse {
    return new ListIntBlockOrphanedResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListIntBlockOrphanedResponse {
    return new ListIntBlockOrphanedResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListIntBlockOrphanedResponse | PlainMessage<ListIntBlockOrphanedResponse> | undefined, b: ListIntBlockOrphanedResponse | PlainMessage<ListIntBlockOrphanedResponse> | undefined): boolean {
    return proto3.util.equals(ListIntBlockOrphanedResponse, a, b);
  }
}

/**
 * GetIntBlockOrphanedRequest is the request message for getting a single int_block__orphaned record by primary key
 *
 * @generated from message cbt.GetIntBlockOrphanedRequest
 */
export class GetIntBlockOrphanedRequest extends Message<GetIntBlockOrphanedRequest> {
  /**
   * The wall clock time when the slot started
   *
   * Primary key (required)
   *
   * @generated from field: uint32 slot_start_date_time = 1;
   */
  slotStartDateTime = 0;

  constructor(data?: PartialMessage<GetIntBlockOrphanedRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cbt.GetIntBlockOrphanedRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "slot_start_date_time", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetIntBlockOrphanedRequest {
    return new GetIntBlockOrphanedRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetIntBlockOrphanedRequest {
    return new GetIntBlockOrphanedRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetIntBlockOrphanedRequest {
    return new GetIntBlockOrphanedRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetIntBlockOrphanedRequest | PlainMessage<GetIntBlockOrphanedRequest> | undefined, b: GetIntBlockOrphanedRequest | PlainMessage<GetIntBlockOrphanedRequest> | undefined): boolean {
    return proto3.util.equals(GetIntBlockOrphanedRequest, a, b);
  }
}

/**
 * GetIntBlockOrphanedResponse is the response message for getting a single int_block__orphaned record
 *
 * @generated from message cbt.GetIntBlockOrphanedResponse
 */
export class GetIntBlockOrphanedResponse extends Message<GetIntBlockOrphanedResponse> {
  /**
   * @generated from field: cbt.IntBlockOrphaned item = 1;
   */
  item?: IntBlockOrphaned;

  constructor(data?: PartialMessage<GetIntBlockOrphanedResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cbt.GetIntBlockOrphanedResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "item", kind: "message", T: IntBlockOrphaned },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetIntBlockOrphanedResponse {
    return new GetIntBlockOrphanedResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetIntBlockOrphanedResponse {
    return new GetIntBlockOrphanedResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetIntBlockOrphanedResponse {
    return new GetIntBlockOrphanedResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetIntBlockOrphanedResponse | PlainMessage<GetIntBlockOrphanedResponse> | undefined, b: GetIntBlockOrphanedResponse | PlainMessage<GetIntBlockOrphanedResponse> | undefined): boolean {
    return proto3.util.equals(GetIntBlockOrphanedResponse, a, b);
  }
}

