// @generated by protoc-gen-es v1.10.0 with parameter "target=ts"
// @generated from file backend/pkg/api/proto/lab_api.proto (package labapi, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, protoInt64 } from "@bufbuild/protobuf";
import { BeaconSlotData, LocallyBuiltSlotBlocks } from "../../server/proto/beacon_slots/beacon_slots_pb.js";
import { FrontendConfig } from "../../server/proto/lab/lab_pb.js";

/**
 * @generated from message labapi.GetSlotDataRequest
 */
export class GetSlotDataRequest extends Message<GetSlotDataRequest> {
  /**
   * @generated from field: string network = 1;
   */
  network = "";

  /**
   * @generated from field: uint64 slot = 2;
   */
  slot = protoInt64.zero;

  constructor(data?: PartialMessage<GetSlotDataRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "labapi.GetSlotDataRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "network", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "slot", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetSlotDataRequest {
    return new GetSlotDataRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetSlotDataRequest {
    return new GetSlotDataRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetSlotDataRequest {
    return new GetSlotDataRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetSlotDataRequest | PlainMessage<GetSlotDataRequest> | undefined, b: GetSlotDataRequest | PlainMessage<GetSlotDataRequest> | undefined): boolean {
    return proto3.util.equals(GetSlotDataRequest, a, b);
  }
}

/**
 * @generated from message labapi.GetSlotDataResponse
 */
export class GetSlotDataResponse extends Message<GetSlotDataResponse> {
  /**
   * @generated from field: beacon_slots.BeaconSlotData data = 1;
   */
  data?: BeaconSlotData;

  constructor(data?: PartialMessage<GetSlotDataResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "labapi.GetSlotDataResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "data", kind: "message", T: BeaconSlotData },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetSlotDataResponse {
    return new GetSlotDataResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetSlotDataResponse {
    return new GetSlotDataResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetSlotDataResponse {
    return new GetSlotDataResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetSlotDataResponse | PlainMessage<GetSlotDataResponse> | undefined, b: GetSlotDataResponse | PlainMessage<GetSlotDataResponse> | undefined): boolean {
    return proto3.util.equals(GetSlotDataResponse, a, b);
  }
}

/**
 * @generated from message labapi.GetRecentLocallyBuiltBlocksRequest
 */
export class GetRecentLocallyBuiltBlocksRequest extends Message<GetRecentLocallyBuiltBlocksRequest> {
  /**
   * @generated from field: string network = 1;
   */
  network = "";

  constructor(data?: PartialMessage<GetRecentLocallyBuiltBlocksRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "labapi.GetRecentLocallyBuiltBlocksRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "network", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetRecentLocallyBuiltBlocksRequest {
    return new GetRecentLocallyBuiltBlocksRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetRecentLocallyBuiltBlocksRequest {
    return new GetRecentLocallyBuiltBlocksRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetRecentLocallyBuiltBlocksRequest {
    return new GetRecentLocallyBuiltBlocksRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetRecentLocallyBuiltBlocksRequest | PlainMessage<GetRecentLocallyBuiltBlocksRequest> | undefined, b: GetRecentLocallyBuiltBlocksRequest | PlainMessage<GetRecentLocallyBuiltBlocksRequest> | undefined): boolean {
    return proto3.util.equals(GetRecentLocallyBuiltBlocksRequest, a, b);
  }
}

/**
 * @generated from message labapi.GetRecentLocallyBuiltBlocksResponse
 */
export class GetRecentLocallyBuiltBlocksResponse extends Message<GetRecentLocallyBuiltBlocksResponse> {
  /**
   * @generated from field: repeated beacon_slots.LocallyBuiltSlotBlocks slot_blocks = 1;
   */
  slotBlocks: LocallyBuiltSlotBlocks[] = [];

  constructor(data?: PartialMessage<GetRecentLocallyBuiltBlocksResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "labapi.GetRecentLocallyBuiltBlocksResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "slot_blocks", kind: "message", T: LocallyBuiltSlotBlocks, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetRecentLocallyBuiltBlocksResponse {
    return new GetRecentLocallyBuiltBlocksResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetRecentLocallyBuiltBlocksResponse {
    return new GetRecentLocallyBuiltBlocksResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetRecentLocallyBuiltBlocksResponse {
    return new GetRecentLocallyBuiltBlocksResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetRecentLocallyBuiltBlocksResponse | PlainMessage<GetRecentLocallyBuiltBlocksResponse> | undefined, b: GetRecentLocallyBuiltBlocksResponse | PlainMessage<GetRecentLocallyBuiltBlocksResponse> | undefined): boolean {
    return proto3.util.equals(GetRecentLocallyBuiltBlocksResponse, a, b);
  }
}

/**
 * Empty request
 *
 * @generated from message labapi.GetConfigRequest
 */
export class GetConfigRequest extends Message<GetConfigRequest> {
  constructor(data?: PartialMessage<GetConfigRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "labapi.GetConfigRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetConfigRequest {
    return new GetConfigRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetConfigRequest {
    return new GetConfigRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetConfigRequest {
    return new GetConfigRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetConfigRequest | PlainMessage<GetConfigRequest> | undefined, b: GetConfigRequest | PlainMessage<GetConfigRequest> | undefined): boolean {
    return proto3.util.equals(GetConfigRequest, a, b);
  }
}

/**
 * @generated from message labapi.GetConfigResponse
 */
export class GetConfigResponse extends Message<GetConfigResponse> {
  /**
   * @generated from field: lab.FrontendConfig config = 1;
   */
  config?: FrontendConfig;

  constructor(data?: PartialMessage<GetConfigResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "labapi.GetConfigResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "config", kind: "message", T: FrontendConfig },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetConfigResponse {
    return new GetConfigResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetConfigResponse {
    return new GetConfigResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetConfigResponse {
    return new GetConfigResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetConfigResponse | PlainMessage<GetConfigResponse> | undefined, b: GetConfigResponse | PlainMessage<GetConfigResponse> | undefined): boolean {
    return proto3.util.equals(GetConfigResponse, a, b);
  }
}

