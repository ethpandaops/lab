/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as LayoutRouteImport } from './routes/_layout'
import { Route as LayoutIndexRouteImport } from './routes/_layout.index'
import { Route as LayoutXatuRouteImport } from './routes/_layout.xatu'
import { Route as LayoutExperimentsRouteImport } from './routes/_layout.experiments'
import { Route as LayoutBeaconRouteImport } from './routes/_layout.beacon'
import { Route as LayoutAboutRouteImport } from './routes/_layout.about'
import { Route as LayoutXatuDataIndexRouteImport } from './routes/_layout.xatu-data.index'
import { Route as LayoutExperimentsIndexRouteImport } from './routes/_layout.experiments.index'
import { Route as LayoutXatuDataNetworksRouteImport } from './routes/_layout.xatu-data.networks'
import { Route as LayoutXatuDataGeographicalChecklistRouteImport } from './routes/_layout.xatu-data.geographical-checklist'
import { Route as LayoutXatuDataForkReadinessRouteImport } from './routes/_layout.xatu-data.fork-readiness'
import { Route as LayoutExperimentsExperimentIdRouteImport } from './routes/_layout.experiments.$experimentId'
import { Route as LayoutBeaconLocallyBuiltBlocksRouteImport } from './routes/_layout.beacon.locally-built-blocks'
import { Route as LayoutXatuDataContributorsIndexRouteImport } from './routes/_layout.xatu-data.contributors.index'
import { Route as LayoutExperimentsExperimentIdIndexRouteImport } from './routes/_layout.experiments.$experimentId.index'
import { Route as LayoutBeaconSlotIndexRouteImport } from './routes/_layout.beacon.slot.index'
import { Route as LayoutBeaconBlockProductionIndexRouteImport } from './routes/_layout.beacon.block-production.index'
import { Route as LayoutXatuDataContributorsNameRouteImport } from './routes/_layout.xatu-data.contributors.$name'
import { Route as LayoutBeaconSlotLiveRouteImport } from './routes/_layout.beacon.slot.live'
import { Route as LayoutBeaconSlotSlotRouteImport } from './routes/_layout.beacon.slot.$slot'
import { Route as LayoutBeaconBlockProductionLiveRouteImport } from './routes/_layout.beacon.block-production.live'
import { Route as LayoutBeaconBlockProductionSlotRouteImport } from './routes/_layout.beacon.block-production.$slot'

const LayoutRoute = LayoutRouteImport.update({
  id: '/_layout',
  getParentRoute: () => rootRouteImport,
} as any)
const LayoutIndexRoute = LayoutIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutXatuRoute = LayoutXatuRouteImport.update({
  id: '/xatu',
  path: '/xatu',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutExperimentsRoute = LayoutExperimentsRouteImport.update({
  id: '/experiments',
  path: '/experiments',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutBeaconRoute = LayoutBeaconRouteImport.update({
  id: '/beacon',
  path: '/beacon',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutAboutRoute = LayoutAboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutXatuDataIndexRoute = LayoutXatuDataIndexRouteImport.update({
  id: '/xatu-data/',
  path: '/xatu-data/',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutExperimentsIndexRoute = LayoutExperimentsIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LayoutExperimentsRoute,
} as any)
const LayoutXatuDataNetworksRoute = LayoutXatuDataNetworksRouteImport.update({
  id: '/xatu-data/networks',
  path: '/xatu-data/networks',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutXatuDataGeographicalChecklistRoute =
  LayoutXatuDataGeographicalChecklistRouteImport.update({
    id: '/xatu-data/geographical-checklist',
    path: '/xatu-data/geographical-checklist',
    getParentRoute: () => LayoutRoute,
  } as any)
const LayoutXatuDataForkReadinessRoute =
  LayoutXatuDataForkReadinessRouteImport.update({
    id: '/xatu-data/fork-readiness',
    path: '/xatu-data/fork-readiness',
    getParentRoute: () => LayoutRoute,
  } as any)
const LayoutExperimentsExperimentIdRoute =
  LayoutExperimentsExperimentIdRouteImport.update({
    id: '/$experimentId',
    path: '/$experimentId',
    getParentRoute: () => LayoutExperimentsRoute,
  } as any)
const LayoutBeaconLocallyBuiltBlocksRoute =
  LayoutBeaconLocallyBuiltBlocksRouteImport.update({
    id: '/locally-built-blocks',
    path: '/locally-built-blocks',
    getParentRoute: () => LayoutBeaconRoute,
  } as any)
const LayoutXatuDataContributorsIndexRoute =
  LayoutXatuDataContributorsIndexRouteImport.update({
    id: '/xatu-data/contributors/',
    path: '/xatu-data/contributors/',
    getParentRoute: () => LayoutRoute,
  } as any)
const LayoutExperimentsExperimentIdIndexRoute =
  LayoutExperimentsExperimentIdIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => LayoutExperimentsExperimentIdRoute,
  } as any)
const LayoutBeaconSlotIndexRoute = LayoutBeaconSlotIndexRouteImport.update({
  id: '/slot/',
  path: '/slot/',
  getParentRoute: () => LayoutBeaconRoute,
} as any)
const LayoutBeaconBlockProductionIndexRoute =
  LayoutBeaconBlockProductionIndexRouteImport.update({
    id: '/block-production/',
    path: '/block-production/',
    getParentRoute: () => LayoutBeaconRoute,
  } as any)
const LayoutXatuDataContributorsNameRoute =
  LayoutXatuDataContributorsNameRouteImport.update({
    id: '/xatu-data/contributors/$name',
    path: '/xatu-data/contributors/$name',
    getParentRoute: () => LayoutRoute,
  } as any)
const LayoutBeaconSlotLiveRoute = LayoutBeaconSlotLiveRouteImport.update({
  id: '/slot/live',
  path: '/slot/live',
  getParentRoute: () => LayoutBeaconRoute,
} as any)
const LayoutBeaconSlotSlotRoute = LayoutBeaconSlotSlotRouteImport.update({
  id: '/slot/$slot',
  path: '/slot/$slot',
  getParentRoute: () => LayoutBeaconRoute,
} as any)
const LayoutBeaconBlockProductionLiveRoute =
  LayoutBeaconBlockProductionLiveRouteImport.update({
    id: '/block-production/live',
    path: '/block-production/live',
    getParentRoute: () => LayoutBeaconRoute,
  } as any)
const LayoutBeaconBlockProductionSlotRoute =
  LayoutBeaconBlockProductionSlotRouteImport.update({
    id: '/block-production/$slot',
    path: '/block-production/$slot',
    getParentRoute: () => LayoutBeaconRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/about': typeof LayoutAboutRoute
  '/beacon': typeof LayoutBeaconRouteWithChildren
  '/experiments': typeof LayoutExperimentsRouteWithChildren
  '/xatu': typeof LayoutXatuRoute
  '/': typeof LayoutIndexRoute
  '/beacon/locally-built-blocks': typeof LayoutBeaconLocallyBuiltBlocksRoute
  '/experiments/$experimentId': typeof LayoutExperimentsExperimentIdRouteWithChildren
  '/xatu-data/fork-readiness': typeof LayoutXatuDataForkReadinessRoute
  '/xatu-data/geographical-checklist': typeof LayoutXatuDataGeographicalChecklistRoute
  '/xatu-data/networks': typeof LayoutXatuDataNetworksRoute
  '/experiments/': typeof LayoutExperimentsIndexRoute
  '/xatu-data': typeof LayoutXatuDataIndexRoute
  '/beacon/block-production/$slot': typeof LayoutBeaconBlockProductionSlotRoute
  '/beacon/block-production/live': typeof LayoutBeaconBlockProductionLiveRoute
  '/beacon/slot/$slot': typeof LayoutBeaconSlotSlotRoute
  '/beacon/slot/live': typeof LayoutBeaconSlotLiveRoute
  '/xatu-data/contributors/$name': typeof LayoutXatuDataContributorsNameRoute
  '/beacon/block-production': typeof LayoutBeaconBlockProductionIndexRoute
  '/beacon/slot': typeof LayoutBeaconSlotIndexRoute
  '/experiments/$experimentId/': typeof LayoutExperimentsExperimentIdIndexRoute
  '/xatu-data/contributors': typeof LayoutXatuDataContributorsIndexRoute
}
export interface FileRoutesByTo {
  '/about': typeof LayoutAboutRoute
  '/beacon': typeof LayoutBeaconRouteWithChildren
  '/xatu': typeof LayoutXatuRoute
  '/': typeof LayoutIndexRoute
  '/beacon/locally-built-blocks': typeof LayoutBeaconLocallyBuiltBlocksRoute
  '/xatu-data/fork-readiness': typeof LayoutXatuDataForkReadinessRoute
  '/xatu-data/geographical-checklist': typeof LayoutXatuDataGeographicalChecklistRoute
  '/xatu-data/networks': typeof LayoutXatuDataNetworksRoute
  '/experiments': typeof LayoutExperimentsIndexRoute
  '/xatu-data': typeof LayoutXatuDataIndexRoute
  '/beacon/block-production/$slot': typeof LayoutBeaconBlockProductionSlotRoute
  '/beacon/block-production/live': typeof LayoutBeaconBlockProductionLiveRoute
  '/beacon/slot/$slot': typeof LayoutBeaconSlotSlotRoute
  '/beacon/slot/live': typeof LayoutBeaconSlotLiveRoute
  '/xatu-data/contributors/$name': typeof LayoutXatuDataContributorsNameRoute
  '/beacon/block-production': typeof LayoutBeaconBlockProductionIndexRoute
  '/beacon/slot': typeof LayoutBeaconSlotIndexRoute
  '/experiments/$experimentId': typeof LayoutExperimentsExperimentIdIndexRoute
  '/xatu-data/contributors': typeof LayoutXatuDataContributorsIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_layout': typeof LayoutRouteWithChildren
  '/_layout/about': typeof LayoutAboutRoute
  '/_layout/beacon': typeof LayoutBeaconRouteWithChildren
  '/_layout/experiments': typeof LayoutExperimentsRouteWithChildren
  '/_layout/xatu': typeof LayoutXatuRoute
  '/_layout/': typeof LayoutIndexRoute
  '/_layout/beacon/locally-built-blocks': typeof LayoutBeaconLocallyBuiltBlocksRoute
  '/_layout/experiments/$experimentId': typeof LayoutExperimentsExperimentIdRouteWithChildren
  '/_layout/xatu-data/fork-readiness': typeof LayoutXatuDataForkReadinessRoute
  '/_layout/xatu-data/geographical-checklist': typeof LayoutXatuDataGeographicalChecklistRoute
  '/_layout/xatu-data/networks': typeof LayoutXatuDataNetworksRoute
  '/_layout/experiments/': typeof LayoutExperimentsIndexRoute
  '/_layout/xatu-data/': typeof LayoutXatuDataIndexRoute
  '/_layout/beacon/block-production/$slot': typeof LayoutBeaconBlockProductionSlotRoute
  '/_layout/beacon/block-production/live': typeof LayoutBeaconBlockProductionLiveRoute
  '/_layout/beacon/slot/$slot': typeof LayoutBeaconSlotSlotRoute
  '/_layout/beacon/slot/live': typeof LayoutBeaconSlotLiveRoute
  '/_layout/xatu-data/contributors/$name': typeof LayoutXatuDataContributorsNameRoute
  '/_layout/beacon/block-production/': typeof LayoutBeaconBlockProductionIndexRoute
  '/_layout/beacon/slot/': typeof LayoutBeaconSlotIndexRoute
  '/_layout/experiments/$experimentId/': typeof LayoutExperimentsExperimentIdIndexRoute
  '/_layout/xatu-data/contributors/': typeof LayoutXatuDataContributorsIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/about'
    | '/beacon'
    | '/experiments'
    | '/xatu'
    | '/'
    | '/beacon/locally-built-blocks'
    | '/experiments/$experimentId'
    | '/xatu-data/fork-readiness'
    | '/xatu-data/geographical-checklist'
    | '/xatu-data/networks'
    | '/experiments/'
    | '/xatu-data'
    | '/beacon/block-production/$slot'
    | '/beacon/block-production/live'
    | '/beacon/slot/$slot'
    | '/beacon/slot/live'
    | '/xatu-data/contributors/$name'
    | '/beacon/block-production'
    | '/beacon/slot'
    | '/experiments/$experimentId/'
    | '/xatu-data/contributors'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/about'
    | '/beacon'
    | '/xatu'
    | '/'
    | '/beacon/locally-built-blocks'
    | '/xatu-data/fork-readiness'
    | '/xatu-data/geographical-checklist'
    | '/xatu-data/networks'
    | '/experiments'
    | '/xatu-data'
    | '/beacon/block-production/$slot'
    | '/beacon/block-production/live'
    | '/beacon/slot/$slot'
    | '/beacon/slot/live'
    | '/xatu-data/contributors/$name'
    | '/beacon/block-production'
    | '/beacon/slot'
    | '/experiments/$experimentId'
    | '/xatu-data/contributors'
  id:
    | '__root__'
    | '/_layout'
    | '/_layout/about'
    | '/_layout/beacon'
    | '/_layout/experiments'
    | '/_layout/xatu'
    | '/_layout/'
    | '/_layout/beacon/locally-built-blocks'
    | '/_layout/experiments/$experimentId'
    | '/_layout/xatu-data/fork-readiness'
    | '/_layout/xatu-data/geographical-checklist'
    | '/_layout/xatu-data/networks'
    | '/_layout/experiments/'
    | '/_layout/xatu-data/'
    | '/_layout/beacon/block-production/$slot'
    | '/_layout/beacon/block-production/live'
    | '/_layout/beacon/slot/$slot'
    | '/_layout/beacon/slot/live'
    | '/_layout/xatu-data/contributors/$name'
    | '/_layout/beacon/block-production/'
    | '/_layout/beacon/slot/'
    | '/_layout/experiments/$experimentId/'
    | '/_layout/xatu-data/contributors/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  LayoutRoute: typeof LayoutRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_layout': {
      id: '/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_layout/': {
      id: '/_layout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof LayoutIndexRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/xatu': {
      id: '/_layout/xatu'
      path: '/xatu'
      fullPath: '/xatu'
      preLoaderRoute: typeof LayoutXatuRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/experiments': {
      id: '/_layout/experiments'
      path: '/experiments'
      fullPath: '/experiments'
      preLoaderRoute: typeof LayoutExperimentsRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/beacon': {
      id: '/_layout/beacon'
      path: '/beacon'
      fullPath: '/beacon'
      preLoaderRoute: typeof LayoutBeaconRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/about': {
      id: '/_layout/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof LayoutAboutRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/xatu-data/': {
      id: '/_layout/xatu-data/'
      path: '/xatu-data'
      fullPath: '/xatu-data'
      preLoaderRoute: typeof LayoutXatuDataIndexRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/experiments/': {
      id: '/_layout/experiments/'
      path: '/'
      fullPath: '/experiments/'
      preLoaderRoute: typeof LayoutExperimentsIndexRouteImport
      parentRoute: typeof LayoutExperimentsRoute
    }
    '/_layout/xatu-data/networks': {
      id: '/_layout/xatu-data/networks'
      path: '/xatu-data/networks'
      fullPath: '/xatu-data/networks'
      preLoaderRoute: typeof LayoutXatuDataNetworksRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/xatu-data/geographical-checklist': {
      id: '/_layout/xatu-data/geographical-checklist'
      path: '/xatu-data/geographical-checklist'
      fullPath: '/xatu-data/geographical-checklist'
      preLoaderRoute: typeof LayoutXatuDataGeographicalChecklistRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/xatu-data/fork-readiness': {
      id: '/_layout/xatu-data/fork-readiness'
      path: '/xatu-data/fork-readiness'
      fullPath: '/xatu-data/fork-readiness'
      preLoaderRoute: typeof LayoutXatuDataForkReadinessRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/experiments/$experimentId': {
      id: '/_layout/experiments/$experimentId'
      path: '/$experimentId'
      fullPath: '/experiments/$experimentId'
      preLoaderRoute: typeof LayoutExperimentsExperimentIdRouteImport
      parentRoute: typeof LayoutExperimentsRoute
    }
    '/_layout/beacon/locally-built-blocks': {
      id: '/_layout/beacon/locally-built-blocks'
      path: '/locally-built-blocks'
      fullPath: '/beacon/locally-built-blocks'
      preLoaderRoute: typeof LayoutBeaconLocallyBuiltBlocksRouteImport
      parentRoute: typeof LayoutBeaconRoute
    }
    '/_layout/xatu-data/contributors/': {
      id: '/_layout/xatu-data/contributors/'
      path: '/xatu-data/contributors'
      fullPath: '/xatu-data/contributors'
      preLoaderRoute: typeof LayoutXatuDataContributorsIndexRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/experiments/$experimentId/': {
      id: '/_layout/experiments/$experimentId/'
      path: '/'
      fullPath: '/experiments/$experimentId/'
      preLoaderRoute: typeof LayoutExperimentsExperimentIdIndexRouteImport
      parentRoute: typeof LayoutExperimentsExperimentIdRoute
    }
    '/_layout/beacon/slot/': {
      id: '/_layout/beacon/slot/'
      path: '/slot'
      fullPath: '/beacon/slot'
      preLoaderRoute: typeof LayoutBeaconSlotIndexRouteImport
      parentRoute: typeof LayoutBeaconRoute
    }
    '/_layout/beacon/block-production/': {
      id: '/_layout/beacon/block-production/'
      path: '/block-production'
      fullPath: '/beacon/block-production'
      preLoaderRoute: typeof LayoutBeaconBlockProductionIndexRouteImport
      parentRoute: typeof LayoutBeaconRoute
    }
    '/_layout/xatu-data/contributors/$name': {
      id: '/_layout/xatu-data/contributors/$name'
      path: '/xatu-data/contributors/$name'
      fullPath: '/xatu-data/contributors/$name'
      preLoaderRoute: typeof LayoutXatuDataContributorsNameRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/beacon/slot/live': {
      id: '/_layout/beacon/slot/live'
      path: '/slot/live'
      fullPath: '/beacon/slot/live'
      preLoaderRoute: typeof LayoutBeaconSlotLiveRouteImport
      parentRoute: typeof LayoutBeaconRoute
    }
    '/_layout/beacon/slot/$slot': {
      id: '/_layout/beacon/slot/$slot'
      path: '/slot/$slot'
      fullPath: '/beacon/slot/$slot'
      preLoaderRoute: typeof LayoutBeaconSlotSlotRouteImport
      parentRoute: typeof LayoutBeaconRoute
    }
    '/_layout/beacon/block-production/live': {
      id: '/_layout/beacon/block-production/live'
      path: '/block-production/live'
      fullPath: '/beacon/block-production/live'
      preLoaderRoute: typeof LayoutBeaconBlockProductionLiveRouteImport
      parentRoute: typeof LayoutBeaconRoute
    }
    '/_layout/beacon/block-production/$slot': {
      id: '/_layout/beacon/block-production/$slot'
      path: '/block-production/$slot'
      fullPath: '/beacon/block-production/$slot'
      preLoaderRoute: typeof LayoutBeaconBlockProductionSlotRouteImport
      parentRoute: typeof LayoutBeaconRoute
    }
  }
}

interface LayoutBeaconRouteChildren {
  LayoutBeaconLocallyBuiltBlocksRoute: typeof LayoutBeaconLocallyBuiltBlocksRoute
  LayoutBeaconBlockProductionSlotRoute: typeof LayoutBeaconBlockProductionSlotRoute
  LayoutBeaconBlockProductionLiveRoute: typeof LayoutBeaconBlockProductionLiveRoute
  LayoutBeaconSlotSlotRoute: typeof LayoutBeaconSlotSlotRoute
  LayoutBeaconSlotLiveRoute: typeof LayoutBeaconSlotLiveRoute
  LayoutBeaconBlockProductionIndexRoute: typeof LayoutBeaconBlockProductionIndexRoute
  LayoutBeaconSlotIndexRoute: typeof LayoutBeaconSlotIndexRoute
}

const LayoutBeaconRouteChildren: LayoutBeaconRouteChildren = {
  LayoutBeaconLocallyBuiltBlocksRoute: LayoutBeaconLocallyBuiltBlocksRoute,
  LayoutBeaconBlockProductionSlotRoute: LayoutBeaconBlockProductionSlotRoute,
  LayoutBeaconBlockProductionLiveRoute: LayoutBeaconBlockProductionLiveRoute,
  LayoutBeaconSlotSlotRoute: LayoutBeaconSlotSlotRoute,
  LayoutBeaconSlotLiveRoute: LayoutBeaconSlotLiveRoute,
  LayoutBeaconBlockProductionIndexRoute: LayoutBeaconBlockProductionIndexRoute,
  LayoutBeaconSlotIndexRoute: LayoutBeaconSlotIndexRoute,
}

const LayoutBeaconRouteWithChildren = LayoutBeaconRoute._addFileChildren(
  LayoutBeaconRouteChildren,
)

interface LayoutExperimentsExperimentIdRouteChildren {
  LayoutExperimentsExperimentIdIndexRoute: typeof LayoutExperimentsExperimentIdIndexRoute
}

const LayoutExperimentsExperimentIdRouteChildren: LayoutExperimentsExperimentIdRouteChildren =
  {
    LayoutExperimentsExperimentIdIndexRoute:
      LayoutExperimentsExperimentIdIndexRoute,
  }

const LayoutExperimentsExperimentIdRouteWithChildren =
  LayoutExperimentsExperimentIdRoute._addFileChildren(
    LayoutExperimentsExperimentIdRouteChildren,
  )

interface LayoutExperimentsRouteChildren {
  LayoutExperimentsExperimentIdRoute: typeof LayoutExperimentsExperimentIdRouteWithChildren
  LayoutExperimentsIndexRoute: typeof LayoutExperimentsIndexRoute
}

const LayoutExperimentsRouteChildren: LayoutExperimentsRouteChildren = {
  LayoutExperimentsExperimentIdRoute:
    LayoutExperimentsExperimentIdRouteWithChildren,
  LayoutExperimentsIndexRoute: LayoutExperimentsIndexRoute,
}

const LayoutExperimentsRouteWithChildren =
  LayoutExperimentsRoute._addFileChildren(LayoutExperimentsRouteChildren)

interface LayoutRouteChildren {
  LayoutAboutRoute: typeof LayoutAboutRoute
  LayoutBeaconRoute: typeof LayoutBeaconRouteWithChildren
  LayoutExperimentsRoute: typeof LayoutExperimentsRouteWithChildren
  LayoutXatuRoute: typeof LayoutXatuRoute
  LayoutIndexRoute: typeof LayoutIndexRoute
  LayoutXatuDataForkReadinessRoute: typeof LayoutXatuDataForkReadinessRoute
  LayoutXatuDataGeographicalChecklistRoute: typeof LayoutXatuDataGeographicalChecklistRoute
  LayoutXatuDataNetworksRoute: typeof LayoutXatuDataNetworksRoute
  LayoutXatuDataIndexRoute: typeof LayoutXatuDataIndexRoute
  LayoutXatuDataContributorsNameRoute: typeof LayoutXatuDataContributorsNameRoute
  LayoutXatuDataContributorsIndexRoute: typeof LayoutXatuDataContributorsIndexRoute
}

const LayoutRouteChildren: LayoutRouteChildren = {
  LayoutAboutRoute: LayoutAboutRoute,
  LayoutBeaconRoute: LayoutBeaconRouteWithChildren,
  LayoutExperimentsRoute: LayoutExperimentsRouteWithChildren,
  LayoutXatuRoute: LayoutXatuRoute,
  LayoutIndexRoute: LayoutIndexRoute,
  LayoutXatuDataForkReadinessRoute: LayoutXatuDataForkReadinessRoute,
  LayoutXatuDataGeographicalChecklistRoute:
    LayoutXatuDataGeographicalChecklistRoute,
  LayoutXatuDataNetworksRoute: LayoutXatuDataNetworksRoute,
  LayoutXatuDataIndexRoute: LayoutXatuDataIndexRoute,
  LayoutXatuDataContributorsNameRoute: LayoutXatuDataContributorsNameRoute,
  LayoutXatuDataContributorsIndexRoute: LayoutXatuDataContributorsIndexRoute,
}

const LayoutRouteWithChildren =
  LayoutRoute._addFileChildren(LayoutRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  LayoutRoute: LayoutRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
