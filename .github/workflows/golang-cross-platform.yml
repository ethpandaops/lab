name: Go Cross-Platform Test

on:
  push:
    branches:
      - master
    paths:
      - 'backend/**.go'
      - 'backend/go.mod'
      - 'backend/go.sum'
      - '.github/workflows/golang-cross-platform.yml'
  pull_request:
    branches:
      - master
    paths:
      - 'backend/**.go'
      - 'backend/go.mod'
      - 'backend/go.sum'
      - '.github/workflows/golang-cross-platform.yml'

permissions:
  contents: read
  pull-requests: read

jobs:
  check-pr:
    runs-on: ubuntu-latest
    outputs:
      is_authorized: ${{ steps.check.outputs.is_authorized }}
    steps:
      - id: check
        run: |
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            # Check if PR is from a fork
            if [[ "${{ github.event.pull_request.head.repo.full_name }}" != "${{ github.repository }}" ]]; then
              echo "is_authorized=false" >> $GITHUB_OUTPUT
              echo "PR is from a fork - will only test, not fail build"
            else
              # Check if user has write access
              if [[ "${{ github.event.pull_request.head.repo.permissions.push }}" == "true" ]]; then
                echo "is_authorized=true" >> $GITHUB_OUTPUT
                echo "PR is from an authorized contributor"
              else
                echo "is_authorized=false" >> $GITHUB_OUTPUT
                echo "PR is from unauthorized contributor"
              fi
            fi
          else
            echo "is_authorized=true" >> $GITHUB_OUTPUT
            echo "Not a PR - authorized"
          fi

  cross-platform:
    name: Go ${{ matrix.go-version }} on ${{ matrix.os }}
    needs: check-pr
    runs-on: ${{ matrix.os }}
    timeout-minutes: 20
    defaults:
      run:
        working-directory: ./backend
    
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        go-version: [1.21.x, 1.22.x, 1.24.x]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
          cache: true
      
      - name: Install dependencies
        run: go mod download
        
      # Fix line ending issues on Windows
      - name: Set git line endings for Windows
        if: matrix.os == 'windows-latest'
        run: git config --global core.autocrlf false
      
      - name: Install gotestsum
        run: go install gotest.tools/gotestsum@latest
      
      - name: Run tests
        shell: bash
        run: |
          mkdir -p test-results
          $HOME/go/bin/gotestsum --junitfile test-results/cross-platform-tests-${{ matrix.os }}-${{ matrix.go-version }}.xml --format testname -- -v -short ./...
      
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-cross-${{ matrix.os }}-${{ matrix.go-version }}
          path: ./backend/test-results
          retention-days: 7
      
      - name: Set exit code for unauthorized PRs
        if: |
          needs.check-pr.outputs.is_authorized == 'false' && 
          github.event_name == 'pull_request' && 
          failure()
        shell: bash
        run: |
          echo "Cross-platform tests failed but PR is from an unauthorized source, ignoring failure to allow CI to pass."
          exit 0

  cross-platform-build:
    name: Build on ${{ matrix.os }} for ${{ matrix.goos }}-${{ matrix.goarch }}
    needs: check-pr
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    defaults:
      run:
        working-directory: ./backend
    
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        goos: [linux, darwin]
        goarch: [amd64, arm64]
        include:
          # Add specific platform combinations
          - os: macos-latest
            goos: darwin
            goarch: arm64
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.x'
          cache: true
      
      - name: Build for ${{ matrix.goos }}-${{ matrix.goarch }}
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: |
          go build -v -o "lab-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.goos == 'windows' && '.exe' || '' }}" ./...
      
      - name: Upload build artifact
        if: needs.check-pr.outputs.is_authorized == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: lab-${{ matrix.goos }}-${{ matrix.goarch }}
          path: ./backend/lab-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.goos == 'windows' && '.exe' || '' }}
          retention-days: 7
      
      - name: Set exit code for unauthorized PRs
        if: |
          needs.check-pr.outputs.is_authorized == 'false' && 
          github.event_name == 'pull_request' && 
          failure()
        shell: bash
        run: |
          echo "Cross-platform build failed but PR is from an unauthorized source, ignoring failure to allow CI to pass."
          exit 0 