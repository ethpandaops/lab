name: alpha releases

on:
  push:
    branches:
      - 'release/*'

permissions:
  contents: write
  packages: write

jobs:
  tag-release:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.latest_version.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0
          ref: ${{ github.ref }}
          token: ${{ secrets.EPOBOT_TOKEN }}
      - name: Get latest release version for this release branch
        if: startsWith(github.ref, 'refs/heads/release/')
        id: latest_version
        run: |
          # Extract suffix from branch name (e.g., 'dencun' from 'release/dencun')
          RELEASE_SUFFIX=${GITHUB_REF#refs/heads/release/}

          # Fetch all tags and get the latest that matches the pattern
          # Using the refs/tags API
          LATEST_VERSION=$(curl --silent "https://api.github.com/repos/$GITHUB_REPOSITORY/git/refs/tags" \
                      | jq -r --arg suffix "$RELEASE_SUFFIX" '.[] | select(.ref | test("refs/tags/v?[0-9]+\\.[0-9]+\\.[0-9]+-" + $suffix + "$")) | .ref' \
                      | sed 's|refs/tags/||' | sort -V | tail -n 1)
          echo "Found latest $RELEASE_SUFFIX version: $LATEST_VERSION"

          # Default to 0.0.0 if no matching release was found
          if [[ -z "$LATEST_VERSION" ]]; then
            LATEST_VERSION="0.0.0"
          fi

          # Increment the patch version using bash
          LATEST_VERSION=$(echo "$LATEST_VERSION" | awk -F. -v OFS=. '{$NF = $NF + 1;} 1')

          VERSION=$LATEST_VERSION-$RELEASE_SUFFIX

          echo "Releasing version: $VERSION"

          git config --global user.email "ethpandaopsbot@ethereum.org"
          git config --global user.name "ethpandaopsbot"

          # Log the short commit SHA
          SHORT_COMMIT=$(git rev-parse --short HEAD)

          echo "Git commit: $SHORT_COMMIT"

          git tag -a "$VERSION" -m "Release $VERSION"

          echo "RELEASE_SUFFIX=$RELEASE_SUFFIX" >> $GITHUB_ENV
          echo "version=$VERSION" >> $GITHUB_OUTPUT

          # Push the tag
          git push origin "$VERSION"
        env:
          GITHUB_TOKEN: ${{ secrets.EPOBOT_TOKEN }}

  build-and-push:
    needs: tag-release
    runs-on: ubuntu-latest
    strategy:
      matrix:
        component: [backend, frontend]
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@c1e51972afc2121e065aed6d45c65596fe445f3f # v5.8.0
        with:
          images: |
            ethpandaops/lab
          tags: |
            type=raw,value=${{ matrix.component }}-${{ needs.tag-release.outputs.version }}
          flavor: |
            latest=false

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1

      - name: Login to DockerHub
        uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1 # v3.5.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        with:
          context: ./${{ matrix.component }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
