// Package models contains auto-generated Go structs for Xatu ClickHouse tables.
// DO NOT EDIT - Generated by generate_xatu_clickhouse_models.sh
package models

import (
    "time"
)

// BeaconApiEthV1EventsContributionAndProof represents a row from the beacon_api_eth_v1_events_contribution_and_proof table.
type BeaconApiEthV1EventsContributionAndProof struct {
    UpdatedDateTime    time.Time    `db:"updated_date_time" json:"updated_date_time"`
    EventDateTime    time.Time    `db:"event_date_time" json:"event_date_time"`
    AggregatorIndex    uint32    `db:"aggregator_index" json:"aggregator_index"`
    ContributionSlot    uint32    `db:"contribution_slot" json:"contribution_slot"`
    ContributionSlotStartDateTime    time.Time    `db:"contribution_slot_start_date_time" json:"contribution_slot_start_date_time"`
    ContributionPropagationSlotStartDiff    uint32    `db:"contribution_propagation_slot_start_diff" json:"contribution_propagation_slot_start_diff"`
    ContributionBeaconBlockRoot    string    `db:"contribution_beacon_block_root" json:"contribution_beacon_block_root"`
    ContributionSubcommitteeIndex    string    `db:"contribution_subcommittee_index" json:"contribution_subcommittee_index"`
    ContributionAggregationBits    string    `db:"contribution_aggregation_bits" json:"contribution_aggregation_bits"`
    ContributionSignature    string    `db:"contribution_signature" json:"contribution_signature"`
    ContributionEpoch    uint32    `db:"contribution_epoch" json:"contribution_epoch"`
    ContributionEpochStartDateTime    time.Time    `db:"contribution_epoch_start_date_time" json:"contribution_epoch_start_date_time"`
    SelectionProof    string    `db:"selection_proof" json:"selection_proof"`
    Signature    string    `db:"signature" json:"signature"`
    MetaClientName    string    `db:"meta_client_name" json:"meta_client_name"`
    MetaClientId    string    `db:"meta_client_id" json:"meta_client_id"`
    MetaClientVersion    string    `db:"meta_client_version" json:"meta_client_version"`
    MetaClientImplementation    string    `db:"meta_client_implementation" json:"meta_client_implementation"`
    MetaClientOs    string    `db:"meta_client_os" json:"meta_client_os"`
    MetaClientIp    *string    `db:"meta_client_ip" json:"meta_client_ip"`
    MetaClientGeoCity    string    `db:"meta_client_geo_city" json:"meta_client_geo_city"`
    MetaClientGeoCountry    string    `db:"meta_client_geo_country" json:"meta_client_geo_country"`
    MetaClientGeoCountryCode    string    `db:"meta_client_geo_country_code" json:"meta_client_geo_country_code"`
    MetaClientGeoContinentCode    string    `db:"meta_client_geo_continent_code" json:"meta_client_geo_continent_code"`
    MetaClientGeoLongitude    *string    `db:"meta_client_geo_longitude" json:"meta_client_geo_longitude"`
    MetaClientGeoLatitude    *string    `db:"meta_client_geo_latitude" json:"meta_client_geo_latitude"`
    MetaClientGeoAutonomousSystemNumber    *string    `db:"meta_client_geo_autonomous_system_number" json:"meta_client_geo_autonomous_system_number"`
    MetaClientGeoAutonomousSystemOrganization    *string    `db:"meta_client_geo_autonomous_system_organization" json:"meta_client_geo_autonomous_system_organization"`
    MetaNetworkId    int32    `db:"meta_network_id" json:"meta_network_id"`
    MetaNetworkName    string    `db:"meta_network_name" json:"meta_network_name"`
    MetaConsensusVersion    string    `db:"meta_consensus_version" json:"meta_consensus_version"`
    MetaConsensusVersionMajor    string    `db:"meta_consensus_version_major" json:"meta_consensus_version_major"`
    MetaConsensusVersionMinor    string    `db:"meta_consensus_version_minor" json:"meta_consensus_version_minor"`
    MetaConsensusVersionPatch    string    `db:"meta_consensus_version_patch" json:"meta_consensus_version_patch"`
    MetaConsensusImplementation    string    `db:"meta_consensus_implementation" json:"meta_consensus_implementation"`
    MetaLabels    map[string]string    `db:"meta_labels" json:"meta_labels"`
}

// TableName returns the table name for BeaconApiEthV1EventsContributionAndProof.
func (m *BeaconApiEthV1EventsContributionAndProof) TableName() string {
    return "beacon_api_eth_v1_events_contribution_and_proof"
}

// BeaconApiEthV1EventsContributionAndProofParams represents query parameters for the beacon_api_eth_v1_events_contribution_and_proof table.
type BeaconApiEthV1EventsContributionAndProofParams struct {
    // Common query parameters
    Limit  *uint64
    Offset *uint64

    // Table-specific parameters based on columns
    // Add specific query parameters here as needed
}
