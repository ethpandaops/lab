// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: pkg/server/proto/beacon_slots/beacon_slots.proto

package beacon_slots

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Configuration for the beacon_slots service
type Config struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled  bool            `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Networks []string        `protobuf:"bytes,2,rep,name=networks,proto3" json:"networks,omitempty"`
	Backfill *BackfillConfig `protobuf:"bytes,3,opt,name=backfill,proto3" json:"backfill,omitempty"`
}

func (x *Config) Reset() {
	*x = Config{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_server_proto_beacon_slots_beacon_slots_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config) ProtoMessage() {}

func (x *Config) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_proto_beacon_slots_beacon_slots_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config.ProtoReflect.Descriptor instead.
func (*Config) Descriptor() ([]byte, []int) {
	return file_pkg_server_proto_beacon_slots_beacon_slots_proto_rawDescGZIP(), []int{0}
}

func (x *Config) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *Config) GetNetworks() []string {
	if x != nil {
		return x.Networks
	}
	return nil
}

func (x *Config) GetBackfill() *BackfillConfig {
	if x != nil {
		return x.Backfill
	}
	return nil
}

// Backfill configuration
type BackfillConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled  bool  `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	SlotsAgo int64 `protobuf:"varint,2,opt,name=slots_ago,json=slotsAgo,proto3" json:"slots_ago,omitempty"`
}

func (x *BackfillConfig) Reset() {
	*x = BackfillConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_server_proto_beacon_slots_beacon_slots_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BackfillConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BackfillConfig) ProtoMessage() {}

func (x *BackfillConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_proto_beacon_slots_beacon_slots_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BackfillConfig.ProtoReflect.Descriptor instead.
func (*BackfillConfig) Descriptor() ([]byte, []int) {
	return file_pkg_server_proto_beacon_slots_beacon_slots_proto_rawDescGZIP(), []int{1}
}

func (x *BackfillConfig) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *BackfillConfig) GetSlotsAgo() int64 {
	if x != nil {
		return x.SlotsAgo
	}
	return 0
}

// The state of the processor
type ProcessorState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LastProcessed     *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=last_processed,json=lastProcessed,proto3" json:"last_processed,omitempty"`
	LastProcessedSlot *int64                 `protobuf:"varint,2,opt,name=last_processed_slot,json=lastProcessedSlot,proto3,oneof" json:"last_processed_slot,omitempty"`
	CurrentSlot       *int64                 `protobuf:"varint,3,opt,name=current_slot,json=currentSlot,proto3,oneof" json:"current_slot,omitempty"`
	TargetSlot        *int64                 `protobuf:"varint,4,opt,name=target_slot,json=targetSlot,proto3,oneof" json:"target_slot,omitempty"`
	Direction         string                 `protobuf:"bytes,5,opt,name=direction,proto3" json:"direction,omitempty"` // "forward" or "backward"
}

func (x *ProcessorState) Reset() {
	*x = ProcessorState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_server_proto_beacon_slots_beacon_slots_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessorState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessorState) ProtoMessage() {}

func (x *ProcessorState) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_proto_beacon_slots_beacon_slots_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessorState.ProtoReflect.Descriptor instead.
func (*ProcessorState) Descriptor() ([]byte, []int) {
	return file_pkg_server_proto_beacon_slots_beacon_slots_proto_rawDescGZIP(), []int{2}
}

func (x *ProcessorState) GetLastProcessed() *timestamppb.Timestamp {
	if x != nil {
		return x.LastProcessed
	}
	return nil
}

func (x *ProcessorState) GetLastProcessedSlot() int64 {
	if x != nil && x.LastProcessedSlot != nil {
		return *x.LastProcessedSlot
	}
	return 0
}

func (x *ProcessorState) GetCurrentSlot() int64 {
	if x != nil && x.CurrentSlot != nil {
		return *x.CurrentSlot
	}
	return 0
}

func (x *ProcessorState) GetTargetSlot() int64 {
	if x != nil && x.TargetSlot != nil {
		return *x.TargetSlot
	}
	return 0
}

func (x *ProcessorState) GetDirection() string {
	if x != nil {
		return x.Direction
	}
	return ""
}

// The state of all processors
type BeaconSlotsState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Network    string                     `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`
	Processors map[string]*ProcessorState `protobuf:"bytes,2,rep,name=processors,proto3" json:"processors,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *BeaconSlotsState) Reset() {
	*x = BeaconSlotsState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_server_proto_beacon_slots_beacon_slots_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BeaconSlotsState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BeaconSlotsState) ProtoMessage() {}

func (x *BeaconSlotsState) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_proto_beacon_slots_beacon_slots_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BeaconSlotsState.ProtoReflect.Descriptor instead.
func (*BeaconSlotsState) Descriptor() ([]byte, []int) {
	return file_pkg_server_proto_beacon_slots_beacon_slots_proto_rawDescGZIP(), []int{3}
}

func (x *BeaconSlotsState) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *BeaconSlotsState) GetProcessors() map[string]*ProcessorState {
	if x != nil {
		return x.Processors
	}
	return nil
}

// Node information
type Node struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ConsensusClient string `protobuf:"bytes,2,opt,name=consensus_client,json=consensusClient,proto3" json:"consensus_client,omitempty"`
	ExecutionClient string `protobuf:"bytes,3,opt,name=execution_client,json=executionClient,proto3" json:"execution_client,omitempty"`
	Location        string `protobuf:"bytes,4,opt,name=location,proto3" json:"location,omitempty"`
}

func (x *Node) Reset() {
	*x = Node{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_server_proto_beacon_slots_beacon_slots_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Node) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Node) ProtoMessage() {}

func (x *Node) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_proto_beacon_slots_beacon_slots_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Node.ProtoReflect.Descriptor instead.
func (*Node) Descriptor() ([]byte, []int) {
	return file_pkg_server_proto_beacon_slots_beacon_slots_proto_rawDescGZIP(), []int{4}
}

func (x *Node) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Node) GetConsensusClient() string {
	if x != nil {
		return x.ConsensusClient
	}
	return ""
}

func (x *Node) GetExecutionClient() string {
	if x != nil {
		return x.ExecutionClient
	}
	return ""
}

func (x *Node) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

// Proposer data
type ProposerData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Slot          int64                  `protobuf:"varint,1,opt,name=slot,proto3" json:"slot,omitempty"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	ProposerIndex string                 `protobuf:"bytes,3,opt,name=proposer_index,json=proposerIndex,proto3" json:"proposer_index,omitempty"`
	Votes         uint64                 `protobuf:"varint,4,opt,name=votes,proto3" json:"votes,omitempty"`
	Graffiti      []string               `protobuf:"bytes,5,rep,name=graffiti,proto3" json:"graffiti,omitempty"`
	MissedSlots   int64                  `protobuf:"varint,6,opt,name=missed_slots,json=missedSlots,proto3" json:"missed_slots,omitempty"`
	OrphanedSlots int64                  `protobuf:"varint,7,opt,name=orphaned_slots,json=orphanedSlots,proto3" json:"orphaned_slots,omitempty"`
}

func (x *ProposerData) Reset() {
	*x = ProposerData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_server_proto_beacon_slots_beacon_slots_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProposerData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProposerData) ProtoMessage() {}

func (x *ProposerData) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_proto_beacon_slots_beacon_slots_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProposerData.ProtoReflect.Descriptor instead.
func (*ProposerData) Descriptor() ([]byte, []int) {
	return file_pkg_server_proto_beacon_slots_beacon_slots_proto_rawDescGZIP(), []int{5}
}

func (x *ProposerData) GetSlot() int64 {
	if x != nil {
		return x.Slot
	}
	return 0
}

func (x *ProposerData) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *ProposerData) GetProposerIndex() string {
	if x != nil {
		return x.ProposerIndex
	}
	return ""
}

func (x *ProposerData) GetVotes() uint64 {
	if x != nil {
		return x.Votes
	}
	return 0
}

func (x *ProposerData) GetGraffiti() []string {
	if x != nil {
		return x.Graffiti
	}
	return nil
}

func (x *ProposerData) GetMissedSlots() int64 {
	if x != nil {
		return x.MissedSlots
	}
	return 0
}

func (x *ProposerData) GetOrphanedSlots() int64 {
	if x != nil {
		return x.OrphanedSlots
	}
	return 0
}

// Block data
type BlockData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Slot                 int64                  `protobuf:"varint,1,opt,name=slot,proto3" json:"slot,omitempty"`
	Timestamp            *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	BlockHash            string                 `protobuf:"bytes,3,opt,name=block_hash,json=blockHash,proto3" json:"block_hash,omitempty"`
	ParentHash           string                 `protobuf:"bytes,4,opt,name=parent_hash,json=parentHash,proto3" json:"parent_hash,omitempty"`
	ProposerIndex        string                 `protobuf:"bytes,5,opt,name=proposer_index,json=proposerIndex,proto3" json:"proposer_index,omitempty"`
	Attestations         int64                  `protobuf:"varint,6,opt,name=attestations,proto3" json:"attestations,omitempty"`
	Deposits             int64                  `protobuf:"varint,7,opt,name=deposits,proto3" json:"deposits,omitempty"`
	Exits                int64                  `protobuf:"varint,8,opt,name=exits,proto3" json:"exits,omitempty"`
	ProposerSlashings    int64                  `protobuf:"varint,9,opt,name=proposer_slashings,json=proposerSlashings,proto3" json:"proposer_slashings,omitempty"`
	AttesterSlashings    int64                  `protobuf:"varint,10,opt,name=attester_slashings,json=attesterSlashings,proto3" json:"attester_slashings,omitempty"`
	SyncAggregateBits    int64                  `protobuf:"varint,11,opt,name=sync_aggregate_bits,json=syncAggregateBits,proto3" json:"sync_aggregate_bits,omitempty"`
	SyncCommitteeSize    int32                  `protobuf:"varint,12,opt,name=sync_committee_size,json=syncCommitteeSize,proto3" json:"sync_committee_size,omitempty"`
	BlobCount            int32                  `protobuf:"varint,13,opt,name=blob_count,json=blobCount,proto3" json:"blob_count,omitempty"`
	ExecutionPayloadSize int64                  `protobuf:"varint,14,opt,name=execution_payload_size,json=executionPayloadSize,proto3" json:"execution_payload_size,omitempty"`
	CapellaDeposits      int64                  `protobuf:"varint,15,opt,name=capella_deposits,json=capellaDeposits,proto3" json:"capella_deposits,omitempty"`
	CapellaWithdrawals   int64                  `protobuf:"varint,16,opt,name=capella_withdrawals,json=capellaWithdrawals,proto3" json:"capella_withdrawals,omitempty"`
	DenebBlobGasUsed     int64                  `protobuf:"varint,17,opt,name=deneb_blob_gas_used,json=denebBlobGasUsed,proto3" json:"deneb_blob_gas_used,omitempty"`
	DenebBlobGasLimit    int64                  `protobuf:"varint,18,opt,name=deneb_blob_gas_limit,json=denebBlobGasLimit,proto3" json:"deneb_blob_gas_limit,omitempty"`
	SeenBy               []string               `protobuf:"bytes,19,rep,name=seen_by,json=seenBy,proto3" json:"seen_by,omitempty"`
}

func (x *BlockData) Reset() {
	*x = BlockData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_server_proto_beacon_slots_beacon_slots_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockData) ProtoMessage() {}

func (x *BlockData) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_proto_beacon_slots_beacon_slots_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockData.ProtoReflect.Descriptor instead.
func (*BlockData) Descriptor() ([]byte, []int) {
	return file_pkg_server_proto_beacon_slots_beacon_slots_proto_rawDescGZIP(), []int{6}
}

func (x *BlockData) GetSlot() int64 {
	if x != nil {
		return x.Slot
	}
	return 0
}

func (x *BlockData) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *BlockData) GetBlockHash() string {
	if x != nil {
		return x.BlockHash
	}
	return ""
}

func (x *BlockData) GetParentHash() string {
	if x != nil {
		return x.ParentHash
	}
	return ""
}

func (x *BlockData) GetProposerIndex() string {
	if x != nil {
		return x.ProposerIndex
	}
	return ""
}

func (x *BlockData) GetAttestations() int64 {
	if x != nil {
		return x.Attestations
	}
	return 0
}

func (x *BlockData) GetDeposits() int64 {
	if x != nil {
		return x.Deposits
	}
	return 0
}

func (x *BlockData) GetExits() int64 {
	if x != nil {
		return x.Exits
	}
	return 0
}

func (x *BlockData) GetProposerSlashings() int64 {
	if x != nil {
		return x.ProposerSlashings
	}
	return 0
}

func (x *BlockData) GetAttesterSlashings() int64 {
	if x != nil {
		return x.AttesterSlashings
	}
	return 0
}

func (x *BlockData) GetSyncAggregateBits() int64 {
	if x != nil {
		return x.SyncAggregateBits
	}
	return 0
}

func (x *BlockData) GetSyncCommitteeSize() int32 {
	if x != nil {
		return x.SyncCommitteeSize
	}
	return 0
}

func (x *BlockData) GetBlobCount() int32 {
	if x != nil {
		return x.BlobCount
	}
	return 0
}

func (x *BlockData) GetExecutionPayloadSize() int64 {
	if x != nil {
		return x.ExecutionPayloadSize
	}
	return 0
}

func (x *BlockData) GetCapellaDeposits() int64 {
	if x != nil {
		return x.CapellaDeposits
	}
	return 0
}

func (x *BlockData) GetCapellaWithdrawals() int64 {
	if x != nil {
		return x.CapellaWithdrawals
	}
	return 0
}

func (x *BlockData) GetDenebBlobGasUsed() int64 {
	if x != nil {
		return x.DenebBlobGasUsed
	}
	return 0
}

func (x *BlockData) GetDenebBlobGasLimit() int64 {
	if x != nil {
		return x.DenebBlobGasLimit
	}
	return 0
}

func (x *BlockData) GetSeenBy() []string {
	if x != nil {
		return x.SeenBy
	}
	return nil
}

// Seen at slot time data
type SeenAtSlotTimeData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Slot      int64                  `protobuf:"varint,1,opt,name=slot,proto3" json:"slot,omitempty"`
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	NodeId    string                 `protobuf:"bytes,3,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	BlockHash string                 `protobuf:"bytes,4,opt,name=block_hash,json=blockHash,proto3" json:"block_hash,omitempty"`
	DelayMs   int64                  `protobuf:"varint,5,opt,name=delay_ms,json=delayMs,proto3" json:"delay_ms,omitempty"`
}

func (x *SeenAtSlotTimeData) Reset() {
	*x = SeenAtSlotTimeData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_server_proto_beacon_slots_beacon_slots_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SeenAtSlotTimeData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeenAtSlotTimeData) ProtoMessage() {}

func (x *SeenAtSlotTimeData) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_proto_beacon_slots_beacon_slots_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeenAtSlotTimeData.ProtoReflect.Descriptor instead.
func (*SeenAtSlotTimeData) Descriptor() ([]byte, []int) {
	return file_pkg_server_proto_beacon_slots_beacon_slots_proto_rawDescGZIP(), []int{7}
}

func (x *SeenAtSlotTimeData) GetSlot() int64 {
	if x != nil {
		return x.Slot
	}
	return 0
}

func (x *SeenAtSlotTimeData) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *SeenAtSlotTimeData) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *SeenAtSlotTimeData) GetBlockHash() string {
	if x != nil {
		return x.BlockHash
	}
	return ""
}

func (x *SeenAtSlotTimeData) GetDelayMs() int64 {
	if x != nil {
		return x.DelayMs
	}
	return 0
}

// Blob seen at slot time data
type BlobSeenAtSlotTimeData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Slot      int64                  `protobuf:"varint,1,opt,name=slot,proto3" json:"slot,omitempty"`
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	NodeId    string                 `protobuf:"bytes,3,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	BlockHash string                 `protobuf:"bytes,4,opt,name=block_hash,json=blockHash,proto3" json:"block_hash,omitempty"`
	BlobIndex int64                  `protobuf:"varint,5,opt,name=blob_index,json=blobIndex,proto3" json:"blob_index,omitempty"`
	DelayMs   int64                  `protobuf:"varint,6,opt,name=delay_ms,json=delayMs,proto3" json:"delay_ms,omitempty"`
}

func (x *BlobSeenAtSlotTimeData) Reset() {
	*x = BlobSeenAtSlotTimeData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_server_proto_beacon_slots_beacon_slots_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlobSeenAtSlotTimeData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlobSeenAtSlotTimeData) ProtoMessage() {}

func (x *BlobSeenAtSlotTimeData) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_proto_beacon_slots_beacon_slots_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlobSeenAtSlotTimeData.ProtoReflect.Descriptor instead.
func (*BlobSeenAtSlotTimeData) Descriptor() ([]byte, []int) {
	return file_pkg_server_proto_beacon_slots_beacon_slots_proto_rawDescGZIP(), []int{8}
}

func (x *BlobSeenAtSlotTimeData) GetSlot() int64 {
	if x != nil {
		return x.Slot
	}
	return 0
}

func (x *BlobSeenAtSlotTimeData) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *BlobSeenAtSlotTimeData) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *BlobSeenAtSlotTimeData) GetBlockHash() string {
	if x != nil {
		return x.BlockHash
	}
	return ""
}

func (x *BlobSeenAtSlotTimeData) GetBlobIndex() int64 {
	if x != nil {
		return x.BlobIndex
	}
	return 0
}

func (x *BlobSeenAtSlotTimeData) GetDelayMs() int64 {
	if x != nil {
		return x.DelayMs
	}
	return 0
}

// Attestation window
type AttestationWindow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Epoch          int64 `protobuf:"varint,1,opt,name=epoch,proto3" json:"epoch,omitempty"`
	CommitteeIndex int64 `protobuf:"varint,2,opt,name=committee_index,json=committeeIndex,proto3" json:"committee_index,omitempty"`
	Slot           int64 `protobuf:"varint,3,opt,name=slot,proto3" json:"slot,omitempty"`
	ValidatorCount int64 `protobuf:"varint,4,opt,name=validator_count,json=validatorCount,proto3" json:"validator_count,omitempty"`
}

func (x *AttestationWindow) Reset() {
	*x = AttestationWindow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_server_proto_beacon_slots_beacon_slots_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttestationWindow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttestationWindow) ProtoMessage() {}

func (x *AttestationWindow) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_proto_beacon_slots_beacon_slots_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttestationWindow.ProtoReflect.Descriptor instead.
func (*AttestationWindow) Descriptor() ([]byte, []int) {
	return file_pkg_server_proto_beacon_slots_beacon_slots_proto_rawDescGZIP(), []int{9}
}

func (x *AttestationWindow) GetEpoch() int64 {
	if x != nil {
		return x.Epoch
	}
	return 0
}

func (x *AttestationWindow) GetCommitteeIndex() int64 {
	if x != nil {
		return x.CommitteeIndex
	}
	return 0
}

func (x *AttestationWindow) GetSlot() int64 {
	if x != nil {
		return x.Slot
	}
	return 0
}

func (x *AttestationWindow) GetValidatorCount() int64 {
	if x != nil {
		return x.ValidatorCount
	}
	return 0
}

// Optimized slot data
type OptimizedSlotData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Slot                   int64                     `protobuf:"varint,1,opt,name=slot,proto3" json:"slot,omitempty"`
	Timestamp              *timestamppb.Timestamp    `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	ProposerData           *ProposerData             `protobuf:"bytes,3,opt,name=proposer_data,json=proposerData,proto3" json:"proposer_data,omitempty"`
	BlockData              *BlockData                `protobuf:"bytes,4,opt,name=block_data,json=blockData,proto3" json:"block_data,omitempty"`
	SeenAtSlotTimeData     []*SeenAtSlotTimeData     `protobuf:"bytes,5,rep,name=seen_at_slot_time_data,json=seenAtSlotTimeData,proto3" json:"seen_at_slot_time_data,omitempty"`
	BlobSeenAtSlotTimeData []*BlobSeenAtSlotTimeData `protobuf:"bytes,6,rep,name=blob_seen_at_slot_time_data,json=blobSeenAtSlotTimeData,proto3" json:"blob_seen_at_slot_time_data,omitempty"`
	AttestationWindows     []*AttestationWindow      `protobuf:"bytes,7,rep,name=attestation_windows,json=attestationWindows,proto3" json:"attestation_windows,omitempty"`
}

func (x *OptimizedSlotData) Reset() {
	*x = OptimizedSlotData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_server_proto_beacon_slots_beacon_slots_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OptimizedSlotData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OptimizedSlotData) ProtoMessage() {}

func (x *OptimizedSlotData) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_proto_beacon_slots_beacon_slots_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OptimizedSlotData.ProtoReflect.Descriptor instead.
func (*OptimizedSlotData) Descriptor() ([]byte, []int) {
	return file_pkg_server_proto_beacon_slots_beacon_slots_proto_rawDescGZIP(), []int{10}
}

func (x *OptimizedSlotData) GetSlot() int64 {
	if x != nil {
		return x.Slot
	}
	return 0
}

func (x *OptimizedSlotData) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *OptimizedSlotData) GetProposerData() *ProposerData {
	if x != nil {
		return x.ProposerData
	}
	return nil
}

func (x *OptimizedSlotData) GetBlockData() *BlockData {
	if x != nil {
		return x.BlockData
	}
	return nil
}

func (x *OptimizedSlotData) GetSeenAtSlotTimeData() []*SeenAtSlotTimeData {
	if x != nil {
		return x.SeenAtSlotTimeData
	}
	return nil
}

func (x *OptimizedSlotData) GetBlobSeenAtSlotTimeData() []*BlobSeenAtSlotTimeData {
	if x != nil {
		return x.BlobSeenAtSlotTimeData
	}
	return nil
}

func (x *OptimizedSlotData) GetAttestationWindows() []*AttestationWindow {
	if x != nil {
		return x.AttestationWindows
	}
	return nil
}

// Request to get processor state
type GetProcessorStateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Network string `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`
}

func (x *GetProcessorStateRequest) Reset() {
	*x = GetProcessorStateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_server_proto_beacon_slots_beacon_slots_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProcessorStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProcessorStateRequest) ProtoMessage() {}

func (x *GetProcessorStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_proto_beacon_slots_beacon_slots_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProcessorStateRequest.ProtoReflect.Descriptor instead.
func (*GetProcessorStateRequest) Descriptor() ([]byte, []int) {
	return file_pkg_server_proto_beacon_slots_beacon_slots_proto_rawDescGZIP(), []int{11}
}

func (x *GetProcessorStateRequest) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

// Response containing processor state
type GetProcessorStateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State *ProcessorState `protobuf:"bytes,1,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *GetProcessorStateResponse) Reset() {
	*x = GetProcessorStateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_server_proto_beacon_slots_beacon_slots_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProcessorStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProcessorStateResponse) ProtoMessage() {}

func (x *GetProcessorStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_proto_beacon_slots_beacon_slots_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProcessorStateResponse.ProtoReflect.Descriptor instead.
func (*GetProcessorStateResponse) Descriptor() ([]byte, []int) {
	return file_pkg_server_proto_beacon_slots_beacon_slots_proto_rawDescGZIP(), []int{12}
}

func (x *GetProcessorStateResponse) GetState() *ProcessorState {
	if x != nil {
		return x.State
	}
	return nil
}

// Request to get slot data
type GetSlotDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Network string `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`
	Slot    int64  `protobuf:"varint,2,opt,name=slot,proto3" json:"slot,omitempty"`
}

func (x *GetSlotDataRequest) Reset() {
	*x = GetSlotDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_server_proto_beacon_slots_beacon_slots_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSlotDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSlotDataRequest) ProtoMessage() {}

func (x *GetSlotDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_proto_beacon_slots_beacon_slots_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSlotDataRequest.ProtoReflect.Descriptor instead.
func (*GetSlotDataRequest) Descriptor() ([]byte, []int) {
	return file_pkg_server_proto_beacon_slots_beacon_slots_proto_rawDescGZIP(), []int{13}
}

func (x *GetSlotDataRequest) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *GetSlotDataRequest) GetSlot() int64 {
	if x != nil {
		return x.Slot
	}
	return 0
}

// Response containing slot data
type GetSlotDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SlotData *OptimizedSlotData `protobuf:"bytes,1,opt,name=slot_data,json=slotData,proto3" json:"slot_data,omitempty"`
}

func (x *GetSlotDataResponse) Reset() {
	*x = GetSlotDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_server_proto_beacon_slots_beacon_slots_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSlotDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSlotDataResponse) ProtoMessage() {}

func (x *GetSlotDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_proto_beacon_slots_beacon_slots_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSlotDataResponse.ProtoReflect.Descriptor instead.
func (*GetSlotDataResponse) Descriptor() ([]byte, []int) {
	return file_pkg_server_proto_beacon_slots_beacon_slots_proto_rawDescGZIP(), []int{14}
}

func (x *GetSlotDataResponse) GetSlotData() *OptimizedSlotData {
	if x != nil {
		return x.SlotData
	}
	return nil
}

// Request to get slot range data
type GetSlotRangeDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Network   string `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`
	StartSlot int64  `protobuf:"varint,2,opt,name=start_slot,json=startSlot,proto3" json:"start_slot,omitempty"`
	EndSlot   int64  `protobuf:"varint,3,opt,name=end_slot,json=endSlot,proto3" json:"end_slot,omitempty"`
}

func (x *GetSlotRangeDataRequest) Reset() {
	*x = GetSlotRangeDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_server_proto_beacon_slots_beacon_slots_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSlotRangeDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSlotRangeDataRequest) ProtoMessage() {}

func (x *GetSlotRangeDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_proto_beacon_slots_beacon_slots_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSlotRangeDataRequest.ProtoReflect.Descriptor instead.
func (*GetSlotRangeDataRequest) Descriptor() ([]byte, []int) {
	return file_pkg_server_proto_beacon_slots_beacon_slots_proto_rawDescGZIP(), []int{15}
}

func (x *GetSlotRangeDataRequest) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *GetSlotRangeDataRequest) GetStartSlot() int64 {
	if x != nil {
		return x.StartSlot
	}
	return 0
}

func (x *GetSlotRangeDataRequest) GetEndSlot() int64 {
	if x != nil {
		return x.EndSlot
	}
	return 0
}

// Response containing slot range data
type GetSlotRangeDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SlotData []*OptimizedSlotData `protobuf:"bytes,1,rep,name=slot_data,json=slotData,proto3" json:"slot_data,omitempty"`
}

func (x *GetSlotRangeDataResponse) Reset() {
	*x = GetSlotRangeDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_server_proto_beacon_slots_beacon_slots_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSlotRangeDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSlotRangeDataResponse) ProtoMessage() {}

func (x *GetSlotRangeDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_proto_beacon_slots_beacon_slots_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSlotRangeDataResponse.ProtoReflect.Descriptor instead.
func (*GetSlotRangeDataResponse) Descriptor() ([]byte, []int) {
	return file_pkg_server_proto_beacon_slots_beacon_slots_proto_rawDescGZIP(), []int{16}
}

func (x *GetSlotRangeDataResponse) GetSlotData() []*OptimizedSlotData {
	if x != nil {
		return x.SlotData
	}
	return nil
}

// Request to get node list
type GetNodesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Network string `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`
}

func (x *GetNodesRequest) Reset() {
	*x = GetNodesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_server_proto_beacon_slots_beacon_slots_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNodesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNodesRequest) ProtoMessage() {}

func (x *GetNodesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_proto_beacon_slots_beacon_slots_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNodesRequest.ProtoReflect.Descriptor instead.
func (*GetNodesRequest) Descriptor() ([]byte, []int) {
	return file_pkg_server_proto_beacon_slots_beacon_slots_proto_rawDescGZIP(), []int{17}
}

func (x *GetNodesRequest) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

// Response containing node list
type GetNodesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nodes []*Node `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
}

func (x *GetNodesResponse) Reset() {
	*x = GetNodesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_server_proto_beacon_slots_beacon_slots_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNodesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNodesResponse) ProtoMessage() {}

func (x *GetNodesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_proto_beacon_slots_beacon_slots_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNodesResponse.ProtoReflect.Descriptor instead.
func (*GetNodesResponse) Descriptor() ([]byte, []int) {
	return file_pkg_server_proto_beacon_slots_beacon_slots_proto_rawDescGZIP(), []int{18}
}

func (x *GetNodesResponse) GetNodes() []*Node {
	if x != nil {
		return x.Nodes
	}
	return nil
}

var File_pkg_server_proto_beacon_slots_beacon_slots_proto protoreflect.FileDescriptor

var file_pkg_server_proto_beacon_slots_beacon_slots_proto_rawDesc = []byte{
	0x0a, 0x30, 0x70, 0x6b, 0x67, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x62, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x2f,
	0x62, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0c, 0x62, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x73,
	0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x78, 0x0a, 0x06, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x65,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x73, 0x12, 0x38, 0x0a, 0x08, 0x62, 0x61, 0x63, 0x6b, 0x66, 0x69, 0x6c, 0x6c, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x62, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x5f, 0x73, 0x6c, 0x6f,
	0x74, 0x73, 0x2e, 0x42, 0x61, 0x63, 0x6b, 0x66, 0x69, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x08, 0x62, 0x61, 0x63, 0x6b, 0x66, 0x69, 0x6c, 0x6c, 0x22, 0x47, 0x0a, 0x0e, 0x42,
	0x61, 0x63, 0x6b, 0x66, 0x69, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x18, 0x0a,
	0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x6c, 0x6f, 0x74, 0x73,
	0x5f, 0x61, 0x67, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x6c, 0x6f, 0x74,
	0x73, 0x41, 0x67, 0x6f, 0x22, 0xad, 0x02, 0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x6f, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x41, 0x0a, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x5f,
	0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d, 0x6c, 0x61, 0x73,
	0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x12, 0x33, 0x0a, 0x13, 0x6c, 0x61,
	0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x5f, 0x73, 0x6c, 0x6f,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x11, 0x6c, 0x61, 0x73, 0x74, 0x50,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x53, 0x6c, 0x6f, 0x74, 0x88, 0x01, 0x01, 0x12,
	0x26, 0x0a, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x48, 0x01, 0x52, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x53, 0x6c, 0x6f, 0x74, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x48, 0x02, 0x52, 0x0a,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x53, 0x6c, 0x6f, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a,
	0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x16, 0x0a, 0x14, 0x5f,
	0x6c, 0x61, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x5f, 0x73,
	0x6c, 0x6f, 0x74, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f,
	0x73, 0x6c, 0x6f, 0x74, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f,
	0x73, 0x6c, 0x6f, 0x74, 0x22, 0xd9, 0x01, 0x0a, 0x10, 0x42, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x53,
	0x6c, 0x6f, 0x74, 0x73, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x12, 0x4e, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x62, 0x65, 0x61, 0x63, 0x6f, 0x6e,
	0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x2e, 0x42, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x53, 0x6c, 0x6f,
	0x74, 0x73, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f,
	0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x6f, 0x72, 0x73, 0x1a, 0x5b, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x32, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x62, 0x65, 0x61, 0x63, 0x6f, 0x6e,
	0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0x88, 0x01, 0x0a, 0x04, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x6f, 0x6e,
	0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xff, 0x01, 0x0a, 0x0c,
	0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04,
	0x73, 0x6c, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x6c, 0x6f, 0x74,
	0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x72,
	0x6f, 0x70, 0x6f, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x05, 0x76, 0x6f, 0x74, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x67, 0x72, 0x61, 0x66, 0x66,
	0x69, 0x74, 0x69, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x67, 0x72, 0x61, 0x66, 0x66,
	0x69, 0x74, 0x69, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x69, 0x73, 0x73, 0x65, 0x64, 0x5f, 0x73, 0x6c,
	0x6f, 0x74, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6d, 0x69, 0x73, 0x73, 0x65,
	0x64, 0x53, 0x6c, 0x6f, 0x74, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x6f, 0x72, 0x70, 0x68, 0x61, 0x6e,
	0x65, 0x64, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d,
	0x6f, 0x72, 0x70, 0x68, 0x61, 0x6e, 0x65, 0x64, 0x53, 0x6c, 0x6f, 0x74, 0x73, 0x22, 0xfe, 0x05,
	0x0a, 0x09, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x6c, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x12,
	0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x48, 0x61, 0x73, 0x68, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x72, 0x6f,
	0x70, 0x6f, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x12, 0x22, 0x0a, 0x0c, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x73,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x65, 0x78, 0x69, 0x74, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x65, 0x78, 0x69, 0x74, 0x73, 0x12, 0x2d, 0x0a, 0x12, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73,
	0x65, 0x72, 0x5f, 0x73, 0x6c, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x11, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x72, 0x53, 0x6c, 0x61, 0x73,
	0x68, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x2d, 0x0a, 0x12, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x65,
	0x72, 0x5f, 0x73, 0x6c, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x11, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x65, 0x72, 0x53, 0x6c, 0x61, 0x73, 0x68,
	0x69, 0x6e, 0x67, 0x73, 0x12, 0x2e, 0x0a, 0x13, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x61, 0x67, 0x67,
	0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x69, 0x74, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x11, 0x73, 0x79, 0x6e, 0x63, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65,
	0x42, 0x69, 0x74, 0x73, 0x12, 0x2e, 0x0a, 0x13, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x63, 0x6f, 0x6d,
	0x6d, 0x69, 0x74, 0x74, 0x65, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x11, 0x73, 0x79, 0x6e, 0x63, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x6c, 0x6f, 0x62, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x62, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x34, 0x0a, 0x16, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x14, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x61, 0x70,
	0x65, 0x6c, 0x6c, 0x61, 0x5f, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x73, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0f, 0x63, 0x61, 0x70, 0x65, 0x6c, 0x6c, 0x61, 0x44, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x73, 0x12, 0x2f, 0x0a, 0x13, 0x63, 0x61, 0x70, 0x65, 0x6c, 0x6c, 0x61, 0x5f,
	0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x12, 0x63, 0x61, 0x70, 0x65, 0x6c, 0x6c, 0x61, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72,
	0x61, 0x77, 0x61, 0x6c, 0x73, 0x12, 0x2d, 0x0a, 0x13, 0x64, 0x65, 0x6e, 0x65, 0x62, 0x5f, 0x62,
	0x6c, 0x6f, 0x62, 0x5f, 0x67, 0x61, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x64, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x10, 0x64, 0x65, 0x6e, 0x65, 0x62, 0x42, 0x6c, 0x6f, 0x62, 0x47, 0x61, 0x73,
	0x55, 0x73, 0x65, 0x64, 0x12, 0x2f, 0x0a, 0x14, 0x64, 0x65, 0x6e, 0x65, 0x62, 0x5f, 0x62, 0x6c,
	0x6f, 0x62, 0x5f, 0x67, 0x61, 0x73, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x12, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x11, 0x64, 0x65, 0x6e, 0x65, 0x62, 0x42, 0x6c, 0x6f, 0x62, 0x47, 0x61, 0x73,
	0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x65, 0x65, 0x6e, 0x5f, 0x62, 0x79,
	0x18, 0x13, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x65, 0x6e, 0x42, 0x79, 0x22, 0xb5,
	0x01, 0x0a, 0x12, 0x53, 0x65, 0x65, 0x6e, 0x41, 0x74, 0x53, 0x6c, 0x6f, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x12, 0x19, 0x0a, 0x08, 0x64,
	0x65, 0x6c, 0x61, 0x79, 0x5f, 0x6d, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x64,
	0x65, 0x6c, 0x61, 0x79, 0x4d, 0x73, 0x22, 0xd8, 0x01, 0x0a, 0x16, 0x42, 0x6c, 0x6f, 0x62, 0x53,
	0x65, 0x65, 0x6e, 0x41, 0x74, 0x53, 0x6c, 0x6f, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x73, 0x6c, 0x6f, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12,
	0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x6c, 0x6f, 0x62, 0x5f,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x62, 0x6c, 0x6f,
	0x62, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x5f,
	0x6d, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x4d,
	0x73, 0x22, 0x8f, 0x01, 0x0a, 0x11, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x70, 0x6f, 0x63, 0x68,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x12, 0x27, 0x0a,
	0x0f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x74, 0x65,
	0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x22, 0xe5, 0x03, 0x0a, 0x11, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x69, 0x7a, 0x65,
	0x64, 0x53, 0x6c, 0x6f, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6c, 0x6f,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x12, 0x38, 0x0a,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x3f, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x70, 0x6f,
	0x73, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x62, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x2e, 0x50, 0x72,
	0x6f, 0x70, 0x6f, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x70,
	0x6f, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x36, 0x0a, 0x0a, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62,
	0x65, 0x61, 0x63, 0x6f, 0x6e, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x2e, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x44, 0x61, 0x74, 0x61, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x54, 0x0a, 0x16, 0x73, 0x65, 0x65, 0x6e, 0x5f, 0x61, 0x74, 0x5f, 0x73, 0x6c, 0x6f, 0x74,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x62, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x2e,
	0x53, 0x65, 0x65, 0x6e, 0x41, 0x74, 0x53, 0x6c, 0x6f, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x12, 0x73, 0x65, 0x65, 0x6e, 0x41, 0x74, 0x53, 0x6c, 0x6f, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x61, 0x0a, 0x1b, 0x62, 0x6c, 0x6f, 0x62, 0x5f, 0x73,
	0x65, 0x65, 0x6e, 0x5f, 0x61, 0x74, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x65,
	0x61, 0x63, 0x6f, 0x6e, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x2e, 0x42, 0x6c, 0x6f, 0x62, 0x53,
	0x65, 0x65, 0x6e, 0x41, 0x74, 0x53, 0x6c, 0x6f, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x16, 0x62, 0x6c, 0x6f, 0x62, 0x53, 0x65, 0x65, 0x6e, 0x41, 0x74, 0x53, 0x6c, 0x6f,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x50, 0x0a, 0x13, 0x61, 0x74, 0x74,
	0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x73,
	0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x62, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x5f,
	0x73, 0x6c, 0x6f, 0x74, 0x73, 0x2e, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x52, 0x12, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x73, 0x22, 0x34, 0x0a, 0x18, 0x47,
	0x65, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x22, 0x4f, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f,
	0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32,
	0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x62, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x2e, 0x50, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x22, 0x42, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x53, 0x6c, 0x6f, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x22, 0x53, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x53, 0x6c, 0x6f,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a,
	0x09, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x62, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x2e,
	0x4f, 0x70, 0x74, 0x69, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x53, 0x6c, 0x6f, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x08, 0x73, 0x6c, 0x6f, 0x74, 0x44, 0x61, 0x74, 0x61, 0x22, 0x6d, 0x0a, 0x17, 0x47,
	0x65, 0x74, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x53, 0x6c, 0x6f, 0x74, 0x12,
	0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x53, 0x6c, 0x6f, 0x74, 0x22, 0x58, 0x0a, 0x18, 0x47, 0x65,
	0x74, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x09, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x62, 0x65, 0x61, 0x63,
	0x6f, 0x6e, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x69, 0x7a,
	0x65, 0x64, 0x53, 0x6c, 0x6f, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x08, 0x73, 0x6c, 0x6f, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x22, 0x2b, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x22, 0x3c, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x62, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x5f, 0x73, 0x6c,
	0x6f, 0x74, 0x73, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x32,
	0x84, 0x03, 0x0a, 0x12, 0x42, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x53, 0x6c, 0x6f, 0x74, 0x73, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x66, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x26, 0x2e, 0x62, 0x65,
	0x61, 0x63, 0x6f, 0x6e, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x62, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x5f, 0x73, 0x6c, 0x6f,
	0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x54,
	0x0a, 0x0b, 0x47, 0x65, 0x74, 0x53, 0x6c, 0x6f, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x20, 0x2e,
	0x62, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74,
	0x53, 0x6c, 0x6f, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x21, 0x2e, 0x62, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x2e, 0x47,
	0x65, 0x74, 0x53, 0x6c, 0x6f, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x63, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x53, 0x6c, 0x6f, 0x74, 0x52,
	0x61, 0x6e, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x25, 0x2e, 0x62, 0x65, 0x61, 0x63, 0x6f,
	0x6e, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x6c, 0x6f, 0x74, 0x52,
	0x61, 0x6e, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x26, 0x2e, 0x62, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x2e, 0x47,
	0x65, 0x74, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x08, 0x47, 0x65, 0x74,
	0x4e, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x1d, 0x2e, 0x62, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x5f, 0x73,
	0x6c, 0x6f, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x62, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x5f, 0x73, 0x6c,
	0x6f, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x33, 0x5a, 0x31, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x65, 0x74, 0x68, 0x70, 0x61, 0x6e, 0x64, 0x61, 0x6f, 0x70, 0x73,
	0x2f, 0x6c, 0x61, 0x62, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x62,
	0x65, 0x61, 0x63, 0x6f, 0x6e, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_pkg_server_proto_beacon_slots_beacon_slots_proto_rawDescOnce sync.Once
	file_pkg_server_proto_beacon_slots_beacon_slots_proto_rawDescData = file_pkg_server_proto_beacon_slots_beacon_slots_proto_rawDesc
)

func file_pkg_server_proto_beacon_slots_beacon_slots_proto_rawDescGZIP() []byte {
	file_pkg_server_proto_beacon_slots_beacon_slots_proto_rawDescOnce.Do(func() {
		file_pkg_server_proto_beacon_slots_beacon_slots_proto_rawDescData = protoimpl.X.CompressGZIP(file_pkg_server_proto_beacon_slots_beacon_slots_proto_rawDescData)
	})
	return file_pkg_server_proto_beacon_slots_beacon_slots_proto_rawDescData
}

var file_pkg_server_proto_beacon_slots_beacon_slots_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_pkg_server_proto_beacon_slots_beacon_slots_proto_goTypes = []any{
	(*Config)(nil),                    // 0: beacon_slots.Config
	(*BackfillConfig)(nil),            // 1: beacon_slots.BackfillConfig
	(*ProcessorState)(nil),            // 2: beacon_slots.ProcessorState
	(*BeaconSlotsState)(nil),          // 3: beacon_slots.BeaconSlotsState
	(*Node)(nil),                      // 4: beacon_slots.Node
	(*ProposerData)(nil),              // 5: beacon_slots.ProposerData
	(*BlockData)(nil),                 // 6: beacon_slots.BlockData
	(*SeenAtSlotTimeData)(nil),        // 7: beacon_slots.SeenAtSlotTimeData
	(*BlobSeenAtSlotTimeData)(nil),    // 8: beacon_slots.BlobSeenAtSlotTimeData
	(*AttestationWindow)(nil),         // 9: beacon_slots.AttestationWindow
	(*OptimizedSlotData)(nil),         // 10: beacon_slots.OptimizedSlotData
	(*GetProcessorStateRequest)(nil),  // 11: beacon_slots.GetProcessorStateRequest
	(*GetProcessorStateResponse)(nil), // 12: beacon_slots.GetProcessorStateResponse
	(*GetSlotDataRequest)(nil),        // 13: beacon_slots.GetSlotDataRequest
	(*GetSlotDataResponse)(nil),       // 14: beacon_slots.GetSlotDataResponse
	(*GetSlotRangeDataRequest)(nil),   // 15: beacon_slots.GetSlotRangeDataRequest
	(*GetSlotRangeDataResponse)(nil),  // 16: beacon_slots.GetSlotRangeDataResponse
	(*GetNodesRequest)(nil),           // 17: beacon_slots.GetNodesRequest
	(*GetNodesResponse)(nil),          // 18: beacon_slots.GetNodesResponse
	nil,                               // 19: beacon_slots.BeaconSlotsState.ProcessorsEntry
	(*timestamppb.Timestamp)(nil),     // 20: google.protobuf.Timestamp
}
var file_pkg_server_proto_beacon_slots_beacon_slots_proto_depIdxs = []int32{
	1,  // 0: beacon_slots.Config.backfill:type_name -> beacon_slots.BackfillConfig
	20, // 1: beacon_slots.ProcessorState.last_processed:type_name -> google.protobuf.Timestamp
	19, // 2: beacon_slots.BeaconSlotsState.processors:type_name -> beacon_slots.BeaconSlotsState.ProcessorsEntry
	20, // 3: beacon_slots.ProposerData.timestamp:type_name -> google.protobuf.Timestamp
	20, // 4: beacon_slots.BlockData.timestamp:type_name -> google.protobuf.Timestamp
	20, // 5: beacon_slots.SeenAtSlotTimeData.timestamp:type_name -> google.protobuf.Timestamp
	20, // 6: beacon_slots.BlobSeenAtSlotTimeData.timestamp:type_name -> google.protobuf.Timestamp
	20, // 7: beacon_slots.OptimizedSlotData.timestamp:type_name -> google.protobuf.Timestamp
	5,  // 8: beacon_slots.OptimizedSlotData.proposer_data:type_name -> beacon_slots.ProposerData
	6,  // 9: beacon_slots.OptimizedSlotData.block_data:type_name -> beacon_slots.BlockData
	7,  // 10: beacon_slots.OptimizedSlotData.seen_at_slot_time_data:type_name -> beacon_slots.SeenAtSlotTimeData
	8,  // 11: beacon_slots.OptimizedSlotData.blob_seen_at_slot_time_data:type_name -> beacon_slots.BlobSeenAtSlotTimeData
	9,  // 12: beacon_slots.OptimizedSlotData.attestation_windows:type_name -> beacon_slots.AttestationWindow
	2,  // 13: beacon_slots.GetProcessorStateResponse.state:type_name -> beacon_slots.ProcessorState
	10, // 14: beacon_slots.GetSlotDataResponse.slot_data:type_name -> beacon_slots.OptimizedSlotData
	10, // 15: beacon_slots.GetSlotRangeDataResponse.slot_data:type_name -> beacon_slots.OptimizedSlotData
	4,  // 16: beacon_slots.GetNodesResponse.nodes:type_name -> beacon_slots.Node
	2,  // 17: beacon_slots.BeaconSlotsState.ProcessorsEntry.value:type_name -> beacon_slots.ProcessorState
	11, // 18: beacon_slots.BeaconSlotsService.GetProcessorState:input_type -> beacon_slots.GetProcessorStateRequest
	13, // 19: beacon_slots.BeaconSlotsService.GetSlotData:input_type -> beacon_slots.GetSlotDataRequest
	15, // 20: beacon_slots.BeaconSlotsService.GetSlotRangeData:input_type -> beacon_slots.GetSlotRangeDataRequest
	17, // 21: beacon_slots.BeaconSlotsService.GetNodes:input_type -> beacon_slots.GetNodesRequest
	12, // 22: beacon_slots.BeaconSlotsService.GetProcessorState:output_type -> beacon_slots.GetProcessorStateResponse
	14, // 23: beacon_slots.BeaconSlotsService.GetSlotData:output_type -> beacon_slots.GetSlotDataResponse
	16, // 24: beacon_slots.BeaconSlotsService.GetSlotRangeData:output_type -> beacon_slots.GetSlotRangeDataResponse
	18, // 25: beacon_slots.BeaconSlotsService.GetNodes:output_type -> beacon_slots.GetNodesResponse
	22, // [22:26] is the sub-list for method output_type
	18, // [18:22] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_pkg_server_proto_beacon_slots_beacon_slots_proto_init() }
func file_pkg_server_proto_beacon_slots_beacon_slots_proto_init() {
	if File_pkg_server_proto_beacon_slots_beacon_slots_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pkg_server_proto_beacon_slots_beacon_slots_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*Config); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_server_proto_beacon_slots_beacon_slots_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*BackfillConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_server_proto_beacon_slots_beacon_slots_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*ProcessorState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_server_proto_beacon_slots_beacon_slots_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*BeaconSlotsState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_server_proto_beacon_slots_beacon_slots_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*Node); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_server_proto_beacon_slots_beacon_slots_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*ProposerData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_server_proto_beacon_slots_beacon_slots_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*BlockData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_server_proto_beacon_slots_beacon_slots_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*SeenAtSlotTimeData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_server_proto_beacon_slots_beacon_slots_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*BlobSeenAtSlotTimeData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_server_proto_beacon_slots_beacon_slots_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*AttestationWindow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_server_proto_beacon_slots_beacon_slots_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*OptimizedSlotData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_server_proto_beacon_slots_beacon_slots_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*GetProcessorStateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_server_proto_beacon_slots_beacon_slots_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*GetProcessorStateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_server_proto_beacon_slots_beacon_slots_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*GetSlotDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_server_proto_beacon_slots_beacon_slots_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*GetSlotDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_server_proto_beacon_slots_beacon_slots_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*GetSlotRangeDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_server_proto_beacon_slots_beacon_slots_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*GetSlotRangeDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_server_proto_beacon_slots_beacon_slots_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*GetNodesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_server_proto_beacon_slots_beacon_slots_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*GetNodesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_pkg_server_proto_beacon_slots_beacon_slots_proto_msgTypes[2].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pkg_server_proto_beacon_slots_beacon_slots_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pkg_server_proto_beacon_slots_beacon_slots_proto_goTypes,
		DependencyIndexes: file_pkg_server_proto_beacon_slots_beacon_slots_proto_depIdxs,
		MessageInfos:      file_pkg_server_proto_beacon_slots_beacon_slots_proto_msgTypes,
	}.Build()
	File_pkg_server_proto_beacon_slots_beacon_slots_proto = out.File
	file_pkg_server_proto_beacon_slots_beacon_slots_proto_rawDesc = nil
	file_pkg_server_proto_beacon_slots_beacon_slots_proto_goTypes = nil
	file_pkg_server_proto_beacon_slots_beacon_slots_proto_depIdxs = nil
}
