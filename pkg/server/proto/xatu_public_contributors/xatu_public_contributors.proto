syntax = "proto3";

package xatu_public_contributors;

import "google/protobuf/timestamp.proto";

option go_package = "github.com/ethpandaops/lab/pkg/proto/xatu_public_contributors";

// Configuration for the xatu_public_contributors service
message Config {
  bool enabled = 1;
  string redis_key_prefix = 2;
  repeated string networks = 3;
  int64 backfill_hours = 4;
}

// State tracking for contributors service
message ContributorsState {
  string network = 1;
  map<string, ProcessorState> processors = 2;
}

// State for a specific processor
message ProcessorState {
  google.protobuf.Timestamp last_processed = 1;
  map<string, google.protobuf.Timestamp> last_processed_windows = 2;
}

// Count of nodes for a specific country
message NodeCount {
  string country = 1;
  int32 count = 2;
}

// Network statistics
message NetworkStats {
  string network = 1;
  repeated NodeCount node_counts = 2;
  int32 total_nodes = 3;
  int32 total_countries = 4;
}

// Summary data for dashboard
message SummaryData {
  repeated NetworkStats networks = 1;
  int32 total_nodes = 2;
  int32 total_countries = 3;
}

// Data point for a country
message CountryDataPoint {
  google.protobuf.Timestamp timestamp = 1;
  repeated NodeCount node_counts = 2;
  int32 total_nodes = 3;
  int32 total_countries = 4;
}

// Data point for a user
message UserDataPoint {
  google.protobuf.Timestamp timestamp = 1;
  int32 user_count = 2;
}

// User summary data
message UserSummary {
  int32 current_user_count = 1;
  repeated UserDataPoint data_points = 2;
}

// Top networks by node count
message TopNetworks {
  repeated NetworkStats networks = 1;
}

// Request to get summary data
message GetSummaryRequest {
  string network = 1;
}

// Response containing summary data
message GetSummaryResponse {
  SummaryData summary = 1;
}

// Request to get country data
message GetCountryDataRequest {
  string network = 1;
  // Optional time range parameters could be added here
}

// Response containing country data
message GetCountryDataResponse {
  repeated CountryDataPoint data_points = 1;
}

// Request to get user data
message GetUserDataRequest {
  string network = 1;
  // Optional time range parameters could be added here
}

// Response containing user data
message GetUserDataResponse {
  UserSummary user_summary = 1;
}

// Request to get top networks
message GetTopNetworksRequest {
  int32 limit = 1; // Number of top networks to return
}

// Response containing top networks
message GetTopNetworksResponse {
  TopNetworks top_networks = 1;
}

// The xatu_public_contributors service definition
service XatuPublicContributorsService {
  // Get summary data
  rpc GetSummary(GetSummaryRequest) returns (GetSummaryResponse) {}
  
  // Get country data
  rpc GetCountryData(GetCountryDataRequest) returns (GetCountryDataResponse) {}
  
  // Get user data
  rpc GetUserData(GetUserDataRequest) returns (GetUserDataResponse) {}
  
  // Get top networks
  rpc GetTopNetworks(GetTopNetworksRequest) returns (GetTopNetworksResponse) {}
} 