// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: pkg/srv/proto/xatu_public_contributors/xatu_public_contributors.proto

package xatu_public_contributors

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// TimeWindow represents a time window configuration
type TimeWindow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	File  string `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`
	Step  string `protobuf:"bytes,2,opt,name=step,proto3" json:"step,omitempty"`
	Label string `protobuf:"bytes,3,opt,name=label,proto3" json:"label,omitempty"`
	Range string `protobuf:"bytes,4,opt,name=range,proto3" json:"range,omitempty"`
}

func (x *TimeWindow) Reset() {
	*x = TimeWindow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_srv_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimeWindow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeWindow) ProtoMessage() {}

func (x *TimeWindow) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_srv_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeWindow.ProtoReflect.Descriptor instead.
func (*TimeWindow) Descriptor() ([]byte, []int) {
	return file_pkg_srv_proto_xatu_public_contributors_xatu_public_contributors_proto_rawDescGZIP(), []int{0}
}

func (x *TimeWindow) GetFile() string {
	if x != nil {
		return x.File
	}
	return ""
}

func (x *TimeWindow) GetStep() string {
	if x != nil {
		return x.Step
	}
	return ""
}

func (x *TimeWindow) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *TimeWindow) GetRange() string {
	if x != nil {
		return x.Range
	}
	return ""
}

// ProcessorState tracks the processing state for a specific processor
type ProcessorState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Network              string                            `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`
	Processor            string                            `protobuf:"bytes,2,opt,name=processor,proto3" json:"processor,omitempty"`
	LastProcessed        *timestamppb.Timestamp            `protobuf:"bytes,3,opt,name=last_processed,json=lastProcessed,proto3" json:"last_processed,omitempty"`
	LastProcessedWindows map[string]*timestamppb.Timestamp `protobuf:"bytes,4,rep,name=last_processed_windows,json=lastProcessedWindows,proto3" json:"last_processed_windows,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ProcessorState) Reset() {
	*x = ProcessorState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_srv_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessorState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessorState) ProtoMessage() {}

func (x *ProcessorState) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_srv_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessorState.ProtoReflect.Descriptor instead.
func (*ProcessorState) Descriptor() ([]byte, []int) {
	return file_pkg_srv_proto_xatu_public_contributors_xatu_public_contributors_proto_rawDescGZIP(), []int{1}
}

func (x *ProcessorState) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *ProcessorState) GetProcessor() string {
	if x != nil {
		return x.Processor
	}
	return ""
}

func (x *ProcessorState) GetLastProcessed() *timestamppb.Timestamp {
	if x != nil {
		return x.LastProcessed
	}
	return nil
}

func (x *ProcessorState) GetLastProcessedWindows() map[string]*timestamppb.Timestamp {
	if x != nil {
		return x.LastProcessedWindows
	}
	return nil
}

// NodeCount represents a count of nodes, differentiated between total and public
type NodeCount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalNodes  int32 `protobuf:"varint,1,opt,name=total_nodes,json=totalNodes,proto3" json:"total_nodes,omitempty"`
	PublicNodes int32 `protobuf:"varint,2,opt,name=public_nodes,json=publicNodes,proto3" json:"public_nodes,omitempty"`
}

func (x *NodeCount) Reset() {
	*x = NodeCount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_srv_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeCount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeCount) ProtoMessage() {}

func (x *NodeCount) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_srv_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeCount.ProtoReflect.Descriptor instead.
func (*NodeCount) Descriptor() ([]byte, []int) {
	return file_pkg_srv_proto_xatu_public_contributors_xatu_public_contributors_proto_rawDescGZIP(), []int{2}
}

func (x *NodeCount) GetTotalNodes() int32 {
	if x != nil {
		return x.TotalNodes
	}
	return 0
}

func (x *NodeCount) GetPublicNodes() int32 {
	if x != nil {
		return x.PublicNodes
	}
	return 0
}

// NetworkStats represents statistics for a specific network
type NetworkStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalNodes               int32                 `protobuf:"varint,1,opt,name=total_nodes,json=totalNodes,proto3" json:"total_nodes,omitempty"`
	TotalPublicNodes         int32                 `protobuf:"varint,2,opt,name=total_public_nodes,json=totalPublicNodes,proto3" json:"total_public_nodes,omitempty"`
	Countries                map[string]*NodeCount `protobuf:"bytes,3,rep,name=countries,proto3" json:"countries,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Continents               map[string]*NodeCount `protobuf:"bytes,4,rep,name=continents,proto3" json:"continents,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Cities                   map[string]*NodeCount `protobuf:"bytes,5,rep,name=cities,proto3" json:"cities,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ConsensusImplementations map[string]*NodeCount `protobuf:"bytes,6,rep,name=consensus_implementations,json=consensusImplementations,proto3" json:"consensus_implementations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *NetworkStats) Reset() {
	*x = NetworkStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_srv_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetworkStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkStats) ProtoMessage() {}

func (x *NetworkStats) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_srv_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkStats.ProtoReflect.Descriptor instead.
func (*NetworkStats) Descriptor() ([]byte, []int) {
	return file_pkg_srv_proto_xatu_public_contributors_xatu_public_contributors_proto_rawDescGZIP(), []int{3}
}

func (x *NetworkStats) GetTotalNodes() int32 {
	if x != nil {
		return x.TotalNodes
	}
	return 0
}

func (x *NetworkStats) GetTotalPublicNodes() int32 {
	if x != nil {
		return x.TotalPublicNodes
	}
	return 0
}

func (x *NetworkStats) GetCountries() map[string]*NodeCount {
	if x != nil {
		return x.Countries
	}
	return nil
}

func (x *NetworkStats) GetContinents() map[string]*NodeCount {
	if x != nil {
		return x.Continents
	}
	return nil
}

func (x *NetworkStats) GetCities() map[string]*NodeCount {
	if x != nil {
		return x.Cities
	}
	return nil
}

func (x *NetworkStats) GetConsensusImplementations() map[string]*NodeCount {
	if x != nil {
		return x.ConsensusImplementations
	}
	return nil
}

// SummaryData represents the summary data for all networks
type SummaryData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UpdatedAt int64                    `protobuf:"varint,1,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"` // Unix timestamp
	Networks  map[string]*NetworkStats `protobuf:"bytes,2,rep,name=networks,proto3" json:"networks,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *SummaryData) Reset() {
	*x = SummaryData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_srv_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SummaryData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SummaryData) ProtoMessage() {}

func (x *SummaryData) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_srv_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SummaryData.ProtoReflect.Descriptor instead.
func (*SummaryData) Descriptor() ([]byte, []int) {
	return file_pkg_srv_proto_xatu_public_contributors_xatu_public_contributors_proto_rawDescGZIP(), []int{4}
}

func (x *SummaryData) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *SummaryData) GetNetworks() map[string]*NetworkStats {
	if x != nil {
		return x.Networks
	}
	return nil
}

// CountryDataPoint represents a country with its node count
type CountryDataPoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value int32  `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *CountryDataPoint) Reset() {
	*x = CountryDataPoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_srv_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountryDataPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountryDataPoint) ProtoMessage() {}

func (x *CountryDataPoint) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_srv_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountryDataPoint.ProtoReflect.Descriptor instead.
func (*CountryDataPoint) Descriptor() ([]byte, []int) {
	return file_pkg_srv_proto_xatu_public_contributors_xatu_public_contributors_proto_rawDescGZIP(), []int{5}
}

func (x *CountryDataPoint) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CountryDataPoint) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// CountriesTimePoint represents countries data for a specific time
type CountriesTimePoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time      int64               `protobuf:"varint,1,opt,name=time,proto3" json:"time,omitempty"` // Unix timestamp
	Countries []*CountryDataPoint `protobuf:"bytes,2,rep,name=countries,proto3" json:"countries,omitempty"`
}

func (x *CountriesTimePoint) Reset() {
	*x = CountriesTimePoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_srv_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountriesTimePoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountriesTimePoint) ProtoMessage() {}

func (x *CountriesTimePoint) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_srv_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountriesTimePoint.ProtoReflect.Descriptor instead.
func (*CountriesTimePoint) Descriptor() ([]byte, []int) {
	return file_pkg_srv_proto_xatu_public_contributors_xatu_public_contributors_proto_rawDescGZIP(), []int{6}
}

func (x *CountriesTimePoint) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *CountriesTimePoint) GetCountries() []*CountryDataPoint {
	if x != nil {
		return x.Countries
	}
	return nil
}

// UserDataPoint represents a user with its node count
type UserDataPoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value int32  `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *UserDataPoint) Reset() {
	*x = UserDataPoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_srv_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserDataPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserDataPoint) ProtoMessage() {}

func (x *UserDataPoint) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_srv_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserDataPoint.ProtoReflect.Descriptor instead.
func (*UserDataPoint) Descriptor() ([]byte, []int) {
	return file_pkg_srv_proto_xatu_public_contributors_xatu_public_contributors_proto_rawDescGZIP(), []int{7}
}

func (x *UserDataPoint) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserDataPoint) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// UsersTimePoint represents users data for a specific time
type UsersTimePoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time  int64            `protobuf:"varint,1,opt,name=time,proto3" json:"time,omitempty"` // Unix timestamp
	Users []*UserDataPoint `protobuf:"bytes,2,rep,name=users,proto3" json:"users,omitempty"`
}

func (x *UsersTimePoint) Reset() {
	*x = UsersTimePoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_srv_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UsersTimePoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsersTimePoint) ProtoMessage() {}

func (x *UsersTimePoint) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_srv_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsersTimePoint.ProtoReflect.Descriptor instead.
func (*UsersTimePoint) Descriptor() ([]byte, []int) {
	return file_pkg_srv_proto_xatu_public_contributors_xatu_public_contributors_proto_rawDescGZIP(), []int{8}
}

func (x *UsersTimePoint) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *UsersTimePoint) GetUsers() []*UserDataPoint {
	if x != nil {
		return x.Users
	}
	return nil
}

// UserSummary represents a summary for a specific user
type UserSummary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User       string           `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Networks   map[string]int32 `protobuf:"bytes,2,rep,name=networks,proto3" json:"networks,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	Countries  map[string]int32 `protobuf:"bytes,3,rep,name=countries,proto3" json:"countries,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	Continents map[string]int32 `protobuf:"bytes,4,rep,name=continents,proto3" json:"continents,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	Cities     map[string]int32 `protobuf:"bytes,5,rep,name=cities,proto3" json:"cities,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	Clients    map[string]int32 `protobuf:"bytes,6,rep,name=clients,proto3" json:"clients,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	FirstSeen  int64            `protobuf:"varint,7,opt,name=first_seen,json=firstSeen,proto3" json:"first_seen,omitempty"` // Unix timestamp
	LastSeen   int64            `protobuf:"varint,8,opt,name=last_seen,json=lastSeen,proto3" json:"last_seen,omitempty"`    // Unix timestamp
	TotalNodes int32            `protobuf:"varint,9,opt,name=total_nodes,json=totalNodes,proto3" json:"total_nodes,omitempty"`
}

func (x *UserSummary) Reset() {
	*x = UserSummary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_srv_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserSummary) ProtoMessage() {}

func (x *UserSummary) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_srv_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserSummary.ProtoReflect.Descriptor instead.
func (*UserSummary) Descriptor() ([]byte, []int) {
	return file_pkg_srv_proto_xatu_public_contributors_xatu_public_contributors_proto_rawDescGZIP(), []int{9}
}

func (x *UserSummary) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *UserSummary) GetNetworks() map[string]int32 {
	if x != nil {
		return x.Networks
	}
	return nil
}

func (x *UserSummary) GetCountries() map[string]int32 {
	if x != nil {
		return x.Countries
	}
	return nil
}

func (x *UserSummary) GetContinents() map[string]int32 {
	if x != nil {
		return x.Continents
	}
	return nil
}

func (x *UserSummary) GetCities() map[string]int32 {
	if x != nil {
		return x.Cities
	}
	return nil
}

func (x *UserSummary) GetClients() map[string]int32 {
	if x != nil {
		return x.Clients
	}
	return nil
}

func (x *UserSummary) GetFirstSeen() int64 {
	if x != nil {
		return x.FirstSeen
	}
	return 0
}

func (x *UserSummary) GetLastSeen() int64 {
	if x != nil {
		return x.LastSeen
	}
	return 0
}

func (x *UserSummary) GetTotalNodes() int32 {
	if x != nil {
		return x.TotalNodes
	}
	return 0
}

// Workflow and activity parameters
type ProcessorParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NetworkName string `protobuf:"bytes,1,opt,name=network_name,json=networkName,proto3" json:"network_name,omitempty"`
	WindowName  string `protobuf:"bytes,2,opt,name=window_name,json=windowName,proto3" json:"window_name,omitempty"`
}

func (x *ProcessorParams) Reset() {
	*x = ProcessorParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_srv_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessorParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessorParams) ProtoMessage() {}

func (x *ProcessorParams) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_srv_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessorParams.ProtoReflect.Descriptor instead.
func (*ProcessorParams) Descriptor() ([]byte, []int) {
	return file_pkg_srv_proto_xatu_public_contributors_xatu_public_contributors_proto_rawDescGZIP(), []int{10}
}

func (x *ProcessorParams) GetNetworkName() string {
	if x != nil {
		return x.NetworkName
	}
	return ""
}

func (x *ProcessorParams) GetWindowName() string {
	if x != nil {
		return x.WindowName
	}
	return ""
}

type SummaryProcessorParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NetworkName string `protobuf:"bytes,1,opt,name=network_name,json=networkName,proto3" json:"network_name,omitempty"`
}

func (x *SummaryProcessorParams) Reset() {
	*x = SummaryProcessorParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_srv_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SummaryProcessorParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SummaryProcessorParams) ProtoMessage() {}

func (x *SummaryProcessorParams) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_srv_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SummaryProcessorParams.ProtoReflect.Descriptor instead.
func (*SummaryProcessorParams) Descriptor() ([]byte, []int) {
	return file_pkg_srv_proto_xatu_public_contributors_xatu_public_contributors_proto_rawDescGZIP(), []int{11}
}

func (x *SummaryProcessorParams) GetNetworkName() string {
	if x != nil {
		return x.NetworkName
	}
	return ""
}

type CountriesProcessorParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NetworkName string `protobuf:"bytes,1,opt,name=network_name,json=networkName,proto3" json:"network_name,omitempty"`
}

func (x *CountriesProcessorParams) Reset() {
	*x = CountriesProcessorParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_srv_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountriesProcessorParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountriesProcessorParams) ProtoMessage() {}

func (x *CountriesProcessorParams) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_srv_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountriesProcessorParams.ProtoReflect.Descriptor instead.
func (*CountriesProcessorParams) Descriptor() ([]byte, []int) {
	return file_pkg_srv_proto_xatu_public_contributors_xatu_public_contributors_proto_rawDescGZIP(), []int{12}
}

func (x *CountriesProcessorParams) GetNetworkName() string {
	if x != nil {
		return x.NetworkName
	}
	return ""
}

type UsersProcessorParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NetworkName string `protobuf:"bytes,1,opt,name=network_name,json=networkName,proto3" json:"network_name,omitempty"`
}

func (x *UsersProcessorParams) Reset() {
	*x = UsersProcessorParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_srv_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UsersProcessorParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsersProcessorParams) ProtoMessage() {}

func (x *UsersProcessorParams) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_srv_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsersProcessorParams.ProtoReflect.Descriptor instead.
func (*UsersProcessorParams) Descriptor() ([]byte, []int) {
	return file_pkg_srv_proto_xatu_public_contributors_xatu_public_contributors_proto_rawDescGZIP(), []int{13}
}

func (x *UsersProcessorParams) GetNetworkName() string {
	if x != nil {
		return x.NetworkName
	}
	return ""
}

type UserSummariesProcessorParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NetworkName string `protobuf:"bytes,1,opt,name=network_name,json=networkName,proto3" json:"network_name,omitempty"`
}

func (x *UserSummariesProcessorParams) Reset() {
	*x = UserSummariesProcessorParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_srv_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserSummariesProcessorParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserSummariesProcessorParams) ProtoMessage() {}

func (x *UserSummariesProcessorParams) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_srv_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserSummariesProcessorParams.ProtoReflect.Descriptor instead.
func (*UserSummariesProcessorParams) Descriptor() ([]byte, []int) {
	return file_pkg_srv_proto_xatu_public_contributors_xatu_public_contributors_proto_rawDescGZIP(), []int{14}
}

func (x *UserSummariesProcessorParams) GetNetworkName() string {
	if x != nil {
		return x.NetworkName
	}
	return ""
}

// Request and response messages for the service methods
type GetSummaryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Network string `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`
}

func (x *GetSummaryRequest) Reset() {
	*x = GetSummaryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_srv_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSummaryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSummaryRequest) ProtoMessage() {}

func (x *GetSummaryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_srv_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSummaryRequest.ProtoReflect.Descriptor instead.
func (*GetSummaryRequest) Descriptor() ([]byte, []int) {
	return file_pkg_srv_proto_xatu_public_contributors_xatu_public_contributors_proto_rawDescGZIP(), []int{15}
}

func (x *GetSummaryRequest) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

type GetSummaryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *SummaryData `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetSummaryResponse) Reset() {
	*x = GetSummaryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_srv_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSummaryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSummaryResponse) ProtoMessage() {}

func (x *GetSummaryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_srv_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSummaryResponse.ProtoReflect.Descriptor instead.
func (*GetSummaryResponse) Descriptor() ([]byte, []int) {
	return file_pkg_srv_proto_xatu_public_contributors_xatu_public_contributors_proto_rawDescGZIP(), []int{16}
}

func (x *GetSummaryResponse) GetData() *SummaryData {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetCountriesDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Network    string                 `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`
	WindowName string                 `protobuf:"bytes,2,opt,name=window_name,json=windowName,proto3" json:"window_name,omitempty"`
	StartTime  *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime    *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
}

func (x *GetCountriesDataRequest) Reset() {
	*x = GetCountriesDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_srv_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCountriesDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCountriesDataRequest) ProtoMessage() {}

func (x *GetCountriesDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_srv_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCountriesDataRequest.ProtoReflect.Descriptor instead.
func (*GetCountriesDataRequest) Descriptor() ([]byte, []int) {
	return file_pkg_srv_proto_xatu_public_contributors_xatu_public_contributors_proto_rawDescGZIP(), []int{17}
}

func (x *GetCountriesDataRequest) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *GetCountriesDataRequest) GetWindowName() string {
	if x != nil {
		return x.WindowName
	}
	return ""
}

func (x *GetCountriesDataRequest) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *GetCountriesDataRequest) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

type GetCountriesDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*CountriesTimePoint `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetCountriesDataResponse) Reset() {
	*x = GetCountriesDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_srv_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCountriesDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCountriesDataResponse) ProtoMessage() {}

func (x *GetCountriesDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_srv_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCountriesDataResponse.ProtoReflect.Descriptor instead.
func (*GetCountriesDataResponse) Descriptor() ([]byte, []int) {
	return file_pkg_srv_proto_xatu_public_contributors_xatu_public_contributors_proto_rawDescGZIP(), []int{18}
}

func (x *GetCountriesDataResponse) GetData() []*CountriesTimePoint {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetUsersDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Network    string                 `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`
	WindowName string                 `protobuf:"bytes,2,opt,name=window_name,json=windowName,proto3" json:"window_name,omitempty"`
	StartTime  *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime    *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
}

func (x *GetUsersDataRequest) Reset() {
	*x = GetUsersDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_srv_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUsersDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUsersDataRequest) ProtoMessage() {}

func (x *GetUsersDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_srv_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUsersDataRequest.ProtoReflect.Descriptor instead.
func (*GetUsersDataRequest) Descriptor() ([]byte, []int) {
	return file_pkg_srv_proto_xatu_public_contributors_xatu_public_contributors_proto_rawDescGZIP(), []int{19}
}

func (x *GetUsersDataRequest) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *GetUsersDataRequest) GetWindowName() string {
	if x != nil {
		return x.WindowName
	}
	return ""
}

func (x *GetUsersDataRequest) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *GetUsersDataRequest) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

type GetUsersDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*UsersTimePoint `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetUsersDataResponse) Reset() {
	*x = GetUsersDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_srv_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUsersDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUsersDataResponse) ProtoMessage() {}

func (x *GetUsersDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_srv_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUsersDataResponse.ProtoReflect.Descriptor instead.
func (*GetUsersDataResponse) Descriptor() ([]byte, []int) {
	return file_pkg_srv_proto_xatu_public_contributors_xatu_public_contributors_proto_rawDescGZIP(), []int{20}
}

func (x *GetUsersDataResponse) GetData() []*UsersTimePoint {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetUserSummaryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User string `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *GetUserSummaryRequest) Reset() {
	*x = GetUserSummaryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_srv_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserSummaryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserSummaryRequest) ProtoMessage() {}

func (x *GetUserSummaryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_srv_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserSummaryRequest.ProtoReflect.Descriptor instead.
func (*GetUserSummaryRequest) Descriptor() ([]byte, []int) {
	return file_pkg_srv_proto_xatu_public_contributors_xatu_public_contributors_proto_rawDescGZIP(), []int{21}
}

func (x *GetUserSummaryRequest) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

type GetUserSummaryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *UserSummary `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetUserSummaryResponse) Reset() {
	*x = GetUserSummaryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_srv_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserSummaryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserSummaryResponse) ProtoMessage() {}

func (x *GetUserSummaryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_srv_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserSummaryResponse.ProtoReflect.Descriptor instead.
func (*GetUserSummaryResponse) Descriptor() ([]byte, []int) {
	return file_pkg_srv_proto_xatu_public_contributors_xatu_public_contributors_proto_rawDescGZIP(), []int{22}
}

func (x *GetUserSummaryResponse) GetData() *UserSummary {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_pkg_srv_proto_xatu_public_contributors_xatu_public_contributors_proto protoreflect.FileDescriptor

var file_pkg_srv_proto_xatu_public_contributors_xatu_public_contributors_proto_rawDesc = []byte{
	0x0a, 0x45, 0x70, 0x6b, 0x67, 0x2f, 0x73, 0x72, 0x76, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x78, 0x61, 0x74, 0x75, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x73, 0x2f, 0x78, 0x61, 0x74, 0x75, 0x5f, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x18, 0x78, 0x61, 0x74, 0x75, 0x5f, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72,
	0x73, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x60, 0x0a, 0x0a, 0x54, 0x69, 0x6d, 0x65, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77,
	0x12, 0x12, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x66, 0x69, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x74, 0x65, 0x70, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x73, 0x74, 0x65, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x14,
	0x0a, 0x05, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72,
	0x61, 0x6e, 0x67, 0x65, 0x22, 0xea, 0x02, 0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x6f, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x12,
	0x41, 0x0a, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x65, 0x64, 0x12, 0x78, 0x0a, 0x16, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x65, 0x64, 0x5f, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x42, 0x2e, 0x78, 0x61, 0x74, 0x75, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x73, 0x2e, 0x50, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x4c, 0x61, 0x73,
	0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x14, 0x6c, 0x61, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x65, 0x64, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x73, 0x1a, 0x63, 0x0a, 0x19,
	0x4c, 0x61, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x57, 0x69, 0x6e,
	0x64, 0x6f, 0x77, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x30, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0x4f, 0x0a, 0x09, 0x4e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f,
	0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x12,
	0x21, 0x0a, 0x0c, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4e, 0x6f, 0x64,
	0x65, 0x73, 0x22, 0xf3, 0x06, 0x0a, 0x0c, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x53, 0x74,
	0x61, 0x74, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6e, 0x6f, 0x64,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4e,
	0x6f, 0x64, 0x65, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x10, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4e, 0x6f, 0x64,
	0x65, 0x73, 0x12, 0x53, 0x0a, 0x09, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x78, 0x61, 0x74, 0x75, 0x5f, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x73,
	0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x12, 0x56, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x69,
	0x6e, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x78, 0x61,
	0x74, 0x75, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x6f, 0x72, 0x73, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x53, 0x74,
	0x61, 0x74, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x12,
	0x4a, 0x0a, 0x06, 0x63, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x32, 0x2e, 0x78, 0x61, 0x74, 0x75, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x73, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x43, 0x69, 0x74, 0x69, 0x65, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x06, 0x63, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x81, 0x01, 0x0a, 0x19,
	0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x5f, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x44, 0x2e, 0x78, 0x61, 0x74, 0x75, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x73, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75,
	0x73, 0x49, 0x6d, 0x70, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x18, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73,
	0x49, 0x6d, 0x70, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a,
	0x61, 0x0a, 0x0e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x39, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x23, 0x2e, 0x78, 0x61, 0x74, 0x75, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x73, 0x2e, 0x4e, 0x6f,
	0x64, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x1a, 0x62, 0x0a, 0x0f, 0x43, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x65, 0x6e, 0x74, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x39, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x78, 0x61, 0x74, 0x75, 0x5f, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72,
	0x73, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x5e, 0x0a, 0x0b, 0x43, 0x69, 0x74, 0x69, 0x65, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x39, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x78, 0x61, 0x74, 0x75, 0x5f, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72,
	0x73, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x70, 0x0a, 0x1d, 0x43, 0x6f, 0x6e, 0x73, 0x65, 0x6e,
	0x73, 0x75, 0x73, 0x49, 0x6d, 0x70, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x39, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x78, 0x61, 0x74, 0x75, 0x5f,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x6f, 0x72, 0x73, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xe2, 0x01, 0x0a, 0x0b, 0x53, 0x75, 0x6d,
	0x6d, 0x61, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x4f, 0x0a, 0x08, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x78, 0x61, 0x74, 0x75,
	0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x6f, 0x72, 0x73, 0x2e, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61,
	0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x1a, 0x63, 0x0a, 0x0d, 0x4e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x3c, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x78, 0x61, 0x74,
	0x75, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x6f, 0x72, 0x73, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x53, 0x74, 0x61,
	0x74, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x3c, 0x0a,
	0x10, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x72, 0x0a, 0x12, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x48, 0x0a, 0x09, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x69,
	0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x78, 0x61, 0x74, 0x75, 0x5f,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x6f, 0x72, 0x73, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x52, 0x09, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x22,
	0x39, 0x0a, 0x0d, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x63, 0x0a, 0x0e, 0x55, 0x73,
	0x65, 0x72, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65,
	0x12, 0x3d, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x27, 0x2e, 0x78, 0x61, 0x74, 0x75, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x44,
	0x61, 0x74, 0x61, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x22,
	0xc4, 0x06, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12,
	0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75,
	0x73, 0x65, 0x72, 0x12, 0x4f, 0x0a, 0x08, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x78, 0x61, 0x74, 0x75, 0x5f, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x73,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x2e, 0x4e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x73, 0x12, 0x52, 0x0a, 0x09, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x69, 0x65,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x78, 0x61, 0x74, 0x75, 0x5f, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f,
	0x72, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x2e, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x12, 0x55, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74,
	0x69, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x78,
	0x61, 0x74, 0x75, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x79, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x12,
	0x49, 0x0a, 0x06, 0x63, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x31, 0x2e, 0x78, 0x61, 0x74, 0x75, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53,
	0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x2e, 0x43, 0x69, 0x74, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x06, 0x63, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x4c, 0x0a, 0x07, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x78, 0x61,
	0x74, 0x75, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x6f, 0x72, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x75, 0x6d, 0x6d, 0x61,
	0x72, 0x79, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x07, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x72, 0x73,
	0x74, 0x5f, 0x73, 0x65, 0x65, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x66, 0x69,
	0x72, 0x73, 0x74, 0x53, 0x65, 0x65, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f,
	0x73, 0x65, 0x65, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74,
	0x53, 0x65, 0x65, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6e, 0x6f,
	0x64, 0x65, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x4e, 0x6f, 0x64, 0x65, 0x73, 0x1a, 0x3b, 0x0a, 0x0d, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x1a, 0x3c, 0x0a, 0x0e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x1a, 0x3d, 0x0a, 0x0f, 0x43, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a,
	0x39, 0x0a, 0x0b, 0x43, 0x69, 0x74, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x3a, 0x0a, 0x0c, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x55, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x6f, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x3b, 0x0a,
	0x16, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f,
	0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x3d, 0x0a, 0x18, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x39, 0x0a, 0x14, 0x55, 0x73, 0x65,
	0x72, 0x73, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x4e, 0x61, 0x6d, 0x65, 0x22, 0x41, 0x0a, 0x1c, 0x55, 0x73, 0x65, 0x72, 0x53, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x69, 0x65, 0x73, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x2d, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x53, 0x75,
	0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x22, 0x4f, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x53, 0x75, 0x6d,
	0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x78, 0x61, 0x74,
	0x75, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x6f, 0x72, 0x73, 0x2e, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xc6, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x1f, 0x0a,
	0x0b, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x39,
	0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x65, 0x6e, 0x64,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x22, 0x5c, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x78, 0x61, 0x74,
	0x75, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x6f, 0x72, 0x73, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x54,
	0x69, 0x6d, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xc2,
	0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x12, 0x1f, 0x0a, 0x0b, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x08,
	0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x22, 0x54, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x78, 0x61, 0x74, 0x75,
	0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x6f, 0x72, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x2b, 0x0a, 0x15, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0x53, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x39, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25,
	0x2e, 0x78, 0x61, 0x74, 0x75, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x75,
	0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x32, 0xe7, 0x03, 0x0a, 0x1d,
	0x58, 0x61, 0x74, 0x75, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x6f, 0x72, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x67, 0x0a,
	0x0a, 0x47, 0x65, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x2b, 0x2e, 0x78, 0x61,
	0x74, 0x75, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x6f, 0x72, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x78, 0x61, 0x74, 0x75, 0x5f,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x6f, 0x72, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x79, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x44, 0x61, 0x74, 0x61, 0x12, 0x31, 0x2e, 0x78, 0x61, 0x74,
	0x75, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x6f, 0x72, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x69,
	0x65, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e,
	0x78, 0x61, 0x74, 0x75, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x72, 0x69, 0x65, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x6d, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x2d, 0x2e, 0x78, 0x61, 0x74, 0x75, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x73, 0x2e, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2e, 0x2e, 0x78, 0x61, 0x74, 0x75, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x73, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x75, 0x6d, 0x6d, 0x61,
	0x72, 0x79, 0x12, 0x2f, 0x2e, 0x78, 0x61, 0x74, 0x75, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x73, 0x2e, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x78, 0x61, 0x74, 0x75, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x73, 0x2e, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x3f, 0x5a, 0x3d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x65, 0x74, 0x68, 0x70, 0x61, 0x6e, 0x64, 0x61, 0x6f, 0x70, 0x73, 0x2f,
	0x6c, 0x61, 0x62, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x78, 0x61,
	0x74, 0x75, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x6f, 0x72, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pkg_srv_proto_xatu_public_contributors_xatu_public_contributors_proto_rawDescOnce sync.Once
	file_pkg_srv_proto_xatu_public_contributors_xatu_public_contributors_proto_rawDescData = file_pkg_srv_proto_xatu_public_contributors_xatu_public_contributors_proto_rawDesc
)

func file_pkg_srv_proto_xatu_public_contributors_xatu_public_contributors_proto_rawDescGZIP() []byte {
	file_pkg_srv_proto_xatu_public_contributors_xatu_public_contributors_proto_rawDescOnce.Do(func() {
		file_pkg_srv_proto_xatu_public_contributors_xatu_public_contributors_proto_rawDescData = protoimpl.X.CompressGZIP(file_pkg_srv_proto_xatu_public_contributors_xatu_public_contributors_proto_rawDescData)
	})
	return file_pkg_srv_proto_xatu_public_contributors_xatu_public_contributors_proto_rawDescData
}

var file_pkg_srv_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes = make([]protoimpl.MessageInfo, 34)
var file_pkg_srv_proto_xatu_public_contributors_xatu_public_contributors_proto_goTypes = []any{
	(*TimeWindow)(nil),                   // 0: xatu_public_contributors.TimeWindow
	(*ProcessorState)(nil),               // 1: xatu_public_contributors.ProcessorState
	(*NodeCount)(nil),                    // 2: xatu_public_contributors.NodeCount
	(*NetworkStats)(nil),                 // 3: xatu_public_contributors.NetworkStats
	(*SummaryData)(nil),                  // 4: xatu_public_contributors.SummaryData
	(*CountryDataPoint)(nil),             // 5: xatu_public_contributors.CountryDataPoint
	(*CountriesTimePoint)(nil),           // 6: xatu_public_contributors.CountriesTimePoint
	(*UserDataPoint)(nil),                // 7: xatu_public_contributors.UserDataPoint
	(*UsersTimePoint)(nil),               // 8: xatu_public_contributors.UsersTimePoint
	(*UserSummary)(nil),                  // 9: xatu_public_contributors.UserSummary
	(*ProcessorParams)(nil),              // 10: xatu_public_contributors.ProcessorParams
	(*SummaryProcessorParams)(nil),       // 11: xatu_public_contributors.SummaryProcessorParams
	(*CountriesProcessorParams)(nil),     // 12: xatu_public_contributors.CountriesProcessorParams
	(*UsersProcessorParams)(nil),         // 13: xatu_public_contributors.UsersProcessorParams
	(*UserSummariesProcessorParams)(nil), // 14: xatu_public_contributors.UserSummariesProcessorParams
	(*GetSummaryRequest)(nil),            // 15: xatu_public_contributors.GetSummaryRequest
	(*GetSummaryResponse)(nil),           // 16: xatu_public_contributors.GetSummaryResponse
	(*GetCountriesDataRequest)(nil),      // 17: xatu_public_contributors.GetCountriesDataRequest
	(*GetCountriesDataResponse)(nil),     // 18: xatu_public_contributors.GetCountriesDataResponse
	(*GetUsersDataRequest)(nil),          // 19: xatu_public_contributors.GetUsersDataRequest
	(*GetUsersDataResponse)(nil),         // 20: xatu_public_contributors.GetUsersDataResponse
	(*GetUserSummaryRequest)(nil),        // 21: xatu_public_contributors.GetUserSummaryRequest
	(*GetUserSummaryResponse)(nil),       // 22: xatu_public_contributors.GetUserSummaryResponse
	nil,                                  // 23: xatu_public_contributors.ProcessorState.LastProcessedWindowsEntry
	nil,                                  // 24: xatu_public_contributors.NetworkStats.CountriesEntry
	nil,                                  // 25: xatu_public_contributors.NetworkStats.ContinentsEntry
	nil,                                  // 26: xatu_public_contributors.NetworkStats.CitiesEntry
	nil,                                  // 27: xatu_public_contributors.NetworkStats.ConsensusImplementationsEntry
	nil,                                  // 28: xatu_public_contributors.SummaryData.NetworksEntry
	nil,                                  // 29: xatu_public_contributors.UserSummary.NetworksEntry
	nil,                                  // 30: xatu_public_contributors.UserSummary.CountriesEntry
	nil,                                  // 31: xatu_public_contributors.UserSummary.ContinentsEntry
	nil,                                  // 32: xatu_public_contributors.UserSummary.CitiesEntry
	nil,                                  // 33: xatu_public_contributors.UserSummary.ClientsEntry
	(*timestamppb.Timestamp)(nil),        // 34: google.protobuf.Timestamp
}
var file_pkg_srv_proto_xatu_public_contributors_xatu_public_contributors_proto_depIdxs = []int32{
	34, // 0: xatu_public_contributors.ProcessorState.last_processed:type_name -> google.protobuf.Timestamp
	23, // 1: xatu_public_contributors.ProcessorState.last_processed_windows:type_name -> xatu_public_contributors.ProcessorState.LastProcessedWindowsEntry
	24, // 2: xatu_public_contributors.NetworkStats.countries:type_name -> xatu_public_contributors.NetworkStats.CountriesEntry
	25, // 3: xatu_public_contributors.NetworkStats.continents:type_name -> xatu_public_contributors.NetworkStats.ContinentsEntry
	26, // 4: xatu_public_contributors.NetworkStats.cities:type_name -> xatu_public_contributors.NetworkStats.CitiesEntry
	27, // 5: xatu_public_contributors.NetworkStats.consensus_implementations:type_name -> xatu_public_contributors.NetworkStats.ConsensusImplementationsEntry
	28, // 6: xatu_public_contributors.SummaryData.networks:type_name -> xatu_public_contributors.SummaryData.NetworksEntry
	5,  // 7: xatu_public_contributors.CountriesTimePoint.countries:type_name -> xatu_public_contributors.CountryDataPoint
	7,  // 8: xatu_public_contributors.UsersTimePoint.users:type_name -> xatu_public_contributors.UserDataPoint
	29, // 9: xatu_public_contributors.UserSummary.networks:type_name -> xatu_public_contributors.UserSummary.NetworksEntry
	30, // 10: xatu_public_contributors.UserSummary.countries:type_name -> xatu_public_contributors.UserSummary.CountriesEntry
	31, // 11: xatu_public_contributors.UserSummary.continents:type_name -> xatu_public_contributors.UserSummary.ContinentsEntry
	32, // 12: xatu_public_contributors.UserSummary.cities:type_name -> xatu_public_contributors.UserSummary.CitiesEntry
	33, // 13: xatu_public_contributors.UserSummary.clients:type_name -> xatu_public_contributors.UserSummary.ClientsEntry
	4,  // 14: xatu_public_contributors.GetSummaryResponse.data:type_name -> xatu_public_contributors.SummaryData
	34, // 15: xatu_public_contributors.GetCountriesDataRequest.start_time:type_name -> google.protobuf.Timestamp
	34, // 16: xatu_public_contributors.GetCountriesDataRequest.end_time:type_name -> google.protobuf.Timestamp
	6,  // 17: xatu_public_contributors.GetCountriesDataResponse.data:type_name -> xatu_public_contributors.CountriesTimePoint
	34, // 18: xatu_public_contributors.GetUsersDataRequest.start_time:type_name -> google.protobuf.Timestamp
	34, // 19: xatu_public_contributors.GetUsersDataRequest.end_time:type_name -> google.protobuf.Timestamp
	8,  // 20: xatu_public_contributors.GetUsersDataResponse.data:type_name -> xatu_public_contributors.UsersTimePoint
	9,  // 21: xatu_public_contributors.GetUserSummaryResponse.data:type_name -> xatu_public_contributors.UserSummary
	34, // 22: xatu_public_contributors.ProcessorState.LastProcessedWindowsEntry.value:type_name -> google.protobuf.Timestamp
	2,  // 23: xatu_public_contributors.NetworkStats.CountriesEntry.value:type_name -> xatu_public_contributors.NodeCount
	2,  // 24: xatu_public_contributors.NetworkStats.ContinentsEntry.value:type_name -> xatu_public_contributors.NodeCount
	2,  // 25: xatu_public_contributors.NetworkStats.CitiesEntry.value:type_name -> xatu_public_contributors.NodeCount
	2,  // 26: xatu_public_contributors.NetworkStats.ConsensusImplementationsEntry.value:type_name -> xatu_public_contributors.NodeCount
	3,  // 27: xatu_public_contributors.SummaryData.NetworksEntry.value:type_name -> xatu_public_contributors.NetworkStats
	15, // 28: xatu_public_contributors.XatuPublicContributorsService.GetSummary:input_type -> xatu_public_contributors.GetSummaryRequest
	17, // 29: xatu_public_contributors.XatuPublicContributorsService.GetCountriesData:input_type -> xatu_public_contributors.GetCountriesDataRequest
	19, // 30: xatu_public_contributors.XatuPublicContributorsService.GetUsersData:input_type -> xatu_public_contributors.GetUsersDataRequest
	21, // 31: xatu_public_contributors.XatuPublicContributorsService.GetUserSummary:input_type -> xatu_public_contributors.GetUserSummaryRequest
	16, // 32: xatu_public_contributors.XatuPublicContributorsService.GetSummary:output_type -> xatu_public_contributors.GetSummaryResponse
	18, // 33: xatu_public_contributors.XatuPublicContributorsService.GetCountriesData:output_type -> xatu_public_contributors.GetCountriesDataResponse
	20, // 34: xatu_public_contributors.XatuPublicContributorsService.GetUsersData:output_type -> xatu_public_contributors.GetUsersDataResponse
	22, // 35: xatu_public_contributors.XatuPublicContributorsService.GetUserSummary:output_type -> xatu_public_contributors.GetUserSummaryResponse
	32, // [32:36] is the sub-list for method output_type
	28, // [28:32] is the sub-list for method input_type
	28, // [28:28] is the sub-list for extension type_name
	28, // [28:28] is the sub-list for extension extendee
	0,  // [0:28] is the sub-list for field type_name
}

func init() { file_pkg_srv_proto_xatu_public_contributors_xatu_public_contributors_proto_init() }
func file_pkg_srv_proto_xatu_public_contributors_xatu_public_contributors_proto_init() {
	if File_pkg_srv_proto_xatu_public_contributors_xatu_public_contributors_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pkg_srv_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*TimeWindow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_srv_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*ProcessorState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_srv_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*NodeCount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_srv_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*NetworkStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_srv_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*SummaryData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_srv_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*CountryDataPoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_srv_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*CountriesTimePoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_srv_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*UserDataPoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_srv_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*UsersTimePoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_srv_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*UserSummary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_srv_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*ProcessorParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_srv_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*SummaryProcessorParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_srv_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*CountriesProcessorParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_srv_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*UsersProcessorParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_srv_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*UserSummariesProcessorParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_srv_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*GetSummaryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_srv_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*GetSummaryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_srv_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*GetCountriesDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_srv_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*GetCountriesDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_srv_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*GetUsersDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_srv_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*GetUsersDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_srv_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*GetUserSummaryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_srv_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*GetUserSummaryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pkg_srv_proto_xatu_public_contributors_xatu_public_contributors_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   34,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pkg_srv_proto_xatu_public_contributors_xatu_public_contributors_proto_goTypes,
		DependencyIndexes: file_pkg_srv_proto_xatu_public_contributors_xatu_public_contributors_proto_depIdxs,
		MessageInfos:      file_pkg_srv_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes,
	}.Build()
	File_pkg_srv_proto_xatu_public_contributors_xatu_public_contributors_proto = out.File
	file_pkg_srv_proto_xatu_public_contributors_xatu_public_contributors_proto_rawDesc = nil
	file_pkg_srv_proto_xatu_public_contributors_xatu_public_contributors_proto_goTypes = nil
	file_pkg_srv_proto_xatu_public_contributors_xatu_public_contributors_proto_depIdxs = nil
}
