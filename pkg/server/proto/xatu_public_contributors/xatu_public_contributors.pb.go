// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: pkg/server/proto/xatu_public_contributors/xatu_public_contributors.proto

package xatu_public_contributors

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Configuration for the xatu_public_contributors service
type Config struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled        bool     `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	RedisKeyPrefix string   `protobuf:"bytes,2,opt,name=redis_key_prefix,json=redisKeyPrefix,proto3" json:"redis_key_prefix,omitempty"`
	Networks       []string `protobuf:"bytes,3,rep,name=networks,proto3" json:"networks,omitempty"`
	BackfillHours  int64    `protobuf:"varint,4,opt,name=backfill_hours,json=backfillHours,proto3" json:"backfill_hours,omitempty"`
}

func (x *Config) Reset() {
	*x = Config{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config) ProtoMessage() {}

func (x *Config) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config.ProtoReflect.Descriptor instead.
func (*Config) Descriptor() ([]byte, []int) {
	return file_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_rawDescGZIP(), []int{0}
}

func (x *Config) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *Config) GetRedisKeyPrefix() string {
	if x != nil {
		return x.RedisKeyPrefix
	}
	return ""
}

func (x *Config) GetNetworks() []string {
	if x != nil {
		return x.Networks
	}
	return nil
}

func (x *Config) GetBackfillHours() int64 {
	if x != nil {
		return x.BackfillHours
	}
	return 0
}

// State tracking for contributors service
type ContributorsState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Network    string                     `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`
	Processors map[string]*ProcessorState `protobuf:"bytes,2,rep,name=processors,proto3" json:"processors,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ContributorsState) Reset() {
	*x = ContributorsState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContributorsState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContributorsState) ProtoMessage() {}

func (x *ContributorsState) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContributorsState.ProtoReflect.Descriptor instead.
func (*ContributorsState) Descriptor() ([]byte, []int) {
	return file_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_rawDescGZIP(), []int{1}
}

func (x *ContributorsState) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *ContributorsState) GetProcessors() map[string]*ProcessorState {
	if x != nil {
		return x.Processors
	}
	return nil
}

// State for a specific processor
type ProcessorState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LastProcessed        *timestamppb.Timestamp            `protobuf:"bytes,1,opt,name=last_processed,json=lastProcessed,proto3" json:"last_processed,omitempty"`
	LastProcessedWindows map[string]*timestamppb.Timestamp `protobuf:"bytes,2,rep,name=last_processed_windows,json=lastProcessedWindows,proto3" json:"last_processed_windows,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ProcessorState) Reset() {
	*x = ProcessorState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessorState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessorState) ProtoMessage() {}

func (x *ProcessorState) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessorState.ProtoReflect.Descriptor instead.
func (*ProcessorState) Descriptor() ([]byte, []int) {
	return file_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_rawDescGZIP(), []int{2}
}

func (x *ProcessorState) GetLastProcessed() *timestamppb.Timestamp {
	if x != nil {
		return x.LastProcessed
	}
	return nil
}

func (x *ProcessorState) GetLastProcessedWindows() map[string]*timestamppb.Timestamp {
	if x != nil {
		return x.LastProcessedWindows
	}
	return nil
}

// Count of nodes for a specific country
type NodeCount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Country string `protobuf:"bytes,1,opt,name=country,proto3" json:"country,omitempty"`
	Count   int32  `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *NodeCount) Reset() {
	*x = NodeCount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeCount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeCount) ProtoMessage() {}

func (x *NodeCount) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeCount.ProtoReflect.Descriptor instead.
func (*NodeCount) Descriptor() ([]byte, []int) {
	return file_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_rawDescGZIP(), []int{3}
}

func (x *NodeCount) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *NodeCount) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

// Network statistics
type NetworkStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Network        string       `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`
	NodeCounts     []*NodeCount `protobuf:"bytes,2,rep,name=node_counts,json=nodeCounts,proto3" json:"node_counts,omitempty"`
	TotalNodes     int32        `protobuf:"varint,3,opt,name=total_nodes,json=totalNodes,proto3" json:"total_nodes,omitempty"`
	TotalCountries int32        `protobuf:"varint,4,opt,name=total_countries,json=totalCountries,proto3" json:"total_countries,omitempty"`
}

func (x *NetworkStats) Reset() {
	*x = NetworkStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetworkStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkStats) ProtoMessage() {}

func (x *NetworkStats) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkStats.ProtoReflect.Descriptor instead.
func (*NetworkStats) Descriptor() ([]byte, []int) {
	return file_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_rawDescGZIP(), []int{4}
}

func (x *NetworkStats) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *NetworkStats) GetNodeCounts() []*NodeCount {
	if x != nil {
		return x.NodeCounts
	}
	return nil
}

func (x *NetworkStats) GetTotalNodes() int32 {
	if x != nil {
		return x.TotalNodes
	}
	return 0
}

func (x *NetworkStats) GetTotalCountries() int32 {
	if x != nil {
		return x.TotalCountries
	}
	return 0
}

// Summary data for dashboard
type SummaryData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Networks       []*NetworkStats `protobuf:"bytes,1,rep,name=networks,proto3" json:"networks,omitempty"`
	TotalNodes     int32           `protobuf:"varint,2,opt,name=total_nodes,json=totalNodes,proto3" json:"total_nodes,omitempty"`
	TotalCountries int32           `protobuf:"varint,3,opt,name=total_countries,json=totalCountries,proto3" json:"total_countries,omitempty"`
}

func (x *SummaryData) Reset() {
	*x = SummaryData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SummaryData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SummaryData) ProtoMessage() {}

func (x *SummaryData) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SummaryData.ProtoReflect.Descriptor instead.
func (*SummaryData) Descriptor() ([]byte, []int) {
	return file_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_rawDescGZIP(), []int{5}
}

func (x *SummaryData) GetNetworks() []*NetworkStats {
	if x != nil {
		return x.Networks
	}
	return nil
}

func (x *SummaryData) GetTotalNodes() int32 {
	if x != nil {
		return x.TotalNodes
	}
	return 0
}

func (x *SummaryData) GetTotalCountries() int32 {
	if x != nil {
		return x.TotalCountries
	}
	return 0
}

// Data point for a country
type CountryDataPoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp      *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	NodeCounts     []*NodeCount           `protobuf:"bytes,2,rep,name=node_counts,json=nodeCounts,proto3" json:"node_counts,omitempty"`
	TotalNodes     int32                  `protobuf:"varint,3,opt,name=total_nodes,json=totalNodes,proto3" json:"total_nodes,omitempty"`
	TotalCountries int32                  `protobuf:"varint,4,opt,name=total_countries,json=totalCountries,proto3" json:"total_countries,omitempty"`
}

func (x *CountryDataPoint) Reset() {
	*x = CountryDataPoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountryDataPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountryDataPoint) ProtoMessage() {}

func (x *CountryDataPoint) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountryDataPoint.ProtoReflect.Descriptor instead.
func (*CountryDataPoint) Descriptor() ([]byte, []int) {
	return file_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_rawDescGZIP(), []int{6}
}

func (x *CountryDataPoint) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *CountryDataPoint) GetNodeCounts() []*NodeCount {
	if x != nil {
		return x.NodeCounts
	}
	return nil
}

func (x *CountryDataPoint) GetTotalNodes() int32 {
	if x != nil {
		return x.TotalNodes
	}
	return 0
}

func (x *CountryDataPoint) GetTotalCountries() int32 {
	if x != nil {
		return x.TotalCountries
	}
	return 0
}

// Data point for a user
type UserDataPoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	UserCount int32                  `protobuf:"varint,2,opt,name=user_count,json=userCount,proto3" json:"user_count,omitempty"`
}

func (x *UserDataPoint) Reset() {
	*x = UserDataPoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserDataPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserDataPoint) ProtoMessage() {}

func (x *UserDataPoint) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserDataPoint.ProtoReflect.Descriptor instead.
func (*UserDataPoint) Descriptor() ([]byte, []int) {
	return file_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_rawDescGZIP(), []int{7}
}

func (x *UserDataPoint) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *UserDataPoint) GetUserCount() int32 {
	if x != nil {
		return x.UserCount
	}
	return 0
}

// User summary data
type UserSummary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrentUserCount int32            `protobuf:"varint,1,opt,name=current_user_count,json=currentUserCount,proto3" json:"current_user_count,omitempty"`
	DataPoints       []*UserDataPoint `protobuf:"bytes,2,rep,name=data_points,json=dataPoints,proto3" json:"data_points,omitempty"`
}

func (x *UserSummary) Reset() {
	*x = UserSummary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserSummary) ProtoMessage() {}

func (x *UserSummary) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserSummary.ProtoReflect.Descriptor instead.
func (*UserSummary) Descriptor() ([]byte, []int) {
	return file_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_rawDescGZIP(), []int{8}
}

func (x *UserSummary) GetCurrentUserCount() int32 {
	if x != nil {
		return x.CurrentUserCount
	}
	return 0
}

func (x *UserSummary) GetDataPoints() []*UserDataPoint {
	if x != nil {
		return x.DataPoints
	}
	return nil
}

// Top networks by node count
type TopNetworks struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Networks []*NetworkStats `protobuf:"bytes,1,rep,name=networks,proto3" json:"networks,omitempty"`
}

func (x *TopNetworks) Reset() {
	*x = TopNetworks{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopNetworks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopNetworks) ProtoMessage() {}

func (x *TopNetworks) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopNetworks.ProtoReflect.Descriptor instead.
func (*TopNetworks) Descriptor() ([]byte, []int) {
	return file_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_rawDescGZIP(), []int{9}
}

func (x *TopNetworks) GetNetworks() []*NetworkStats {
	if x != nil {
		return x.Networks
	}
	return nil
}

// Request to get summary data
type GetSummaryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Network string `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`
}

func (x *GetSummaryRequest) Reset() {
	*x = GetSummaryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSummaryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSummaryRequest) ProtoMessage() {}

func (x *GetSummaryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSummaryRequest.ProtoReflect.Descriptor instead.
func (*GetSummaryRequest) Descriptor() ([]byte, []int) {
	return file_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_rawDescGZIP(), []int{10}
}

func (x *GetSummaryRequest) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

// Response containing summary data
type GetSummaryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Summary *SummaryData `protobuf:"bytes,1,opt,name=summary,proto3" json:"summary,omitempty"`
}

func (x *GetSummaryResponse) Reset() {
	*x = GetSummaryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSummaryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSummaryResponse) ProtoMessage() {}

func (x *GetSummaryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSummaryResponse.ProtoReflect.Descriptor instead.
func (*GetSummaryResponse) Descriptor() ([]byte, []int) {
	return file_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_rawDescGZIP(), []int{11}
}

func (x *GetSummaryResponse) GetSummary() *SummaryData {
	if x != nil {
		return x.Summary
	}
	return nil
}

// Request to get country data
type GetCountryDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Network string `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"` // Optional time range parameters could be added here
}

func (x *GetCountryDataRequest) Reset() {
	*x = GetCountryDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCountryDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCountryDataRequest) ProtoMessage() {}

func (x *GetCountryDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCountryDataRequest.ProtoReflect.Descriptor instead.
func (*GetCountryDataRequest) Descriptor() ([]byte, []int) {
	return file_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_rawDescGZIP(), []int{12}
}

func (x *GetCountryDataRequest) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

// Response containing country data
type GetCountryDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataPoints []*CountryDataPoint `protobuf:"bytes,1,rep,name=data_points,json=dataPoints,proto3" json:"data_points,omitempty"`
}

func (x *GetCountryDataResponse) Reset() {
	*x = GetCountryDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCountryDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCountryDataResponse) ProtoMessage() {}

func (x *GetCountryDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCountryDataResponse.ProtoReflect.Descriptor instead.
func (*GetCountryDataResponse) Descriptor() ([]byte, []int) {
	return file_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_rawDescGZIP(), []int{13}
}

func (x *GetCountryDataResponse) GetDataPoints() []*CountryDataPoint {
	if x != nil {
		return x.DataPoints
	}
	return nil
}

// Request to get user data
type GetUserDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Network string `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"` // Optional time range parameters could be added here
}

func (x *GetUserDataRequest) Reset() {
	*x = GetUserDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserDataRequest) ProtoMessage() {}

func (x *GetUserDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserDataRequest.ProtoReflect.Descriptor instead.
func (*GetUserDataRequest) Descriptor() ([]byte, []int) {
	return file_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_rawDescGZIP(), []int{14}
}

func (x *GetUserDataRequest) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

// Response containing user data
type GetUserDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserSummary *UserSummary `protobuf:"bytes,1,opt,name=user_summary,json=userSummary,proto3" json:"user_summary,omitempty"`
}

func (x *GetUserDataResponse) Reset() {
	*x = GetUserDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserDataResponse) ProtoMessage() {}

func (x *GetUserDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserDataResponse.ProtoReflect.Descriptor instead.
func (*GetUserDataResponse) Descriptor() ([]byte, []int) {
	return file_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_rawDescGZIP(), []int{15}
}

func (x *GetUserDataResponse) GetUserSummary() *UserSummary {
	if x != nil {
		return x.UserSummary
	}
	return nil
}

// Request to get top networks
type GetTopNetworksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit int32 `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"` // Number of top networks to return
}

func (x *GetTopNetworksRequest) Reset() {
	*x = GetTopNetworksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTopNetworksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTopNetworksRequest) ProtoMessage() {}

func (x *GetTopNetworksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTopNetworksRequest.ProtoReflect.Descriptor instead.
func (*GetTopNetworksRequest) Descriptor() ([]byte, []int) {
	return file_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_rawDescGZIP(), []int{16}
}

func (x *GetTopNetworksRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

// Response containing top networks
type GetTopNetworksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopNetworks *TopNetworks `protobuf:"bytes,1,opt,name=top_networks,json=topNetworks,proto3" json:"top_networks,omitempty"`
}

func (x *GetTopNetworksResponse) Reset() {
	*x = GetTopNetworksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTopNetworksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTopNetworksResponse) ProtoMessage() {}

func (x *GetTopNetworksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTopNetworksResponse.ProtoReflect.Descriptor instead.
func (*GetTopNetworksResponse) Descriptor() ([]byte, []int) {
	return file_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_rawDescGZIP(), []int{17}
}

func (x *GetTopNetworksResponse) GetTopNetworks() *TopNetworks {
	if x != nil {
		return x.TopNetworks
	}
	return nil
}

var File_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto protoreflect.FileDescriptor

var file_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_rawDesc = []byte{
	0x0a, 0x48, 0x70, 0x6b, 0x67, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x78, 0x61, 0x74, 0x75, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x73, 0x2f, 0x78, 0x61, 0x74, 0x75,
	0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x6f, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x18, 0x78, 0x61, 0x74, 0x75,
	0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x6f, 0x72, 0x73, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8f, 0x01, 0x0a, 0x06, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x72, 0x65,
	0x64, 0x69, 0x73, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x65, 0x64, 0x69, 0x73, 0x4b, 0x65, 0x79, 0x50, 0x72,
	0x65, 0x66, 0x69, 0x78, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73,
	0x12, 0x25, 0x0a, 0x0e, 0x62, 0x61, 0x63, 0x6b, 0x66, 0x69, 0x6c, 0x6c, 0x5f, 0x68, 0x6f, 0x75,
	0x72, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x62, 0x61, 0x63, 0x6b, 0x66, 0x69,
	0x6c, 0x6c, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x22, 0xf3, 0x01, 0x0a, 0x11, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x73, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x5b, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x6f, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x78, 0x61,
	0x74, 0x75, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x6f, 0x72, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x6f, 0x72, 0x73, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x6f, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x6f, 0x72, 0x73, 0x1a, 0x67, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f,
	0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x3e, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x78, 0x61, 0x74, 0x75, 0x5f,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x6f, 0x72, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xb2, 0x02,
	0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x41, 0x0a, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x65, 0x64, 0x12, 0x78, 0x0a, 0x16, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x65, 0x64, 0x5f, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x42, 0x2e, 0x78, 0x61, 0x74, 0x75, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x73, 0x2e, 0x50,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x4c, 0x61,
	0x73, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x57, 0x69, 0x6e, 0x64, 0x6f,
	0x77, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x14, 0x6c, 0x61, 0x73, 0x74, 0x50, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x73, 0x1a, 0x63, 0x0a,
	0x19, 0x4c, 0x61, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x57, 0x69,
	0x6e, 0x64, 0x6f, 0x77, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x30, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0x3b, 0x0a, 0x09, 0x4e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22,
	0xb8, 0x01, 0x0a, 0x0c, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x44, 0x0a, 0x0b, 0x6e, 0x6f,
	0x64, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x23, 0x2e, 0x78, 0x61, 0x74, 0x75, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x73, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x0a, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x73,
	0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4e, 0x6f, 0x64, 0x65,
	0x73, 0x12, 0x27, 0x0a, 0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x72, 0x69, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x22, 0x9b, 0x01, 0x0a, 0x0b, 0x53,
	0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x12, 0x42, 0x0a, 0x08, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x78,
	0x61, 0x74, 0x75, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x73, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x53,
	0x74, 0x61, 0x74, 0x73, 0x52, 0x08, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x12, 0x1f,
	0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x12,
	0x27, 0x0a, 0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x69,
	0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x22, 0xdc, 0x01, 0x0a, 0x10, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x38, 0x0a,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x44, 0x0a, 0x0b, 0x6e, 0x6f, 0x64, 0x65, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x78,
	0x61, 0x74, 0x75, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x73, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x0a, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x1f, 0x0a,
	0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x27,
	0x0a, 0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x69, 0x65,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x22, 0x68, 0x0a, 0x0d, 0x55, 0x73, 0x65, 0x72, 0x44,
	0x61, 0x74, 0x61, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x22, 0x85, 0x01, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72,
	0x79, 0x12, 0x2c, 0x0a, 0x12, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x48, 0x0a, 0x0b, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x78, 0x61, 0x74, 0x75, 0x5f, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x73, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x0a, 0x64,
	0x61, 0x74, 0x61, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x22, 0x51, 0x0a, 0x0b, 0x54, 0x6f, 0x70,
	0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x12, 0x42, 0x0a, 0x08, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x78, 0x61, 0x74,
	0x75, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x6f, 0x72, 0x73, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x53, 0x74, 0x61,
	0x74, 0x73, 0x52, 0x08, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x22, 0x2d, 0x0a, 0x11,
	0x47, 0x65, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x22, 0x55, 0x0a, 0x12, 0x47,
	0x65, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3f, 0x0a, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x25, 0x2e, 0x78, 0x61, 0x74, 0x75, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x73, 0x2e, 0x53, 0x75,
	0x6d, 0x6d, 0x61, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x52, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61,
	0x72, 0x79, 0x22, 0x31, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x22, 0x65, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x4b, 0x0a, 0x0b, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x78, 0x61, 0x74, 0x75, 0x5f, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x73, 0x2e,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x52, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x22, 0x2e, 0x0a, 0x12,
	0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x22, 0x5f, 0x0a, 0x13,
	0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x78, 0x61, 0x74, 0x75,
	0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x6f, 0x72, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79,
	0x52, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x22, 0x2d, 0x0a,
	0x15, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x62, 0x0a, 0x16,
	0x47, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x0c, 0x74, 0x6f, 0x70, 0x5f, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x78,
	0x61, 0x74, 0x75, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x73, 0x2e, 0x54, 0x6f, 0x70, 0x4e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x73, 0x52, 0x0b, 0x74, 0x6f, 0x70, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73,
	0x32, 0xe6, 0x03, 0x0a, 0x1d, 0x58, 0x61, 0x74, 0x75, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x69, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79,
	0x12, 0x2b, 0x2e, 0x78, 0x61, 0x74, 0x75, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x53,
	0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e,
	0x78, 0x61, 0x74, 0x75, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x75, 0x0a,
	0x0e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x2f, 0x2e, 0x78, 0x61, 0x74, 0x75, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x30, 0x2e, 0x78, 0x61, 0x74, 0x75, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x6c, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x2c, 0x2e, 0x78, 0x61, 0x74, 0x75, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x73, 0x2e, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2d, 0x2e, 0x78, 0x61, 0x74, 0x75, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x73, 0x2e, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x75, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x4e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x73, 0x12, 0x2f, 0x2e, 0x78, 0x61, 0x74, 0x75, 0x5f, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x73, 0x2e,
	0x47, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x78, 0x61, 0x74, 0x75, 0x5f, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x73,
	0x2e, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x3f, 0x5a, 0x3d, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x65, 0x74, 0x68, 0x70, 0x61, 0x6e, 0x64, 0x61,
	0x6f, 0x70, 0x73, 0x2f, 0x6c, 0x61, 0x62, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x78, 0x61, 0x74, 0x75, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_rawDescOnce sync.Once
	file_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_rawDescData = file_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_rawDesc
)

func file_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_rawDescGZIP() []byte {
	file_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_rawDescOnce.Do(func() {
		file_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_rawDescData = protoimpl.X.CompressGZIP(file_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_rawDescData)
	})
	return file_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_rawDescData
}

var file_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_goTypes = []any{
	(*Config)(nil),                 // 0: xatu_public_contributors.Config
	(*ContributorsState)(nil),      // 1: xatu_public_contributors.ContributorsState
	(*ProcessorState)(nil),         // 2: xatu_public_contributors.ProcessorState
	(*NodeCount)(nil),              // 3: xatu_public_contributors.NodeCount
	(*NetworkStats)(nil),           // 4: xatu_public_contributors.NetworkStats
	(*SummaryData)(nil),            // 5: xatu_public_contributors.SummaryData
	(*CountryDataPoint)(nil),       // 6: xatu_public_contributors.CountryDataPoint
	(*UserDataPoint)(nil),          // 7: xatu_public_contributors.UserDataPoint
	(*UserSummary)(nil),            // 8: xatu_public_contributors.UserSummary
	(*TopNetworks)(nil),            // 9: xatu_public_contributors.TopNetworks
	(*GetSummaryRequest)(nil),      // 10: xatu_public_contributors.GetSummaryRequest
	(*GetSummaryResponse)(nil),     // 11: xatu_public_contributors.GetSummaryResponse
	(*GetCountryDataRequest)(nil),  // 12: xatu_public_contributors.GetCountryDataRequest
	(*GetCountryDataResponse)(nil), // 13: xatu_public_contributors.GetCountryDataResponse
	(*GetUserDataRequest)(nil),     // 14: xatu_public_contributors.GetUserDataRequest
	(*GetUserDataResponse)(nil),    // 15: xatu_public_contributors.GetUserDataResponse
	(*GetTopNetworksRequest)(nil),  // 16: xatu_public_contributors.GetTopNetworksRequest
	(*GetTopNetworksResponse)(nil), // 17: xatu_public_contributors.GetTopNetworksResponse
	nil,                            // 18: xatu_public_contributors.ContributorsState.ProcessorsEntry
	nil,                            // 19: xatu_public_contributors.ProcessorState.LastProcessedWindowsEntry
	(*timestamppb.Timestamp)(nil),  // 20: google.protobuf.Timestamp
}
var file_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_depIdxs = []int32{
	18, // 0: xatu_public_contributors.ContributorsState.processors:type_name -> xatu_public_contributors.ContributorsState.ProcessorsEntry
	20, // 1: xatu_public_contributors.ProcessorState.last_processed:type_name -> google.protobuf.Timestamp
	19, // 2: xatu_public_contributors.ProcessorState.last_processed_windows:type_name -> xatu_public_contributors.ProcessorState.LastProcessedWindowsEntry
	3,  // 3: xatu_public_contributors.NetworkStats.node_counts:type_name -> xatu_public_contributors.NodeCount
	4,  // 4: xatu_public_contributors.SummaryData.networks:type_name -> xatu_public_contributors.NetworkStats
	20, // 5: xatu_public_contributors.CountryDataPoint.timestamp:type_name -> google.protobuf.Timestamp
	3,  // 6: xatu_public_contributors.CountryDataPoint.node_counts:type_name -> xatu_public_contributors.NodeCount
	20, // 7: xatu_public_contributors.UserDataPoint.timestamp:type_name -> google.protobuf.Timestamp
	7,  // 8: xatu_public_contributors.UserSummary.data_points:type_name -> xatu_public_contributors.UserDataPoint
	4,  // 9: xatu_public_contributors.TopNetworks.networks:type_name -> xatu_public_contributors.NetworkStats
	5,  // 10: xatu_public_contributors.GetSummaryResponse.summary:type_name -> xatu_public_contributors.SummaryData
	6,  // 11: xatu_public_contributors.GetCountryDataResponse.data_points:type_name -> xatu_public_contributors.CountryDataPoint
	8,  // 12: xatu_public_contributors.GetUserDataResponse.user_summary:type_name -> xatu_public_contributors.UserSummary
	9,  // 13: xatu_public_contributors.GetTopNetworksResponse.top_networks:type_name -> xatu_public_contributors.TopNetworks
	2,  // 14: xatu_public_contributors.ContributorsState.ProcessorsEntry.value:type_name -> xatu_public_contributors.ProcessorState
	20, // 15: xatu_public_contributors.ProcessorState.LastProcessedWindowsEntry.value:type_name -> google.protobuf.Timestamp
	10, // 16: xatu_public_contributors.XatuPublicContributorsService.GetSummary:input_type -> xatu_public_contributors.GetSummaryRequest
	12, // 17: xatu_public_contributors.XatuPublicContributorsService.GetCountryData:input_type -> xatu_public_contributors.GetCountryDataRequest
	14, // 18: xatu_public_contributors.XatuPublicContributorsService.GetUserData:input_type -> xatu_public_contributors.GetUserDataRequest
	16, // 19: xatu_public_contributors.XatuPublicContributorsService.GetTopNetworks:input_type -> xatu_public_contributors.GetTopNetworksRequest
	11, // 20: xatu_public_contributors.XatuPublicContributorsService.GetSummary:output_type -> xatu_public_contributors.GetSummaryResponse
	13, // 21: xatu_public_contributors.XatuPublicContributorsService.GetCountryData:output_type -> xatu_public_contributors.GetCountryDataResponse
	15, // 22: xatu_public_contributors.XatuPublicContributorsService.GetUserData:output_type -> xatu_public_contributors.GetUserDataResponse
	17, // 23: xatu_public_contributors.XatuPublicContributorsService.GetTopNetworks:output_type -> xatu_public_contributors.GetTopNetworksResponse
	20, // [20:24] is the sub-list for method output_type
	16, // [16:20] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_init() }
func file_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_init() {
	if File_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*Config); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*ContributorsState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*ProcessorState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*NodeCount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*NetworkStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*SummaryData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*CountryDataPoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*UserDataPoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*UserSummary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*TopNetworks); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*GetSummaryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*GetSummaryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*GetCountryDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*GetCountryDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*GetUserDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*GetUserDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*GetTopNetworksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*GetTopNetworksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_goTypes,
		DependencyIndexes: file_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_depIdxs,
		MessageInfos:      file_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes,
	}.Build()
	File_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto = out.File
	file_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_rawDesc = nil
	file_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_goTypes = nil
	file_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_depIdxs = nil
}
