// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: pkg/server/proto/beacon_chain_timings/beacon_chain_timings.proto

package beacon_chain_timings

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// TimeWindowConfig represents a time window for processing
type TimeWindowConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	File    string `protobuf:"bytes,2,opt,name=file,proto3" json:"file,omitempty"`
	RangeMs int64  `protobuf:"varint,3,opt,name=range_ms,json=rangeMs,proto3" json:"range_ms,omitempty"` // Duration in milliseconds
	StepMs  int64  `protobuf:"varint,4,opt,name=step_ms,json=stepMs,proto3" json:"step_ms,omitempty"`    // Duration in milliseconds
}

func (x *TimeWindowConfig) Reset() {
	*x = TimeWindowConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_server_proto_beacon_chain_timings_beacon_chain_timings_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimeWindowConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeWindowConfig) ProtoMessage() {}

func (x *TimeWindowConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_proto_beacon_chain_timings_beacon_chain_timings_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeWindowConfig.ProtoReflect.Descriptor instead.
func (*TimeWindowConfig) Descriptor() ([]byte, []int) {
	return file_pkg_server_proto_beacon_chain_timings_beacon_chain_timings_proto_rawDescGZIP(), []int{0}
}

func (x *TimeWindowConfig) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TimeWindowConfig) GetFile() string {
	if x != nil {
		return x.File
	}
	return ""
}

func (x *TimeWindowConfig) GetRangeMs() int64 {
	if x != nil {
		return x.RangeMs
	}
	return 0
}

func (x *TimeWindowConfig) GetStepMs() int64 {
	if x != nil {
		return x.StepMs
	}
	return 0
}

// ProcessorState tracks the processing state for a specific processor
type ProcessorState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Network       string                 `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`
	LastProcessed *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=last_processed,json=lastProcessed,proto3" json:"last_processed,omitempty"`
}

func (x *ProcessorState) Reset() {
	*x = ProcessorState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_server_proto_beacon_chain_timings_beacon_chain_timings_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessorState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessorState) ProtoMessage() {}

func (x *ProcessorState) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_proto_beacon_chain_timings_beacon_chain_timings_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessorState.ProtoReflect.Descriptor instead.
func (*ProcessorState) Descriptor() ([]byte, []int) {
	return file_pkg_server_proto_beacon_chain_timings_beacon_chain_timings_proto_rawDescGZIP(), []int{1}
}

func (x *ProcessorState) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *ProcessorState) GetLastProcessed() *timestamppb.Timestamp {
	if x != nil {
		return x.LastProcessed
	}
	return nil
}

// TimingData represents block timing statistics in time windows
type TimingData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Network    string                                   `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`
	Timestamp  *timestamppb.Timestamp                   `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Timestamps []int64                                  `protobuf:"varint,3,rep,packed,name=timestamps,proto3" json:"timestamps,omitempty"`
	Mins       []float64                                `protobuf:"fixed64,4,rep,packed,name=mins,proto3" json:"mins,omitempty"`
	Maxs       []float64                                `protobuf:"fixed64,5,rep,packed,name=maxs,proto3" json:"maxs,omitempty"`
	Avgs       []float64                                `protobuf:"fixed64,6,rep,packed,name=avgs,proto3" json:"avgs,omitempty"`
	P05S       []float64                                `protobuf:"fixed64,7,rep,packed,name=p05s,proto3" json:"p05s,omitempty"`
	P50S       []float64                                `protobuf:"fixed64,8,rep,packed,name=p50s,proto3" json:"p50s,omitempty"`
	P95S       []float64                                `protobuf:"fixed64,9,rep,packed,name=p95s,proto3" json:"p95s,omitempty"`
	Blocks     []int64                                  `protobuf:"varint,10,rep,packed,name=blocks,proto3" json:"blocks,omitempty"`
	Validators map[string]*TimingData_ValidatorCategory `protobuf:"bytes,11,rep,name=validators,proto3" json:"validators,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // validator -> timing categories
}

func (x *TimingData) Reset() {
	*x = TimingData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_server_proto_beacon_chain_timings_beacon_chain_timings_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimingData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimingData) ProtoMessage() {}

func (x *TimingData) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_proto_beacon_chain_timings_beacon_chain_timings_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimingData.ProtoReflect.Descriptor instead.
func (*TimingData) Descriptor() ([]byte, []int) {
	return file_pkg_server_proto_beacon_chain_timings_beacon_chain_timings_proto_rawDescGZIP(), []int{2}
}

func (x *TimingData) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *TimingData) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *TimingData) GetTimestamps() []int64 {
	if x != nil {
		return x.Timestamps
	}
	return nil
}

func (x *TimingData) GetMins() []float64 {
	if x != nil {
		return x.Mins
	}
	return nil
}

func (x *TimingData) GetMaxs() []float64 {
	if x != nil {
		return x.Maxs
	}
	return nil
}

func (x *TimingData) GetAvgs() []float64 {
	if x != nil {
		return x.Avgs
	}
	return nil
}

func (x *TimingData) GetP05S() []float64 {
	if x != nil {
		return x.P05S
	}
	return nil
}

func (x *TimingData) GetP50S() []float64 {
	if x != nil {
		return x.P50S
	}
	return nil
}

func (x *TimingData) GetP95S() []float64 {
	if x != nil {
		return x.P95S
	}
	return nil
}

func (x *TimingData) GetBlocks() []int64 {
	if x != nil {
		return x.Blocks
	}
	return nil
}

func (x *TimingData) GetValidators() map[string]*TimingData_ValidatorCategory {
	if x != nil {
		return x.Validators
	}
	return nil
}

// SizeCDFData represents size CDF (Cumulative Distribution Function) data
type SizeCDFData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Network        string                             `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`
	Timestamp      *timestamppb.Timestamp             `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	SizesKb        []int64                            `protobuf:"varint,3,rep,packed,name=sizes_kb,json=sizesKb,proto3" json:"sizes_kb,omitempty"`
	Mev            map[string]float64                 `protobuf:"bytes,4,rep,name=mev,proto3" json:"mev,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"fixed64,2,opt,name=value,proto3"`
	NonMev         map[string]float64                 `protobuf:"bytes,5,rep,name=non_mev,json=nonMev,proto3" json:"non_mev,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"fixed64,2,opt,name=value,proto3"`
	SoloMev        map[string]float64                 `protobuf:"bytes,6,rep,name=solo_mev,json=soloMev,proto3" json:"solo_mev,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"fixed64,2,opt,name=value,proto3"`
	SoloNonMev     map[string]float64                 `protobuf:"bytes,7,rep,name=solo_non_mev,json=soloNonMev,proto3" json:"solo_non_mev,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"fixed64,2,opt,name=value,proto3"`
	All            map[string]float64                 `protobuf:"bytes,8,rep,name=all,proto3" json:"all,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"fixed64,2,opt,name=value,proto3"`
	ArrivalTimesMs map[string]*SizeCDFData_DoubleList `protobuf:"bytes,9,rep,name=arrival_times_ms,json=arrivalTimesMs,proto3" json:"arrival_times_ms,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *SizeCDFData) Reset() {
	*x = SizeCDFData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_server_proto_beacon_chain_timings_beacon_chain_timings_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SizeCDFData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SizeCDFData) ProtoMessage() {}

func (x *SizeCDFData) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_proto_beacon_chain_timings_beacon_chain_timings_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SizeCDFData.ProtoReflect.Descriptor instead.
func (*SizeCDFData) Descriptor() ([]byte, []int) {
	return file_pkg_server_proto_beacon_chain_timings_beacon_chain_timings_proto_rawDescGZIP(), []int{3}
}

func (x *SizeCDFData) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *SizeCDFData) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *SizeCDFData) GetSizesKb() []int64 {
	if x != nil {
		return x.SizesKb
	}
	return nil
}

func (x *SizeCDFData) GetMev() map[string]float64 {
	if x != nil {
		return x.Mev
	}
	return nil
}

func (x *SizeCDFData) GetNonMev() map[string]float64 {
	if x != nil {
		return x.NonMev
	}
	return nil
}

func (x *SizeCDFData) GetSoloMev() map[string]float64 {
	if x != nil {
		return x.SoloMev
	}
	return nil
}

func (x *SizeCDFData) GetSoloNonMev() map[string]float64 {
	if x != nil {
		return x.SoloNonMev
	}
	return nil
}

func (x *SizeCDFData) GetAll() map[string]float64 {
	if x != nil {
		return x.All
	}
	return nil
}

func (x *SizeCDFData) GetArrivalTimesMs() map[string]*SizeCDFData_DoubleList {
	if x != nil {
		return x.ArrivalTimesMs
	}
	return nil
}

// Request and response messages for the service methods
type GetTimingDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Network    string                 `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`
	WindowName string                 `protobuf:"bytes,2,opt,name=window_name,json=windowName,proto3" json:"window_name,omitempty"`
	StartTime  *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime    *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
}

func (x *GetTimingDataRequest) Reset() {
	*x = GetTimingDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_server_proto_beacon_chain_timings_beacon_chain_timings_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTimingDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTimingDataRequest) ProtoMessage() {}

func (x *GetTimingDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_proto_beacon_chain_timings_beacon_chain_timings_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTimingDataRequest.ProtoReflect.Descriptor instead.
func (*GetTimingDataRequest) Descriptor() ([]byte, []int) {
	return file_pkg_server_proto_beacon_chain_timings_beacon_chain_timings_proto_rawDescGZIP(), []int{4}
}

func (x *GetTimingDataRequest) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *GetTimingDataRequest) GetWindowName() string {
	if x != nil {
		return x.WindowName
	}
	return ""
}

func (x *GetTimingDataRequest) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *GetTimingDataRequest) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

type GetTimingDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*TimingData `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetTimingDataResponse) Reset() {
	*x = GetTimingDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_server_proto_beacon_chain_timings_beacon_chain_timings_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTimingDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTimingDataResponse) ProtoMessage() {}

func (x *GetTimingDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_proto_beacon_chain_timings_beacon_chain_timings_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTimingDataResponse.ProtoReflect.Descriptor instead.
func (*GetTimingDataResponse) Descriptor() ([]byte, []int) {
	return file_pkg_server_proto_beacon_chain_timings_beacon_chain_timings_proto_rawDescGZIP(), []int{5}
}

func (x *GetTimingDataResponse) GetData() []*TimingData {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetSizeCDFDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Network   string                 `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`
	StartTime *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime   *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
}

func (x *GetSizeCDFDataRequest) Reset() {
	*x = GetSizeCDFDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_server_proto_beacon_chain_timings_beacon_chain_timings_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSizeCDFDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSizeCDFDataRequest) ProtoMessage() {}

func (x *GetSizeCDFDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_proto_beacon_chain_timings_beacon_chain_timings_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSizeCDFDataRequest.ProtoReflect.Descriptor instead.
func (*GetSizeCDFDataRequest) Descriptor() ([]byte, []int) {
	return file_pkg_server_proto_beacon_chain_timings_beacon_chain_timings_proto_rawDescGZIP(), []int{6}
}

func (x *GetSizeCDFDataRequest) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *GetSizeCDFDataRequest) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *GetSizeCDFDataRequest) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

type GetSizeCDFDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*SizeCDFData `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetSizeCDFDataResponse) Reset() {
	*x = GetSizeCDFDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_server_proto_beacon_chain_timings_beacon_chain_timings_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSizeCDFDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSizeCDFDataResponse) ProtoMessage() {}

func (x *GetSizeCDFDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_proto_beacon_chain_timings_beacon_chain_timings_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSizeCDFDataResponse.ProtoReflect.Descriptor instead.
func (*GetSizeCDFDataResponse) Descriptor() ([]byte, []int) {
	return file_pkg_server_proto_beacon_chain_timings_beacon_chain_timings_proto_rawDescGZIP(), []int{7}
}

func (x *GetSizeCDFDataResponse) GetData() []*SizeCDFData {
	if x != nil {
		return x.Data
	}
	return nil
}

// Validator timing data
type TimingData_ValidatorCategory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Categories map[string]int32 `protobuf:"bytes,1,rep,name=categories,proto3" json:"categories,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"` // timing category -> count
}

func (x *TimingData_ValidatorCategory) Reset() {
	*x = TimingData_ValidatorCategory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_server_proto_beacon_chain_timings_beacon_chain_timings_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimingData_ValidatorCategory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimingData_ValidatorCategory) ProtoMessage() {}

func (x *TimingData_ValidatorCategory) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_proto_beacon_chain_timings_beacon_chain_timings_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimingData_ValidatorCategory.ProtoReflect.Descriptor instead.
func (*TimingData_ValidatorCategory) Descriptor() ([]byte, []int) {
	return file_pkg_server_proto_beacon_chain_timings_beacon_chain_timings_proto_rawDescGZIP(), []int{2, 0}
}

func (x *TimingData_ValidatorCategory) GetCategories() map[string]int32 {
	if x != nil {
		return x.Categories
	}
	return nil
}

type SizeCDFData_DoubleList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Values []float64 `protobuf:"fixed64,1,rep,packed,name=values,proto3" json:"values,omitempty"`
}

func (x *SizeCDFData_DoubleList) Reset() {
	*x = SizeCDFData_DoubleList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_server_proto_beacon_chain_timings_beacon_chain_timings_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SizeCDFData_DoubleList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SizeCDFData_DoubleList) ProtoMessage() {}

func (x *SizeCDFData_DoubleList) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_proto_beacon_chain_timings_beacon_chain_timings_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SizeCDFData_DoubleList.ProtoReflect.Descriptor instead.
func (*SizeCDFData_DoubleList) Descriptor() ([]byte, []int) {
	return file_pkg_server_proto_beacon_chain_timings_beacon_chain_timings_proto_rawDescGZIP(), []int{3, 5}
}

func (x *SizeCDFData_DoubleList) GetValues() []float64 {
	if x != nil {
		return x.Values
	}
	return nil
}

var File_pkg_server_proto_beacon_chain_timings_beacon_chain_timings_proto protoreflect.FileDescriptor

var file_pkg_server_proto_beacon_chain_timings_beacon_chain_timings_proto_rawDesc = []byte{
	0x0a, 0x40, 0x70, 0x6b, 0x67, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x62, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x5f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f,
	0x74, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x73, 0x2f, 0x62, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x5f, 0x63,
	0x68, 0x61, 0x69, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x14, 0x62, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x5f, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x5f, 0x74, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x73, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x6e, 0x0a, 0x10, 0x54, 0x69, 0x6d,
	0x65, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x6d,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x4d, 0x73,
	0x12, 0x17, 0x0a, 0x07, 0x73, 0x74, 0x65, 0x70, 0x5f, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x73, 0x74, 0x65, 0x70, 0x4d, 0x73, 0x22, 0x6d, 0x0a, 0x0e, 0x50, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x41, 0x0a, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x70, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x50,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x22, 0x8e, 0x05, 0x0a, 0x0a, 0x54, 0x69, 0x6d,
	0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x03, 0x52,
	0x0a, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6d,
	0x69, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x01, 0x52, 0x04, 0x6d, 0x69, 0x6e, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x6d, 0x61, 0x78, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x01, 0x52, 0x04, 0x6d,
	0x61, 0x78, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x76, 0x67, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x01, 0x52, 0x04, 0x61, 0x76, 0x67, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x30, 0x35, 0x73, 0x18,
	0x07, 0x20, 0x03, 0x28, 0x01, 0x52, 0x04, 0x70, 0x30, 0x35, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x35, 0x30, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x01, 0x52, 0x04, 0x70, 0x35, 0x30, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x39, 0x35, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x01, 0x52, 0x04, 0x70,
	0x39, 0x35, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x18, 0x0a, 0x20,
	0x03, 0x28, 0x03, 0x52, 0x06, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x12, 0x50, 0x0a, 0x0a, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x30, 0x2e, 0x62, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x5f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x74,
	0x69, 0x6d, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x54, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74,
	0x61, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x0a, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x1a, 0xb6, 0x01,
	0x0a, 0x11, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x12, 0x62, 0x0a, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x42, 0x2e, 0x62, 0x65, 0x61, 0x63, 0x6f, 0x6e,
	0x5f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x54,
	0x69, 0x6d, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x6f, 0x72, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x2e, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x1a, 0x3d, 0x0a, 0x0f, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x71, 0x0a, 0x0f, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x6f, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x48, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x62, 0x65, 0x61,
	0x63, 0x6f, 0x6e, 0x5f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x69, 0x6e, 0x67,
	0x73, 0x2e, 0x54, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x56, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xfe, 0x07, 0x0a, 0x0b, 0x53, 0x69,
	0x7a, 0x65, 0x43, 0x44, 0x46, 0x44, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x19, 0x0a,
	0x08, 0x73, 0x69, 0x7a, 0x65, 0x73, 0x5f, 0x6b, 0x62, 0x18, 0x03, 0x20, 0x03, 0x28, 0x03, 0x52,
	0x07, 0x73, 0x69, 0x7a, 0x65, 0x73, 0x4b, 0x62, 0x12, 0x3c, 0x0a, 0x03, 0x6d, 0x65, 0x76, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x62, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x5f, 0x63,
	0x68, 0x61, 0x69, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x69, 0x7a,
	0x65, 0x43, 0x44, 0x46, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x4d, 0x65, 0x76, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x03, 0x6d, 0x65, 0x76, 0x12, 0x46, 0x0a, 0x07, 0x6e, 0x6f, 0x6e, 0x5f, 0x6d, 0x65,
	0x76, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x62, 0x65, 0x61, 0x63, 0x6f, 0x6e,
	0x5f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53,
	0x69, 0x7a, 0x65, 0x43, 0x44, 0x46, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x4e, 0x6f, 0x6e, 0x4d, 0x65,
	0x76, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x6e, 0x6f, 0x6e, 0x4d, 0x65, 0x76, 0x12, 0x49,
	0x0a, 0x08, 0x73, 0x6f, 0x6c, 0x6f, 0x5f, 0x6d, 0x65, 0x76, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2e, 0x2e, 0x62, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x5f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f,
	0x74, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x69, 0x7a, 0x65, 0x43, 0x44, 0x46, 0x44,
	0x61, 0x74, 0x61, 0x2e, 0x53, 0x6f, 0x6c, 0x6f, 0x4d, 0x65, 0x76, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x07, 0x73, 0x6f, 0x6c, 0x6f, 0x4d, 0x65, 0x76, 0x12, 0x53, 0x0a, 0x0c, 0x73, 0x6f, 0x6c,
	0x6f, 0x5f, 0x6e, 0x6f, 0x6e, 0x5f, 0x6d, 0x65, 0x76, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x31, 0x2e, 0x62, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x5f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x74,
	0x69, 0x6d, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x69, 0x7a, 0x65, 0x43, 0x44, 0x46, 0x44, 0x61,
	0x74, 0x61, 0x2e, 0x53, 0x6f, 0x6c, 0x6f, 0x4e, 0x6f, 0x6e, 0x4d, 0x65, 0x76, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x0a, 0x73, 0x6f, 0x6c, 0x6f, 0x4e, 0x6f, 0x6e, 0x4d, 0x65, 0x76, 0x12, 0x3c,
	0x0a, 0x03, 0x61, 0x6c, 0x6c, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x62, 0x65,
	0x61, 0x63, 0x6f, 0x6e, 0x5f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x69, 0x6e,
	0x67, 0x73, 0x2e, 0x53, 0x69, 0x7a, 0x65, 0x43, 0x44, 0x46, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x41,
	0x6c, 0x6c, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x03, 0x61, 0x6c, 0x6c, 0x12, 0x5f, 0x0a, 0x10,
	0x61, 0x72, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x5f, 0x6d, 0x73,
	0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x62, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x5f,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x69,
	0x7a, 0x65, 0x43, 0x44, 0x46, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x41, 0x72, 0x72, 0x69, 0x76, 0x61,
	0x6c, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x4d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0e, 0x61,
	0x72, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x4d, 0x73, 0x1a, 0x36, 0x0a,
	0x08, 0x4d, 0x65, 0x76, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x39, 0x0a, 0x0b, 0x4e, 0x6f, 0x6e, 0x4d, 0x65, 0x76, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x1a, 0x3a, 0x0a, 0x0c, 0x53, 0x6f, 0x6c, 0x6f, 0x4d, 0x65, 0x76, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x3d, 0x0a, 0x0f,
	0x53, 0x6f, 0x6c, 0x6f, 0x4e, 0x6f, 0x6e, 0x4d, 0x65, 0x76, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x36, 0x0a, 0x08, 0x41,
	0x6c, 0x6c, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x1a, 0x24, 0x0a, 0x0a, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x01, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x1a, 0x6f, 0x0a, 0x13, 0x41, 0x72, 0x72,
	0x69, 0x76, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x4d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x42, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2c, 0x2e, 0x62, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x5f, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x5f, 0x74, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x69, 0x7a, 0x65, 0x43, 0x44, 0x46,
	0x44, 0x61, 0x74, 0x61, 0x2e, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xc3, 0x01, 0x0a, 0x14, 0x47,
	0x65, 0x74, 0x54, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x1f, 0x0a,
	0x0b, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x39,
	0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x65, 0x6e, 0x64,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x22, 0x4d, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x62, 0x65, 0x61, 0x63, 0x6f, 0x6e,
	0x5f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x54,
	0x69, 0x6d, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0xa3, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x43, 0x44, 0x46, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x35,
	0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x65, 0x6e,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x4f, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x53, 0x69, 0x7a, 0x65,
	0x43, 0x44, 0x46, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x35, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e,
	0x62, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x5f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x74, 0x69, 0x6d,
	0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x69, 0x7a, 0x65, 0x43, 0x44, 0x46, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x32, 0xf2, 0x01, 0x0a, 0x19, 0x42, 0x65, 0x61, 0x63, 0x6f,
	0x6e, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x73, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x68, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x69, 0x6e,
	0x67, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2a, 0x2e, 0x62, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x5f, 0x63,
	0x68, 0x61, 0x69, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x47, 0x65, 0x74,
	0x54, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2b, 0x2e, 0x62, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x5f, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x5f, 0x74, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x69,
	0x6e, 0x67, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6b,
	0x0a, 0x0e, 0x47, 0x65, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x43, 0x44, 0x46, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x2b, 0x2e, 0x62, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x5f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f,
	0x74, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x43,
	0x44, 0x46, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e,
	0x62, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x5f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x74, 0x69, 0x6d,
	0x69, 0x6e, 0x67, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x43, 0x44, 0x46, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x3b, 0x5a, 0x39, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x65, 0x74, 0x68, 0x70, 0x61, 0x6e,
	0x64, 0x61, 0x6f, 0x70, 0x73, 0x2f, 0x6c, 0x61, 0x62, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x62, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x5f, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x5f, 0x74, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pkg_server_proto_beacon_chain_timings_beacon_chain_timings_proto_rawDescOnce sync.Once
	file_pkg_server_proto_beacon_chain_timings_beacon_chain_timings_proto_rawDescData = file_pkg_server_proto_beacon_chain_timings_beacon_chain_timings_proto_rawDesc
)

func file_pkg_server_proto_beacon_chain_timings_beacon_chain_timings_proto_rawDescGZIP() []byte {
	file_pkg_server_proto_beacon_chain_timings_beacon_chain_timings_proto_rawDescOnce.Do(func() {
		file_pkg_server_proto_beacon_chain_timings_beacon_chain_timings_proto_rawDescData = protoimpl.X.CompressGZIP(file_pkg_server_proto_beacon_chain_timings_beacon_chain_timings_proto_rawDescData)
	})
	return file_pkg_server_proto_beacon_chain_timings_beacon_chain_timings_proto_rawDescData
}

var file_pkg_server_proto_beacon_chain_timings_beacon_chain_timings_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_pkg_server_proto_beacon_chain_timings_beacon_chain_timings_proto_goTypes = []any{
	(*TimeWindowConfig)(nil),             // 0: beacon_chain_timings.TimeWindowConfig
	(*ProcessorState)(nil),               // 1: beacon_chain_timings.ProcessorState
	(*TimingData)(nil),                   // 2: beacon_chain_timings.TimingData
	(*SizeCDFData)(nil),                  // 3: beacon_chain_timings.SizeCDFData
	(*GetTimingDataRequest)(nil),         // 4: beacon_chain_timings.GetTimingDataRequest
	(*GetTimingDataResponse)(nil),        // 5: beacon_chain_timings.GetTimingDataResponse
	(*GetSizeCDFDataRequest)(nil),        // 6: beacon_chain_timings.GetSizeCDFDataRequest
	(*GetSizeCDFDataResponse)(nil),       // 7: beacon_chain_timings.GetSizeCDFDataResponse
	(*TimingData_ValidatorCategory)(nil), // 8: beacon_chain_timings.TimingData.ValidatorCategory
	nil,                                  // 9: beacon_chain_timings.TimingData.ValidatorsEntry
	nil,                                  // 10: beacon_chain_timings.TimingData.ValidatorCategory.CategoriesEntry
	nil,                                  // 11: beacon_chain_timings.SizeCDFData.MevEntry
	nil,                                  // 12: beacon_chain_timings.SizeCDFData.NonMevEntry
	nil,                                  // 13: beacon_chain_timings.SizeCDFData.SoloMevEntry
	nil,                                  // 14: beacon_chain_timings.SizeCDFData.SoloNonMevEntry
	nil,                                  // 15: beacon_chain_timings.SizeCDFData.AllEntry
	(*SizeCDFData_DoubleList)(nil),       // 16: beacon_chain_timings.SizeCDFData.DoubleList
	nil,                                  // 17: beacon_chain_timings.SizeCDFData.ArrivalTimesMsEntry
	(*timestamppb.Timestamp)(nil),        // 18: google.protobuf.Timestamp
}
var file_pkg_server_proto_beacon_chain_timings_beacon_chain_timings_proto_depIdxs = []int32{
	18, // 0: beacon_chain_timings.ProcessorState.last_processed:type_name -> google.protobuf.Timestamp
	18, // 1: beacon_chain_timings.TimingData.timestamp:type_name -> google.protobuf.Timestamp
	9,  // 2: beacon_chain_timings.TimingData.validators:type_name -> beacon_chain_timings.TimingData.ValidatorsEntry
	18, // 3: beacon_chain_timings.SizeCDFData.timestamp:type_name -> google.protobuf.Timestamp
	11, // 4: beacon_chain_timings.SizeCDFData.mev:type_name -> beacon_chain_timings.SizeCDFData.MevEntry
	12, // 5: beacon_chain_timings.SizeCDFData.non_mev:type_name -> beacon_chain_timings.SizeCDFData.NonMevEntry
	13, // 6: beacon_chain_timings.SizeCDFData.solo_mev:type_name -> beacon_chain_timings.SizeCDFData.SoloMevEntry
	14, // 7: beacon_chain_timings.SizeCDFData.solo_non_mev:type_name -> beacon_chain_timings.SizeCDFData.SoloNonMevEntry
	15, // 8: beacon_chain_timings.SizeCDFData.all:type_name -> beacon_chain_timings.SizeCDFData.AllEntry
	17, // 9: beacon_chain_timings.SizeCDFData.arrival_times_ms:type_name -> beacon_chain_timings.SizeCDFData.ArrivalTimesMsEntry
	18, // 10: beacon_chain_timings.GetTimingDataRequest.start_time:type_name -> google.protobuf.Timestamp
	18, // 11: beacon_chain_timings.GetTimingDataRequest.end_time:type_name -> google.protobuf.Timestamp
	2,  // 12: beacon_chain_timings.GetTimingDataResponse.data:type_name -> beacon_chain_timings.TimingData
	18, // 13: beacon_chain_timings.GetSizeCDFDataRequest.start_time:type_name -> google.protobuf.Timestamp
	18, // 14: beacon_chain_timings.GetSizeCDFDataRequest.end_time:type_name -> google.protobuf.Timestamp
	3,  // 15: beacon_chain_timings.GetSizeCDFDataResponse.data:type_name -> beacon_chain_timings.SizeCDFData
	10, // 16: beacon_chain_timings.TimingData.ValidatorCategory.categories:type_name -> beacon_chain_timings.TimingData.ValidatorCategory.CategoriesEntry
	8,  // 17: beacon_chain_timings.TimingData.ValidatorsEntry.value:type_name -> beacon_chain_timings.TimingData.ValidatorCategory
	16, // 18: beacon_chain_timings.SizeCDFData.ArrivalTimesMsEntry.value:type_name -> beacon_chain_timings.SizeCDFData.DoubleList
	4,  // 19: beacon_chain_timings.BeaconChainTimingsService.GetTimingData:input_type -> beacon_chain_timings.GetTimingDataRequest
	6,  // 20: beacon_chain_timings.BeaconChainTimingsService.GetSizeCDFData:input_type -> beacon_chain_timings.GetSizeCDFDataRequest
	5,  // 21: beacon_chain_timings.BeaconChainTimingsService.GetTimingData:output_type -> beacon_chain_timings.GetTimingDataResponse
	7,  // 22: beacon_chain_timings.BeaconChainTimingsService.GetSizeCDFData:output_type -> beacon_chain_timings.GetSizeCDFDataResponse
	21, // [21:23] is the sub-list for method output_type
	19, // [19:21] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_pkg_server_proto_beacon_chain_timings_beacon_chain_timings_proto_init() }
func file_pkg_server_proto_beacon_chain_timings_beacon_chain_timings_proto_init() {
	if File_pkg_server_proto_beacon_chain_timings_beacon_chain_timings_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pkg_server_proto_beacon_chain_timings_beacon_chain_timings_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*TimeWindowConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_server_proto_beacon_chain_timings_beacon_chain_timings_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*ProcessorState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_server_proto_beacon_chain_timings_beacon_chain_timings_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*TimingData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_server_proto_beacon_chain_timings_beacon_chain_timings_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*SizeCDFData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_server_proto_beacon_chain_timings_beacon_chain_timings_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*GetTimingDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_server_proto_beacon_chain_timings_beacon_chain_timings_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*GetTimingDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_server_proto_beacon_chain_timings_beacon_chain_timings_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*GetSizeCDFDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_server_proto_beacon_chain_timings_beacon_chain_timings_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*GetSizeCDFDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_server_proto_beacon_chain_timings_beacon_chain_timings_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*TimingData_ValidatorCategory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_server_proto_beacon_chain_timings_beacon_chain_timings_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*SizeCDFData_DoubleList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pkg_server_proto_beacon_chain_timings_beacon_chain_timings_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pkg_server_proto_beacon_chain_timings_beacon_chain_timings_proto_goTypes,
		DependencyIndexes: file_pkg_server_proto_beacon_chain_timings_beacon_chain_timings_proto_depIdxs,
		MessageInfos:      file_pkg_server_proto_beacon_chain_timings_beacon_chain_timings_proto_msgTypes,
	}.Build()
	File_pkg_server_proto_beacon_chain_timings_beacon_chain_timings_proto = out.File
	file_pkg_server_proto_beacon_chain_timings_beacon_chain_timings_proto_rawDesc = nil
	file_pkg_server_proto_beacon_chain_timings_beacon_chain_timings_proto_goTypes = nil
	file_pkg_server_proto_beacon_chain_timings_beacon_chain_timings_proto_depIdxs = nil
}
