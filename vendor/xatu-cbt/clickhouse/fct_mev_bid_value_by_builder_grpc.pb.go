// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.4.0
// - protoc             (unknown)
// source: vendor/xatu-cbt/clickhouse/fct_mev_bid_value_by_builder.proto

package clickhouse

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.62.0 or later.
const _ = grpc.SupportPackageIsVersion8

const (
	FctMevBidValueByBuilderService_List_FullMethodName = "/cbt.FctMevBidValueByBuilderService/List"
	FctMevBidValueByBuilderService_Get_FullMethodName  = "/cbt.FctMevBidValueByBuilderService/Get"
)

// FctMevBidValueByBuilderServiceClient is the client API for FctMevBidValueByBuilderService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
//
// FctMevBidValueByBuilderService provides RPC methods for querying fct_mev_bid_value_by_builder data
type FctMevBidValueByBuilderServiceClient interface {
	// List returns paginated fct_mev_bid_value_by_builder records
	List(ctx context.Context, in *ListFctMevBidValueByBuilderRequest, opts ...grpc.CallOption) (*ListFctMevBidValueByBuilderResponse, error)
	// Get returns a single fct_mev_bid_value_by_builder record by primary key
	Get(ctx context.Context, in *GetFctMevBidValueByBuilderRequest, opts ...grpc.CallOption) (*GetFctMevBidValueByBuilderResponse, error)
}

type fctMevBidValueByBuilderServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewFctMevBidValueByBuilderServiceClient(cc grpc.ClientConnInterface) FctMevBidValueByBuilderServiceClient {
	return &fctMevBidValueByBuilderServiceClient{cc}
}

func (c *fctMevBidValueByBuilderServiceClient) List(ctx context.Context, in *ListFctMevBidValueByBuilderRequest, opts ...grpc.CallOption) (*ListFctMevBidValueByBuilderResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ListFctMevBidValueByBuilderResponse)
	err := c.cc.Invoke(ctx, FctMevBidValueByBuilderService_List_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fctMevBidValueByBuilderServiceClient) Get(ctx context.Context, in *GetFctMevBidValueByBuilderRequest, opts ...grpc.CallOption) (*GetFctMevBidValueByBuilderResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetFctMevBidValueByBuilderResponse)
	err := c.cc.Invoke(ctx, FctMevBidValueByBuilderService_Get_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FctMevBidValueByBuilderServiceServer is the server API for FctMevBidValueByBuilderService service.
// All implementations must embed UnimplementedFctMevBidValueByBuilderServiceServer
// for forward compatibility
//
// FctMevBidValueByBuilderService provides RPC methods for querying fct_mev_bid_value_by_builder data
type FctMevBidValueByBuilderServiceServer interface {
	// List returns paginated fct_mev_bid_value_by_builder records
	List(context.Context, *ListFctMevBidValueByBuilderRequest) (*ListFctMevBidValueByBuilderResponse, error)
	// Get returns a single fct_mev_bid_value_by_builder record by primary key
	Get(context.Context, *GetFctMevBidValueByBuilderRequest) (*GetFctMevBidValueByBuilderResponse, error)
	mustEmbedUnimplementedFctMevBidValueByBuilderServiceServer()
}

// UnimplementedFctMevBidValueByBuilderServiceServer must be embedded to have forward compatible implementations.
type UnimplementedFctMevBidValueByBuilderServiceServer struct {
}

func (UnimplementedFctMevBidValueByBuilderServiceServer) List(context.Context, *ListFctMevBidValueByBuilderRequest) (*ListFctMevBidValueByBuilderResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method List not implemented")
}
func (UnimplementedFctMevBidValueByBuilderServiceServer) Get(context.Context, *GetFctMevBidValueByBuilderRequest) (*GetFctMevBidValueByBuilderResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (UnimplementedFctMevBidValueByBuilderServiceServer) mustEmbedUnimplementedFctMevBidValueByBuilderServiceServer() {
}

// UnsafeFctMevBidValueByBuilderServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to FctMevBidValueByBuilderServiceServer will
// result in compilation errors.
type UnsafeFctMevBidValueByBuilderServiceServer interface {
	mustEmbedUnimplementedFctMevBidValueByBuilderServiceServer()
}

func RegisterFctMevBidValueByBuilderServiceServer(s grpc.ServiceRegistrar, srv FctMevBidValueByBuilderServiceServer) {
	s.RegisterService(&FctMevBidValueByBuilderService_ServiceDesc, srv)
}

func _FctMevBidValueByBuilderService_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListFctMevBidValueByBuilderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FctMevBidValueByBuilderServiceServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: FctMevBidValueByBuilderService_List_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FctMevBidValueByBuilderServiceServer).List(ctx, req.(*ListFctMevBidValueByBuilderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FctMevBidValueByBuilderService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetFctMevBidValueByBuilderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FctMevBidValueByBuilderServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: FctMevBidValueByBuilderService_Get_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FctMevBidValueByBuilderServiceServer).Get(ctx, req.(*GetFctMevBidValueByBuilderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// FctMevBidValueByBuilderService_ServiceDesc is the grpc.ServiceDesc for FctMevBidValueByBuilderService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var FctMevBidValueByBuilderService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "cbt.FctMevBidValueByBuilderService",
	HandlerType: (*FctMevBidValueByBuilderServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "List",
			Handler:    _FctMevBidValueByBuilderService_List_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _FctMevBidValueByBuilderService_Get_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "vendor/xatu-cbt/clickhouse/fct_mev_bid_value_by_builder.proto",
}
