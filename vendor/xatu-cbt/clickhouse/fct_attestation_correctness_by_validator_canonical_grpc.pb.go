// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.4.0
// - protoc             (unknown)
// source: vendor/xatu-cbt/clickhouse/fct_attestation_correctness_by_validator_canonical.proto

package clickhouse

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.62.0 or later.
const _ = grpc.SupportPackageIsVersion8

const (
	FctAttestationCorrectnessByValidatorCanonicalService_List_FullMethodName = "/cbt.FctAttestationCorrectnessByValidatorCanonicalService/List"
	FctAttestationCorrectnessByValidatorCanonicalService_Get_FullMethodName  = "/cbt.FctAttestationCorrectnessByValidatorCanonicalService/Get"
)

// FctAttestationCorrectnessByValidatorCanonicalServiceClient is the client API for FctAttestationCorrectnessByValidatorCanonicalService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
//
// FctAttestationCorrectnessByValidatorCanonicalService provides RPC methods for querying fct_attestation_correctness_by_validator_canonical data
type FctAttestationCorrectnessByValidatorCanonicalServiceClient interface {
	// List returns paginated fct_attestation_correctness_by_validator_canonical records
	List(ctx context.Context, in *ListFctAttestationCorrectnessByValidatorCanonicalRequest, opts ...grpc.CallOption) (*ListFctAttestationCorrectnessByValidatorCanonicalResponse, error)
	// Get returns a single fct_attestation_correctness_by_validator_canonical record by primary key
	Get(ctx context.Context, in *GetFctAttestationCorrectnessByValidatorCanonicalRequest, opts ...grpc.CallOption) (*GetFctAttestationCorrectnessByValidatorCanonicalResponse, error)
}

type fctAttestationCorrectnessByValidatorCanonicalServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewFctAttestationCorrectnessByValidatorCanonicalServiceClient(cc grpc.ClientConnInterface) FctAttestationCorrectnessByValidatorCanonicalServiceClient {
	return &fctAttestationCorrectnessByValidatorCanonicalServiceClient{cc}
}

func (c *fctAttestationCorrectnessByValidatorCanonicalServiceClient) List(ctx context.Context, in *ListFctAttestationCorrectnessByValidatorCanonicalRequest, opts ...grpc.CallOption) (*ListFctAttestationCorrectnessByValidatorCanonicalResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ListFctAttestationCorrectnessByValidatorCanonicalResponse)
	err := c.cc.Invoke(ctx, FctAttestationCorrectnessByValidatorCanonicalService_List_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fctAttestationCorrectnessByValidatorCanonicalServiceClient) Get(ctx context.Context, in *GetFctAttestationCorrectnessByValidatorCanonicalRequest, opts ...grpc.CallOption) (*GetFctAttestationCorrectnessByValidatorCanonicalResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetFctAttestationCorrectnessByValidatorCanonicalResponse)
	err := c.cc.Invoke(ctx, FctAttestationCorrectnessByValidatorCanonicalService_Get_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FctAttestationCorrectnessByValidatorCanonicalServiceServer is the server API for FctAttestationCorrectnessByValidatorCanonicalService service.
// All implementations must embed UnimplementedFctAttestationCorrectnessByValidatorCanonicalServiceServer
// for forward compatibility
//
// FctAttestationCorrectnessByValidatorCanonicalService provides RPC methods for querying fct_attestation_correctness_by_validator_canonical data
type FctAttestationCorrectnessByValidatorCanonicalServiceServer interface {
	// List returns paginated fct_attestation_correctness_by_validator_canonical records
	List(context.Context, *ListFctAttestationCorrectnessByValidatorCanonicalRequest) (*ListFctAttestationCorrectnessByValidatorCanonicalResponse, error)
	// Get returns a single fct_attestation_correctness_by_validator_canonical record by primary key
	Get(context.Context, *GetFctAttestationCorrectnessByValidatorCanonicalRequest) (*GetFctAttestationCorrectnessByValidatorCanonicalResponse, error)
	mustEmbedUnimplementedFctAttestationCorrectnessByValidatorCanonicalServiceServer()
}

// UnimplementedFctAttestationCorrectnessByValidatorCanonicalServiceServer must be embedded to have forward compatible implementations.
type UnimplementedFctAttestationCorrectnessByValidatorCanonicalServiceServer struct {
}

func (UnimplementedFctAttestationCorrectnessByValidatorCanonicalServiceServer) List(context.Context, *ListFctAttestationCorrectnessByValidatorCanonicalRequest) (*ListFctAttestationCorrectnessByValidatorCanonicalResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method List not implemented")
}
func (UnimplementedFctAttestationCorrectnessByValidatorCanonicalServiceServer) Get(context.Context, *GetFctAttestationCorrectnessByValidatorCanonicalRequest) (*GetFctAttestationCorrectnessByValidatorCanonicalResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (UnimplementedFctAttestationCorrectnessByValidatorCanonicalServiceServer) mustEmbedUnimplementedFctAttestationCorrectnessByValidatorCanonicalServiceServer() {
}

// UnsafeFctAttestationCorrectnessByValidatorCanonicalServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to FctAttestationCorrectnessByValidatorCanonicalServiceServer will
// result in compilation errors.
type UnsafeFctAttestationCorrectnessByValidatorCanonicalServiceServer interface {
	mustEmbedUnimplementedFctAttestationCorrectnessByValidatorCanonicalServiceServer()
}

func RegisterFctAttestationCorrectnessByValidatorCanonicalServiceServer(s grpc.ServiceRegistrar, srv FctAttestationCorrectnessByValidatorCanonicalServiceServer) {
	s.RegisterService(&FctAttestationCorrectnessByValidatorCanonicalService_ServiceDesc, srv)
}

func _FctAttestationCorrectnessByValidatorCanonicalService_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListFctAttestationCorrectnessByValidatorCanonicalRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FctAttestationCorrectnessByValidatorCanonicalServiceServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: FctAttestationCorrectnessByValidatorCanonicalService_List_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FctAttestationCorrectnessByValidatorCanonicalServiceServer).List(ctx, req.(*ListFctAttestationCorrectnessByValidatorCanonicalRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FctAttestationCorrectnessByValidatorCanonicalService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetFctAttestationCorrectnessByValidatorCanonicalRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FctAttestationCorrectnessByValidatorCanonicalServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: FctAttestationCorrectnessByValidatorCanonicalService_Get_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FctAttestationCorrectnessByValidatorCanonicalServiceServer).Get(ctx, req.(*GetFctAttestationCorrectnessByValidatorCanonicalRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// FctAttestationCorrectnessByValidatorCanonicalService_ServiceDesc is the grpc.ServiceDesc for FctAttestationCorrectnessByValidatorCanonicalService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var FctAttestationCorrectnessByValidatorCanonicalService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "cbt.FctAttestationCorrectnessByValidatorCanonicalService",
	HandlerType: (*FctAttestationCorrectnessByValidatorCanonicalServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "List",
			Handler:    _FctAttestationCorrectnessByValidatorCanonicalService_List_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _FctAttestationCorrectnessByValidatorCanonicalService_Get_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "vendor/xatu-cbt/clickhouse/fct_attestation_correctness_by_validator_canonical.proto",
}
