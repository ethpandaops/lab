// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.4.0
// - protoc             (unknown)
// source: vendor/xatu-cbt/clickhouse/fct_address_storage_slot_expired_top_100_by_contract.proto

package clickhouse

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.62.0 or later.
const _ = grpc.SupportPackageIsVersion8

const (
	FctAddressStorageSlotExpiredTop100ByContractService_List_FullMethodName = "/cbt.FctAddressStorageSlotExpiredTop100ByContractService/List"
	FctAddressStorageSlotExpiredTop100ByContractService_Get_FullMethodName  = "/cbt.FctAddressStorageSlotExpiredTop100ByContractService/Get"
)

// FctAddressStorageSlotExpiredTop100ByContractServiceClient is the client API for FctAddressStorageSlotExpiredTop100ByContractService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
//
// FctAddressStorageSlotExpiredTop100ByContractService provides RPC methods for querying fct_address_storage_slot_expired_top_100_by_contract data
type FctAddressStorageSlotExpiredTop100ByContractServiceClient interface {
	// List returns paginated fct_address_storage_slot_expired_top_100_by_contract records
	List(ctx context.Context, in *ListFctAddressStorageSlotExpiredTop100ByContractRequest, opts ...grpc.CallOption) (*ListFctAddressStorageSlotExpiredTop100ByContractResponse, error)
	// Get returns a single fct_address_storage_slot_expired_top_100_by_contract record by primary key
	Get(ctx context.Context, in *GetFctAddressStorageSlotExpiredTop100ByContractRequest, opts ...grpc.CallOption) (*GetFctAddressStorageSlotExpiredTop100ByContractResponse, error)
}

type fctAddressStorageSlotExpiredTop100ByContractServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewFctAddressStorageSlotExpiredTop100ByContractServiceClient(cc grpc.ClientConnInterface) FctAddressStorageSlotExpiredTop100ByContractServiceClient {
	return &fctAddressStorageSlotExpiredTop100ByContractServiceClient{cc}
}

func (c *fctAddressStorageSlotExpiredTop100ByContractServiceClient) List(ctx context.Context, in *ListFctAddressStorageSlotExpiredTop100ByContractRequest, opts ...grpc.CallOption) (*ListFctAddressStorageSlotExpiredTop100ByContractResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ListFctAddressStorageSlotExpiredTop100ByContractResponse)
	err := c.cc.Invoke(ctx, FctAddressStorageSlotExpiredTop100ByContractService_List_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fctAddressStorageSlotExpiredTop100ByContractServiceClient) Get(ctx context.Context, in *GetFctAddressStorageSlotExpiredTop100ByContractRequest, opts ...grpc.CallOption) (*GetFctAddressStorageSlotExpiredTop100ByContractResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetFctAddressStorageSlotExpiredTop100ByContractResponse)
	err := c.cc.Invoke(ctx, FctAddressStorageSlotExpiredTop100ByContractService_Get_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FctAddressStorageSlotExpiredTop100ByContractServiceServer is the server API for FctAddressStorageSlotExpiredTop100ByContractService service.
// All implementations must embed UnimplementedFctAddressStorageSlotExpiredTop100ByContractServiceServer
// for forward compatibility
//
// FctAddressStorageSlotExpiredTop100ByContractService provides RPC methods for querying fct_address_storage_slot_expired_top_100_by_contract data
type FctAddressStorageSlotExpiredTop100ByContractServiceServer interface {
	// List returns paginated fct_address_storage_slot_expired_top_100_by_contract records
	List(context.Context, *ListFctAddressStorageSlotExpiredTop100ByContractRequest) (*ListFctAddressStorageSlotExpiredTop100ByContractResponse, error)
	// Get returns a single fct_address_storage_slot_expired_top_100_by_contract record by primary key
	Get(context.Context, *GetFctAddressStorageSlotExpiredTop100ByContractRequest) (*GetFctAddressStorageSlotExpiredTop100ByContractResponse, error)
	mustEmbedUnimplementedFctAddressStorageSlotExpiredTop100ByContractServiceServer()
}

// UnimplementedFctAddressStorageSlotExpiredTop100ByContractServiceServer must be embedded to have forward compatible implementations.
type UnimplementedFctAddressStorageSlotExpiredTop100ByContractServiceServer struct {
}

func (UnimplementedFctAddressStorageSlotExpiredTop100ByContractServiceServer) List(context.Context, *ListFctAddressStorageSlotExpiredTop100ByContractRequest) (*ListFctAddressStorageSlotExpiredTop100ByContractResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method List not implemented")
}
func (UnimplementedFctAddressStorageSlotExpiredTop100ByContractServiceServer) Get(context.Context, *GetFctAddressStorageSlotExpiredTop100ByContractRequest) (*GetFctAddressStorageSlotExpiredTop100ByContractResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (UnimplementedFctAddressStorageSlotExpiredTop100ByContractServiceServer) mustEmbedUnimplementedFctAddressStorageSlotExpiredTop100ByContractServiceServer() {
}

// UnsafeFctAddressStorageSlotExpiredTop100ByContractServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to FctAddressStorageSlotExpiredTop100ByContractServiceServer will
// result in compilation errors.
type UnsafeFctAddressStorageSlotExpiredTop100ByContractServiceServer interface {
	mustEmbedUnimplementedFctAddressStorageSlotExpiredTop100ByContractServiceServer()
}

func RegisterFctAddressStorageSlotExpiredTop100ByContractServiceServer(s grpc.ServiceRegistrar, srv FctAddressStorageSlotExpiredTop100ByContractServiceServer) {
	s.RegisterService(&FctAddressStorageSlotExpiredTop100ByContractService_ServiceDesc, srv)
}

func _FctAddressStorageSlotExpiredTop100ByContractService_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListFctAddressStorageSlotExpiredTop100ByContractRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FctAddressStorageSlotExpiredTop100ByContractServiceServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: FctAddressStorageSlotExpiredTop100ByContractService_List_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FctAddressStorageSlotExpiredTop100ByContractServiceServer).List(ctx, req.(*ListFctAddressStorageSlotExpiredTop100ByContractRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FctAddressStorageSlotExpiredTop100ByContractService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetFctAddressStorageSlotExpiredTop100ByContractRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FctAddressStorageSlotExpiredTop100ByContractServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: FctAddressStorageSlotExpiredTop100ByContractService_Get_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FctAddressStorageSlotExpiredTop100ByContractServiceServer).Get(ctx, req.(*GetFctAddressStorageSlotExpiredTop100ByContractRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// FctAddressStorageSlotExpiredTop100ByContractService_ServiceDesc is the grpc.ServiceDesc for FctAddressStorageSlotExpiredTop100ByContractService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var FctAddressStorageSlotExpiredTop100ByContractService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "cbt.FctAddressStorageSlotExpiredTop100ByContractService",
	HandlerType: (*FctAddressStorageSlotExpiredTop100ByContractServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "List",
			Handler:    _FctAddressStorageSlotExpiredTop100ByContractService_List_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _FctAddressStorageSlotExpiredTop100ByContractService_Get_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "vendor/xatu-cbt/clickhouse/fct_address_storage_slot_expired_top_100_by_contract.proto",
}
