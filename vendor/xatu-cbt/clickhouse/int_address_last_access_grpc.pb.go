// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.4.0
// - protoc             (unknown)
// source: vendor/xatu-cbt/clickhouse/int_address_last_access.proto

package clickhouse

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.62.0 or later.
const _ = grpc.SupportPackageIsVersion8

const (
	IntAddressLastAccessService_List_FullMethodName = "/cbt.IntAddressLastAccessService/List"
	IntAddressLastAccessService_Get_FullMethodName  = "/cbt.IntAddressLastAccessService/Get"
)

// IntAddressLastAccessServiceClient is the client API for IntAddressLastAccessService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
//
// Query int_address_last_access data
type IntAddressLastAccessServiceClient interface {
	// List records | Retrieve paginated results with optional filtering
	List(ctx context.Context, in *ListIntAddressLastAccessRequest, opts ...grpc.CallOption) (*ListIntAddressLastAccessResponse, error)
	// Get record | Retrieve a single record by primary key
	Get(ctx context.Context, in *GetIntAddressLastAccessRequest, opts ...grpc.CallOption) (*GetIntAddressLastAccessResponse, error)
}

type intAddressLastAccessServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewIntAddressLastAccessServiceClient(cc grpc.ClientConnInterface) IntAddressLastAccessServiceClient {
	return &intAddressLastAccessServiceClient{cc}
}

func (c *intAddressLastAccessServiceClient) List(ctx context.Context, in *ListIntAddressLastAccessRequest, opts ...grpc.CallOption) (*ListIntAddressLastAccessResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ListIntAddressLastAccessResponse)
	err := c.cc.Invoke(ctx, IntAddressLastAccessService_List_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *intAddressLastAccessServiceClient) Get(ctx context.Context, in *GetIntAddressLastAccessRequest, opts ...grpc.CallOption) (*GetIntAddressLastAccessResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetIntAddressLastAccessResponse)
	err := c.cc.Invoke(ctx, IntAddressLastAccessService_Get_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// IntAddressLastAccessServiceServer is the server API for IntAddressLastAccessService service.
// All implementations must embed UnimplementedIntAddressLastAccessServiceServer
// for forward compatibility
//
// Query int_address_last_access data
type IntAddressLastAccessServiceServer interface {
	// List records | Retrieve paginated results with optional filtering
	List(context.Context, *ListIntAddressLastAccessRequest) (*ListIntAddressLastAccessResponse, error)
	// Get record | Retrieve a single record by primary key
	Get(context.Context, *GetIntAddressLastAccessRequest) (*GetIntAddressLastAccessResponse, error)
	mustEmbedUnimplementedIntAddressLastAccessServiceServer()
}

// UnimplementedIntAddressLastAccessServiceServer must be embedded to have forward compatible implementations.
type UnimplementedIntAddressLastAccessServiceServer struct {
}

func (UnimplementedIntAddressLastAccessServiceServer) List(context.Context, *ListIntAddressLastAccessRequest) (*ListIntAddressLastAccessResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method List not implemented")
}
func (UnimplementedIntAddressLastAccessServiceServer) Get(context.Context, *GetIntAddressLastAccessRequest) (*GetIntAddressLastAccessResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (UnimplementedIntAddressLastAccessServiceServer) mustEmbedUnimplementedIntAddressLastAccessServiceServer() {
}

// UnsafeIntAddressLastAccessServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to IntAddressLastAccessServiceServer will
// result in compilation errors.
type UnsafeIntAddressLastAccessServiceServer interface {
	mustEmbedUnimplementedIntAddressLastAccessServiceServer()
}

func RegisterIntAddressLastAccessServiceServer(s grpc.ServiceRegistrar, srv IntAddressLastAccessServiceServer) {
	s.RegisterService(&IntAddressLastAccessService_ServiceDesc, srv)
}

func _IntAddressLastAccessService_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListIntAddressLastAccessRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IntAddressLastAccessServiceServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: IntAddressLastAccessService_List_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IntAddressLastAccessServiceServer).List(ctx, req.(*ListIntAddressLastAccessRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IntAddressLastAccessService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetIntAddressLastAccessRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IntAddressLastAccessServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: IntAddressLastAccessService_Get_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IntAddressLastAccessServiceServer).Get(ctx, req.(*GetIntAddressLastAccessRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// IntAddressLastAccessService_ServiceDesc is the grpc.ServiceDesc for IntAddressLastAccessService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var IntAddressLastAccessService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "cbt.IntAddressLastAccessService",
	HandlerType: (*IntAddressLastAccessServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "List",
			Handler:    _IntAddressLastAccessService_List_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _IntAddressLastAccessService_Get_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "vendor/xatu-cbt/clickhouse/int_address_last_access.proto",
}
