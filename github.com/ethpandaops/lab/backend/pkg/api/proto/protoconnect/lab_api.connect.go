// Code generated by protoc-gen-connect-go. DO NOT EDIT.
//
// Source: backend/pkg/api/proto/lab_api.proto

package protoconnect

import (
	connect "connectrpc.com/connect"
	context "context"
	errors "errors"
	proto "github.com/ethpandaops/lab/backend/pkg/api/proto"
	http "net/http"
	strings "strings"
)

// This is a compile-time assertion to ensure that this generated file and the connect package are
// compatible. If you get a compiler error that this constant is not defined, this code was
// generated with a version of connect newer than the one compiled into your binary. You can fix the
// problem by either regenerating this code with an older version of connect or updating the connect
// version compiled into your binary.
const _ = connect.IsAtLeastVersion1_13_0

const (
	// LabAPIName is the fully-qualified name of the LabAPI service.
	LabAPIName = "labapi.LabAPI"
)

// These constants are the fully-qualified names of the RPCs defined in this package. They're
// exposed at runtime as Spec.Procedure and as the final two segments of the HTTP route.
//
// Note that these are different from the fully-qualified method names used by
// google.golang.org/protobuf/reflect/protoreflect. To convert from these constants to
// reflection-formatted method names, remove the leading slash and convert the remaining slash to a
// period.
const (
	// LabAPIGetRecentLocallyBuiltBlocksProcedure is the fully-qualified name of the LabAPI's
	// GetRecentLocallyBuiltBlocks RPC.
	LabAPIGetRecentLocallyBuiltBlocksProcedure = "/labapi.LabAPI/GetRecentLocallyBuiltBlocks"
)

// These variables are the protoreflect.Descriptor objects for the RPCs defined in this package.
var (
	labAPIServiceDescriptor                           = proto.File_backend_pkg_api_proto_lab_api_proto.Services().ByName("LabAPI")
	labAPIGetRecentLocallyBuiltBlocksMethodDescriptor = labAPIServiceDescriptor.Methods().ByName("GetRecentLocallyBuiltBlocks")
)

// LabAPIClient is a client for the labapi.LabAPI service.
type LabAPIClient interface {
	GetRecentLocallyBuiltBlocks(context.Context, *connect.Request[proto.GetRecentLocallyBuiltBlocksRequest]) (*connect.Response[proto.GetRecentLocallyBuiltBlocksResponse], error)
}

// NewLabAPIClient constructs a client for the labapi.LabAPI service. By default, it uses the
// Connect protocol with the binary Protobuf Codec, asks for gzipped responses, and sends
// uncompressed requests. To use the gRPC or gRPC-Web protocols, supply the connect.WithGRPC() or
// connect.WithGRPCWeb() options.
//
// The URL supplied here should be the base URL for the Connect or gRPC server (for example,
// http://api.acme.com or https://acme.com/grpc).
func NewLabAPIClient(httpClient connect.HTTPClient, baseURL string, opts ...connect.ClientOption) LabAPIClient {
	baseURL = strings.TrimRight(baseURL, "/")
	return &labAPIClient{
		getRecentLocallyBuiltBlocks: connect.NewClient[proto.GetRecentLocallyBuiltBlocksRequest, proto.GetRecentLocallyBuiltBlocksResponse](
			httpClient,
			baseURL+LabAPIGetRecentLocallyBuiltBlocksProcedure,
			connect.WithSchema(labAPIGetRecentLocallyBuiltBlocksMethodDescriptor),
			connect.WithIdempotency(connect.IdempotencyNoSideEffects),
			connect.WithClientOptions(opts...),
		),
	}
}

// labAPIClient implements LabAPIClient.
type labAPIClient struct {
	getRecentLocallyBuiltBlocks *connect.Client[proto.GetRecentLocallyBuiltBlocksRequest, proto.GetRecentLocallyBuiltBlocksResponse]
}

// GetRecentLocallyBuiltBlocks calls labapi.LabAPI.GetRecentLocallyBuiltBlocks.
func (c *labAPIClient) GetRecentLocallyBuiltBlocks(ctx context.Context, req *connect.Request[proto.GetRecentLocallyBuiltBlocksRequest]) (*connect.Response[proto.GetRecentLocallyBuiltBlocksResponse], error) {
	return c.getRecentLocallyBuiltBlocks.CallUnary(ctx, req)
}

// LabAPIHandler is an implementation of the labapi.LabAPI service.
type LabAPIHandler interface {
	GetRecentLocallyBuiltBlocks(context.Context, *connect.Request[proto.GetRecentLocallyBuiltBlocksRequest]) (*connect.Response[proto.GetRecentLocallyBuiltBlocksResponse], error)
}

// NewLabAPIHandler builds an HTTP handler from the service implementation. It returns the path on
// which to mount the handler and the handler itself.
//
// By default, handlers support the Connect, gRPC, and gRPC-Web protocols with the binary Protobuf
// and JSON codecs. They also support gzip compression.
func NewLabAPIHandler(svc LabAPIHandler, opts ...connect.HandlerOption) (string, http.Handler) {
	labAPIGetRecentLocallyBuiltBlocksHandler := connect.NewUnaryHandler(
		LabAPIGetRecentLocallyBuiltBlocksProcedure,
		svc.GetRecentLocallyBuiltBlocks,
		connect.WithSchema(labAPIGetRecentLocallyBuiltBlocksMethodDescriptor),
		connect.WithIdempotency(connect.IdempotencyNoSideEffects),
		connect.WithHandlerOptions(opts...),
	)
	return "/labapi.LabAPI/", http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		switch r.URL.Path {
		case LabAPIGetRecentLocallyBuiltBlocksProcedure:
			labAPIGetRecentLocallyBuiltBlocksHandler.ServeHTTP(w, r)
		default:
			http.NotFound(w, r)
		}
	})
}

// UnimplementedLabAPIHandler returns CodeUnimplemented from all methods.
type UnimplementedLabAPIHandler struct{}

func (UnimplementedLabAPIHandler) GetRecentLocallyBuiltBlocks(context.Context, *connect.Request[proto.GetRecentLocallyBuiltBlocksRequest]) (*connect.Response[proto.GetRecentLocallyBuiltBlocksResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("labapi.LabAPI.GetRecentLocallyBuiltBlocks is not implemented"))
}
