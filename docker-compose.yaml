version: '3.8'

services:
  redis:
    image: redis:7
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  minio:
    image: minio/minio
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    volumes:
      - minio_data:/data

  # Create the lab bucket in MinIO
  createbuckets:
    image: minio/mc
    depends_on:
      - minio
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    entrypoint: >
      /bin/sh -c "
      sleep 5;
      /usr/bin/mc config host add myminio http://minio:9000 minioadmin minioadmin;
      /usr/bin/mc mb myminio/lab;
      /usr/bin/mc policy set public myminio/lab;
      exit 0;
      "

  server:
    build:
      context: .
      dockerfile: Dockerfile.golang
    command: ["srv", "--srv-config", "/app/config/service.config.yaml"]
    environment:
      - XATU_CLICKHOUSE_USERNAME=${XATU_CLICKHOUSE_USERNAME}
      - XATU_CLICKHOUSE_PASSWORD=${XATU_CLICKHOUSE_PASSWORD}
    ports:
      - "6666:6666"
    depends_on:
      - minio
      - createbuckets
    volumes:
      - ./deploy/docker-compose/service.config.yaml:/app/config/service.config.yaml

  api:
    build:
      context: .
      dockerfile: Dockerfile.golang
    command: ["api", "--api-config", "/app/config/api.config.yaml"]
    ports:
      - "8080:8080"
    depends_on:
      - redis
      - server
    volumes:
      - ./deploy/docker-compose/api.config.yaml:/app/config/api.config.yaml

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - api
    environment:
      VITE_BACKEND_URL: http://api:8080

volumes:
  minio_data:
  redis_data: