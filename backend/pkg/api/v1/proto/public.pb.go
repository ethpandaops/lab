// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v6.32.0
// source: pkg/api/v1/proto/public.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ListNodesResponse is the v1 API response for listing nodes with pagination.
type ListNodesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Nodes         []*Node                `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
	Pagination    *PaginationMetadata    `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	Filters       *FilterMetadata        `protobuf:"bytes,3,opt,name=filters,proto3" json:"filters,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListNodesResponse) Reset() {
	*x = ListNodesResponse{}
	mi := &file_pkg_api_v1_proto_public_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNodesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNodesResponse) ProtoMessage() {}

func (x *ListNodesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_v1_proto_public_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNodesResponse.ProtoReflect.Descriptor instead.
func (*ListNodesResponse) Descriptor() ([]byte, []int) {
	return file_pkg_api_v1_proto_public_proto_rawDescGZIP(), []int{0}
}

func (x *ListNodesResponse) GetNodes() []*Node {
	if x != nil {
		return x.Nodes
	}
	return nil
}

func (x *ListNodesResponse) GetPagination() *PaginationMetadata {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *ListNodesResponse) GetFilters() *FilterMetadata {
	if x != nil {
		return x.Filters
	}
	return nil
}

// ListNetworksResponse is the v1 API response for listing available networks.
type ListNetworksResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Networks      []*Network             `protobuf:"bytes,1,rep,name=networks,proto3" json:"networks,omitempty"`
	Filters       *NetworkFilterMetadata `protobuf:"bytes,2,opt,name=filters,proto3" json:"filters,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListNetworksResponse) Reset() {
	*x = ListNetworksResponse{}
	mi := &file_pkg_api_v1_proto_public_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNetworksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNetworksResponse) ProtoMessage() {}

func (x *ListNetworksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_v1_proto_public_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNetworksResponse.ProtoReflect.Descriptor instead.
func (*ListNetworksResponse) Descriptor() ([]byte, []int) {
	return file_pkg_api_v1_proto_public_proto_rawDescGZIP(), []int{1}
}

func (x *ListNetworksResponse) GetNetworks() []*Network {
	if x != nil {
		return x.Networks
	}
	return nil
}

func (x *ListNetworksResponse) GetFilters() *NetworkFilterMetadata {
	if x != nil {
		return x.Filters
	}
	return nil
}

// Node represents a transformed view of node data for public consumption.
// This is a curated subset of fields from the internal structs,
// formatted for client convenience (e.g., timestamps as ISO strings).
type Node struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Username       string                 `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	NodeId         string                 `protobuf:"bytes,2,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Classification string                 `protobuf:"bytes,3,opt,name=classification,proto3" json:"classification,omitempty"`
	Client         *ClientInfo            `protobuf:"bytes,4,opt,name=client,proto3" json:"client,omitempty"`
	Geo            *GeoInfo               `protobuf:"bytes,5,opt,name=geo,proto3" json:"geo,omitempty"`
	Consensus      *ConsensusInfo         `protobuf:"bytes,6,opt,name=consensus,proto3" json:"consensus,omitempty"`
	LastSeen       string                 `protobuf:"bytes,7,opt,name=last_seen,json=lastSeen,proto3" json:"last_seen,omitempty"` // ISO 8601 formatted, not raw Unix timestamp
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Node) Reset() {
	*x = Node{}
	mi := &file_pkg_api_v1_proto_public_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Node) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Node) ProtoMessage() {}

func (x *Node) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_v1_proto_public_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Node.ProtoReflect.Descriptor instead.
func (*Node) Descriptor() ([]byte, []int) {
	return file_pkg_api_v1_proto_public_proto_rawDescGZIP(), []int{2}
}

func (x *Node) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *Node) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *Node) GetClassification() string {
	if x != nil {
		return x.Classification
	}
	return ""
}

func (x *Node) GetClient() *ClientInfo {
	if x != nil {
		return x.Client
	}
	return nil
}

func (x *Node) GetGeo() *GeoInfo {
	if x != nil {
		return x.Geo
	}
	return nil
}

func (x *Node) GetConsensus() *ConsensusInfo {
	if x != nil {
		return x.Consensus
	}
	return nil
}

func (x *Node) GetLastSeen() string {
	if x != nil {
		return x.LastSeen
	}
	return ""
}

// ClientInfo groups execution client metadata.
type ClientInfo struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Name           string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Version        string                 `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	Implementation string                 `protobuf:"bytes,3,opt,name=implementation,proto3" json:"implementation,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ClientInfo) Reset() {
	*x = ClientInfo{}
	mi := &file_pkg_api_v1_proto_public_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClientInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientInfo) ProtoMessage() {}

func (x *ClientInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_v1_proto_public_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientInfo.ProtoReflect.Descriptor instead.
func (*ClientInfo) Descriptor() ([]byte, []int) {
	return file_pkg_api_v1_proto_public_proto_rawDescGZIP(), []int{3}
}

func (x *ClientInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ClientInfo) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *ClientInfo) GetImplementation() string {
	if x != nil {
		return x.Implementation
	}
	return ""
}

// GeoInfo groups geographical metadata.
type GeoInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	City          string                 `protobuf:"bytes,1,opt,name=city,proto3" json:"city,omitempty"`
	Country       string                 `protobuf:"bytes,2,opt,name=country,proto3" json:"country,omitempty"`
	CountryCode   string                 `protobuf:"bytes,3,opt,name=country_code,json=countryCode,proto3" json:"country_code,omitempty"`
	ContinentCode string                 `protobuf:"bytes,4,opt,name=continent_code,json=continentCode,proto3" json:"continent_code,omitempty"`
	Latitude      *float64               `protobuf:"fixed64,5,opt,name=latitude,proto3,oneof" json:"latitude,omitempty"`
	Longitude     *float64               `protobuf:"fixed64,6,opt,name=longitude,proto3,oneof" json:"longitude,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GeoInfo) Reset() {
	*x = GeoInfo{}
	mi := &file_pkg_api_v1_proto_public_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GeoInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeoInfo) ProtoMessage() {}

func (x *GeoInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_v1_proto_public_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeoInfo.ProtoReflect.Descriptor instead.
func (*GeoInfo) Descriptor() ([]byte, []int) {
	return file_pkg_api_v1_proto_public_proto_rawDescGZIP(), []int{4}
}

func (x *GeoInfo) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *GeoInfo) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *GeoInfo) GetCountryCode() string {
	if x != nil {
		return x.CountryCode
	}
	return ""
}

func (x *GeoInfo) GetContinentCode() string {
	if x != nil {
		return x.ContinentCode
	}
	return ""
}

func (x *GeoInfo) GetLatitude() float64 {
	if x != nil && x.Latitude != nil {
		return *x.Latitude
	}
	return 0
}

func (x *GeoInfo) GetLongitude() float64 {
	if x != nil && x.Longitude != nil {
		return *x.Longitude
	}
	return 0
}

// ConsensusInfo groups consensus client metadata.
type ConsensusInfo struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Version        string                 `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	Implementation string                 `protobuf:"bytes,2,opt,name=implementation,proto3" json:"implementation,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ConsensusInfo) Reset() {
	*x = ConsensusInfo{}
	mi := &file_pkg_api_v1_proto_public_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConsensusInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConsensusInfo) ProtoMessage() {}

func (x *ConsensusInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_v1_proto_public_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConsensusInfo.ProtoReflect.Descriptor instead.
func (*ConsensusInfo) Descriptor() ([]byte, []int) {
	return file_pkg_api_v1_proto_public_proto_rawDescGZIP(), []int{5}
}

func (x *ConsensusInfo) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *ConsensusInfo) GetImplementation() string {
	if x != nil {
		return x.Implementation
	}
	return ""
}

// Pagination metadata following AIP-132.
type PaginationMetadata struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PageSize      int32                  `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken     string                 `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	NextPageToken string                 `protobuf:"bytes,3,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PaginationMetadata) Reset() {
	*x = PaginationMetadata{}
	mi := &file_pkg_api_v1_proto_public_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PaginationMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaginationMetadata) ProtoMessage() {}

func (x *PaginationMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_v1_proto_public_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaginationMetadata.ProtoReflect.Descriptor instead.
func (*PaginationMetadata) Descriptor() ([]byte, []int) {
	return file_pkg_api_v1_proto_public_proto_rawDescGZIP(), []int{6}
}

func (x *PaginationMetadata) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *PaginationMetadata) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *PaginationMetadata) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

// Filter metadata showing applied filters.
type FilterMetadata struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Network        string                 `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`
	AppliedFilters map[string]string      `protobuf:"bytes,2,rep,name=applied_filters,json=appliedFilters,proto3" json:"applied_filters,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // All filters including time filters
	OrderBy        string                 `protobuf:"bytes,3,opt,name=order_by,json=orderBy,proto3" json:"order_by,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *FilterMetadata) Reset() {
	*x = FilterMetadata{}
	mi := &file_pkg_api_v1_proto_public_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FilterMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterMetadata) ProtoMessage() {}

func (x *FilterMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_v1_proto_public_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterMetadata.ProtoReflect.Descriptor instead.
func (*FilterMetadata) Descriptor() ([]byte, []int) {
	return file_pkg_api_v1_proto_public_proto_rawDescGZIP(), []int{7}
}

func (x *FilterMetadata) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *FilterMetadata) GetAppliedFilters() map[string]string {
	if x != nil {
		return x.AppliedFilters
	}
	return nil
}

func (x *FilterMetadata) GetOrderBy() string {
	if x != nil {
		return x.OrderBy
	}
	return ""
}

// StateExpiryAccessTotalResponse is the v1 API response for state expiry access totals.
type StateExpiryAccessTotalResponse struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Item          *StateExpiryAccessTotal `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
	Filters       *FilterMetadata         `protobuf:"bytes,2,opt,name=filters,proto3" json:"filters,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StateExpiryAccessTotalResponse) Reset() {
	*x = StateExpiryAccessTotalResponse{}
	mi := &file_pkg_api_v1_proto_public_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StateExpiryAccessTotalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateExpiryAccessTotalResponse) ProtoMessage() {}

func (x *StateExpiryAccessTotalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_v1_proto_public_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateExpiryAccessTotalResponse.ProtoReflect.Descriptor instead.
func (*StateExpiryAccessTotalResponse) Descriptor() ([]byte, []int) {
	return file_pkg_api_v1_proto_public_proto_rawDescGZIP(), []int{8}
}

func (x *StateExpiryAccessTotalResponse) GetItem() *StateExpiryAccessTotal {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *StateExpiryAccessTotalResponse) GetFilters() *FilterMetadata {
	if x != nil {
		return x.Filters
	}
	return nil
}

// StateExpiryAccessTotal represents state expiry access statistics for public API consumption.
type StateExpiryAccessTotal struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Total number of accounts accessed in last 365 days
	TotalAccounts uint64 `protobuf:"varint,1,opt,name=total_accounts,json=totalAccounts,proto3" json:"total_accounts,omitempty"`
	// Number of expired accounts (not accessed in last 365 days)
	ExpiredAccounts uint64 `protobuf:"varint,2,opt,name=expired_accounts,json=expiredAccounts,proto3" json:"expired_accounts,omitempty"`
	// Total number of contract accounts accessed in last 365 days
	TotalContracts uint64 `protobuf:"varint,3,opt,name=total_contracts,json=totalContracts,proto3" json:"total_contracts,omitempty"`
	// Number of expired contracts (not accessed in last 365 days)
	ExpiredContracts uint64 `protobuf:"varint,4,opt,name=expired_contracts,json=expiredContracts,proto3" json:"expired_contracts,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *StateExpiryAccessTotal) Reset() {
	*x = StateExpiryAccessTotal{}
	mi := &file_pkg_api_v1_proto_public_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StateExpiryAccessTotal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateExpiryAccessTotal) ProtoMessage() {}

func (x *StateExpiryAccessTotal) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_v1_proto_public_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateExpiryAccessTotal.ProtoReflect.Descriptor instead.
func (*StateExpiryAccessTotal) Descriptor() ([]byte, []int) {
	return file_pkg_api_v1_proto_public_proto_rawDescGZIP(), []int{9}
}

func (x *StateExpiryAccessTotal) GetTotalAccounts() uint64 {
	if x != nil {
		return x.TotalAccounts
	}
	return 0
}

func (x *StateExpiryAccessTotal) GetExpiredAccounts() uint64 {
	if x != nil {
		return x.ExpiredAccounts
	}
	return 0
}

func (x *StateExpiryAccessTotal) GetTotalContracts() uint64 {
	if x != nil {
		return x.TotalContracts
	}
	return 0
}

func (x *StateExpiryAccessTotal) GetExpiredContracts() uint64 {
	if x != nil {
		return x.ExpiredContracts
	}
	return 0
}

// Network represents an Ethereum network for public API consumption.
// This provides essential network metadata needed by clients.
type Network struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                                  // Full network name (e.g., "mainnet", "sepolia", "fusaka-devnet-0")
	Status        string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`                              // "active", "inactive", or "unknown"
	ChainId       int64                  `protobuf:"varint,3,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`            // Ethereum chain ID
	LastUpdated   string                 `protobuf:"bytes,4,opt,name=last_updated,json=lastUpdated,proto3" json:"last_updated,omitempty"` // ISO 8601 formatted timestamp
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Network) Reset() {
	*x = Network{}
	mi := &file_pkg_api_v1_proto_public_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Network) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Network) ProtoMessage() {}

func (x *Network) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_v1_proto_public_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Network.ProtoReflect.Descriptor instead.
func (*Network) Descriptor() ([]byte, []int) {
	return file_pkg_api_v1_proto_public_proto_rawDescGZIP(), []int{10}
}

func (x *Network) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Network) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Network) GetChainId() int64 {
	if x != nil {
		return x.ChainId
	}
	return 0
}

func (x *Network) GetLastUpdated() string {
	if x != nil {
		return x.LastUpdated
	}
	return ""
}

// NetworkFilterMetadata shows filtering information for network queries.
type NetworkFilterMetadata struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	AppliedFilters []string               `protobuf:"bytes,1,rep,name=applied_filters,json=appliedFilters,proto3" json:"applied_filters,omitempty"` // e.g., ["active_only"]
	TotalCount     int32                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`            // Total networks before filtering
	FilteredCount  int32                  `protobuf:"varint,3,opt,name=filtered_count,json=filteredCount,proto3" json:"filtered_count,omitempty"`   // Networks after filtering
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *NetworkFilterMetadata) Reset() {
	*x = NetworkFilterMetadata{}
	mi := &file_pkg_api_v1_proto_public_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkFilterMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkFilterMetadata) ProtoMessage() {}

func (x *NetworkFilterMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_v1_proto_public_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkFilterMetadata.ProtoReflect.Descriptor instead.
func (*NetworkFilterMetadata) Descriptor() ([]byte, []int) {
	return file_pkg_api_v1_proto_public_proto_rawDescGZIP(), []int{11}
}

func (x *NetworkFilterMetadata) GetAppliedFilters() []string {
	if x != nil {
		return x.AppliedFilters
	}
	return nil
}

func (x *NetworkFilterMetadata) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *NetworkFilterMetadata) GetFilteredCount() int32 {
	if x != nil {
		return x.FilteredCount
	}
	return 0
}

// StateExpiryAccessHistoryResponse is the v1 API response for state expiry access history data.
// This endpoint provides aggregated data about Ethereum address access patterns chunked by 10000 blocks.
type StateExpiryAccessHistoryResponse struct {
	state         protoimpl.MessageState      `protogen:"open.v1"`
	Items         []*StateExpiryAccessHistory `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	Pagination    *PaginationMetadata         `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	Filters       *FilterMetadata             `protobuf:"bytes,3,opt,name=filters,proto3" json:"filters,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StateExpiryAccessHistoryResponse) Reset() {
	*x = StateExpiryAccessHistoryResponse{}
	mi := &file_pkg_api_v1_proto_public_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StateExpiryAccessHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateExpiryAccessHistoryResponse) ProtoMessage() {}

func (x *StateExpiryAccessHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_v1_proto_public_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateExpiryAccessHistoryResponse.ProtoReflect.Descriptor instead.
func (*StateExpiryAccessHistoryResponse) Descriptor() ([]byte, []int) {
	return file_pkg_api_v1_proto_public_proto_rawDescGZIP(), []int{12}
}

func (x *StateExpiryAccessHistoryResponse) GetItems() []*StateExpiryAccessHistory {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *StateExpiryAccessHistoryResponse) GetPagination() *PaginationMetadata {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *StateExpiryAccessHistoryResponse) GetFilters() *FilterMetadata {
	if x != nil {
		return x.Filters
	}
	return nil
}

// StateExpiryAccessHistory represents address access statistics for a 10000-block chunk.
// This data is useful for analyzing state expiry patterns and understanding address activity over time.
type StateExpiryAccessHistory struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The starting block number of this 10000-block chunk
	ChunkStartBlockNumber uint32 `protobuf:"varint,1,opt,name=chunk_start_block_number,json=chunkStartBlockNumber,proto3" json:"chunk_start_block_number,omitempty"`
	// Number of unique accounts that were accessed for the first time in this chunk
	// These are addresses that had never been accessed before this chunk
	FirstAccessedAccounts uint32 `protobuf:"varint,2,opt,name=first_accessed_accounts,json=firstAccessedAccounts,proto3" json:"first_accessed_accounts,omitempty"`
	// Number of unique accounts whose most recent access was in this chunk
	// These addresses haven't been accessed in any later chunks
	LastAccessedAccounts uint32 `protobuf:"varint,3,opt,name=last_accessed_accounts,json=lastAccessedAccounts,proto3" json:"last_accessed_accounts,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *StateExpiryAccessHistory) Reset() {
	*x = StateExpiryAccessHistory{}
	mi := &file_pkg_api_v1_proto_public_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StateExpiryAccessHistory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateExpiryAccessHistory) ProtoMessage() {}

func (x *StateExpiryAccessHistory) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_v1_proto_public_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateExpiryAccessHistory.ProtoReflect.Descriptor instead.
func (*StateExpiryAccessHistory) Descriptor() ([]byte, []int) {
	return file_pkg_api_v1_proto_public_proto_rawDescGZIP(), []int{13}
}

func (x *StateExpiryAccessHistory) GetChunkStartBlockNumber() uint32 {
	if x != nil {
		return x.ChunkStartBlockNumber
	}
	return 0
}

func (x *StateExpiryAccessHistory) GetFirstAccessedAccounts() uint32 {
	if x != nil {
		return x.FirstAccessedAccounts
	}
	return 0
}

func (x *StateExpiryAccessHistory) GetLastAccessedAccounts() uint32 {
	if x != nil {
		return x.LastAccessedAccounts
	}
	return 0
}

// StateExpiryStorageHistoryResponse is the v1 API response for state expiry storage slot history data.
// This endpoint provides aggregated data about Ethereum storage slot access patterns chunked by 10000 blocks.
type StateExpiryStorageHistoryResponse struct {
	state         protoimpl.MessageState       `protogen:"open.v1"`
	Items         []*StateExpiryStorageHistory `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	Pagination    *PaginationMetadata          `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	Filters       *FilterMetadata              `protobuf:"bytes,3,opt,name=filters,proto3" json:"filters,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StateExpiryStorageHistoryResponse) Reset() {
	*x = StateExpiryStorageHistoryResponse{}
	mi := &file_pkg_api_v1_proto_public_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StateExpiryStorageHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateExpiryStorageHistoryResponse) ProtoMessage() {}

func (x *StateExpiryStorageHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_v1_proto_public_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateExpiryStorageHistoryResponse.ProtoReflect.Descriptor instead.
func (*StateExpiryStorageHistoryResponse) Descriptor() ([]byte, []int) {
	return file_pkg_api_v1_proto_public_proto_rawDescGZIP(), []int{14}
}

func (x *StateExpiryStorageHistoryResponse) GetItems() []*StateExpiryStorageHistory {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *StateExpiryStorageHistoryResponse) GetPagination() *PaginationMetadata {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *StateExpiryStorageHistoryResponse) GetFilters() *FilterMetadata {
	if x != nil {
		return x.Filters
	}
	return nil
}

// StateExpiryStorageHistory represents storage slot statistics for a 10000-block chunk.
// This data is useful for analyzing state expiry patterns and understanding storage slot activity over time.
type StateExpiryStorageHistory struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The starting block number of this 10000-block chunk
	ChunkStartBlockNumber uint32 `protobuf:"varint,1,opt,name=chunk_start_block_number,json=chunkStartBlockNumber,proto3" json:"chunk_start_block_number,omitempty"`
	// Number of storage slots that were accessed for the first time in this chunk
	// These are slots that had never been accessed before this chunk
	FirstAccessedSlots uint32 `protobuf:"varint,2,opt,name=first_accessed_slots,json=firstAccessedSlots,proto3" json:"first_accessed_slots,omitempty"`
	// Number of storage slots whose most recent access was in this chunk
	// These slots haven't been accessed in any later chunks
	LastAccessedSlots uint32 `protobuf:"varint,3,opt,name=last_accessed_slots,json=lastAccessedSlots,proto3" json:"last_accessed_slots,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *StateExpiryStorageHistory) Reset() {
	*x = StateExpiryStorageHistory{}
	mi := &file_pkg_api_v1_proto_public_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StateExpiryStorageHistory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateExpiryStorageHistory) ProtoMessage() {}

func (x *StateExpiryStorageHistory) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_v1_proto_public_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateExpiryStorageHistory.ProtoReflect.Descriptor instead.
func (*StateExpiryStorageHistory) Descriptor() ([]byte, []int) {
	return file_pkg_api_v1_proto_public_proto_rawDescGZIP(), []int{15}
}

func (x *StateExpiryStorageHistory) GetChunkStartBlockNumber() uint32 {
	if x != nil {
		return x.ChunkStartBlockNumber
	}
	return 0
}

func (x *StateExpiryStorageHistory) GetFirstAccessedSlots() uint32 {
	if x != nil {
		return x.FirstAccessedSlots
	}
	return 0
}

func (x *StateExpiryStorageHistory) GetLastAccessedSlots() uint32 {
	if x != nil {
		return x.LastAccessedSlots
	}
	return 0
}

// ListBeaconSlotMevRelayResponse is the v1 API response for MEV relay bid counts by slot.
type ListBeaconSlotMevRelayResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Relays        []*MevRelayBidCount    `protobuf:"bytes,1,rep,name=relays,proto3" json:"relays,omitempty"`
	Pagination    *PaginationMetadata    `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	Filters       *FilterMetadata        `protobuf:"bytes,3,opt,name=filters,proto3" json:"filters,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListBeaconSlotMevRelayResponse) Reset() {
	*x = ListBeaconSlotMevRelayResponse{}
	mi := &file_pkg_api_v1_proto_public_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListBeaconSlotMevRelayResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBeaconSlotMevRelayResponse) ProtoMessage() {}

func (x *ListBeaconSlotMevRelayResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_v1_proto_public_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBeaconSlotMevRelayResponse.ProtoReflect.Descriptor instead.
func (*ListBeaconSlotMevRelayResponse) Descriptor() ([]byte, []int) {
	return file_pkg_api_v1_proto_public_proto_rawDescGZIP(), []int{16}
}

func (x *ListBeaconSlotMevRelayResponse) GetRelays() []*MevRelayBidCount {
	if x != nil {
		return x.Relays
	}
	return nil
}

func (x *ListBeaconSlotMevRelayResponse) GetPagination() *PaginationMetadata {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *ListBeaconSlotMevRelayResponse) GetFilters() *FilterMetadata {
	if x != nil {
		return x.Filters
	}
	return nil
}

// MevRelayBidCount represents MEV relay bid statistics for public API consumption.
type MevRelayBidCount struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RelayName     string                 `protobuf:"bytes,1,opt,name=relay_name,json=relayName,proto3" json:"relay_name,omitempty"` // Relay identifier
	BidCount      uint32                 `protobuf:"varint,2,opt,name=bid_count,json=bidCount,proto3" json:"bid_count,omitempty"`   // Total number of bids
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MevRelayBidCount) Reset() {
	*x = MevRelayBidCount{}
	mi := &file_pkg_api_v1_proto_public_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MevRelayBidCount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MevRelayBidCount) ProtoMessage() {}

func (x *MevRelayBidCount) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_v1_proto_public_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MevRelayBidCount.ProtoReflect.Descriptor instead.
func (*MevRelayBidCount) Descriptor() ([]byte, []int) {
	return file_pkg_api_v1_proto_public_proto_rawDescGZIP(), []int{17}
}

func (x *MevRelayBidCount) GetRelayName() string {
	if x != nil {
		return x.RelayName
	}
	return ""
}

func (x *MevRelayBidCount) GetBidCount() uint32 {
	if x != nil {
		return x.BidCount
	}
	return 0
}

// ListBeaconSlotMevBuilderCountResponse is the v1 API response for MEV builder bid counts by slot.
type ListBeaconSlotMevBuilderCountResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Builders      []*MevBuilderBidCount  `protobuf:"bytes,1,rep,name=builders,proto3" json:"builders,omitempty"`
	Pagination    *PaginationMetadata    `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	Filters       *FilterMetadata        `protobuf:"bytes,3,opt,name=filters,proto3" json:"filters,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListBeaconSlotMevBuilderCountResponse) Reset() {
	*x = ListBeaconSlotMevBuilderCountResponse{}
	mi := &file_pkg_api_v1_proto_public_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListBeaconSlotMevBuilderCountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBeaconSlotMevBuilderCountResponse) ProtoMessage() {}

func (x *ListBeaconSlotMevBuilderCountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_v1_proto_public_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBeaconSlotMevBuilderCountResponse.ProtoReflect.Descriptor instead.
func (*ListBeaconSlotMevBuilderCountResponse) Descriptor() ([]byte, []int) {
	return file_pkg_api_v1_proto_public_proto_rawDescGZIP(), []int{18}
}

func (x *ListBeaconSlotMevBuilderCountResponse) GetBuilders() []*MevBuilderBidCount {
	if x != nil {
		return x.Builders
	}
	return nil
}

func (x *ListBeaconSlotMevBuilderCountResponse) GetPagination() *PaginationMetadata {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *ListBeaconSlotMevBuilderCountResponse) GetFilters() *FilterMetadata {
	if x != nil {
		return x.Filters
	}
	return nil
}

// MevBuilderBidCount represents MEV builder bid statistics for public API consumption.
type MevBuilderBidCount struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BuilderPubkey string                 `protobuf:"bytes,1,opt,name=builder_pubkey,json=builderPubkey,proto3" json:"builder_pubkey,omitempty"` // Builder public key identifier
	BidCount      uint32                 `protobuf:"varint,2,opt,name=bid_count,json=bidCount,proto3" json:"bid_count,omitempty"`               // Total number of bids from this builder
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MevBuilderBidCount) Reset() {
	*x = MevBuilderBidCount{}
	mi := &file_pkg_api_v1_proto_public_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MevBuilderBidCount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MevBuilderBidCount) ProtoMessage() {}

func (x *MevBuilderBidCount) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_v1_proto_public_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MevBuilderBidCount.ProtoReflect.Descriptor instead.
func (*MevBuilderBidCount) Descriptor() ([]byte, []int) {
	return file_pkg_api_v1_proto_public_proto_rawDescGZIP(), []int{19}
}

func (x *MevBuilderBidCount) GetBuilderPubkey() string {
	if x != nil {
		return x.BuilderPubkey
	}
	return ""
}

func (x *MevBuilderBidCount) GetBidCount() uint32 {
	if x != nil {
		return x.BidCount
	}
	return 0
}

// ListBeaconSlotMevResponse is the v1 API response for MEV block data by slot.
type ListBeaconSlotMevResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Blocks        []*MevBlock            `protobuf:"bytes,1,rep,name=blocks,proto3" json:"blocks,omitempty"`
	Pagination    *PaginationMetadata    `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	Filters       *FilterMetadata        `protobuf:"bytes,3,opt,name=filters,proto3" json:"filters,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListBeaconSlotMevResponse) Reset() {
	*x = ListBeaconSlotMevResponse{}
	mi := &file_pkg_api_v1_proto_public_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListBeaconSlotMevResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBeaconSlotMevResponse) ProtoMessage() {}

func (x *ListBeaconSlotMevResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_v1_proto_public_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBeaconSlotMevResponse.ProtoReflect.Descriptor instead.
func (*ListBeaconSlotMevResponse) Descriptor() ([]byte, []int) {
	return file_pkg_api_v1_proto_public_proto_rawDescGZIP(), []int{20}
}

func (x *ListBeaconSlotMevResponse) GetBlocks() []*MevBlock {
	if x != nil {
		return x.Blocks
	}
	return nil
}

func (x *ListBeaconSlotMevResponse) GetPagination() *PaginationMetadata {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *ListBeaconSlotMevResponse) GetFilters() *FilterMetadata {
	if x != nil {
		return x.Filters
	}
	return nil
}

// MevBlock represents MEV block data for public API consumption.
type MevBlock struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	BlockRoot            string                 `protobuf:"bytes,1,opt,name=block_root,json=blockRoot,proto3" json:"block_root,omitempty"`                                    // Block root hash
	BlockHash            string                 `protobuf:"bytes,2,opt,name=block_hash,json=blockHash,proto3" json:"block_hash,omitempty"`                                    // Execution layer block hash
	BlockNumber          uint64                 `protobuf:"varint,3,opt,name=block_number,json=blockNumber,proto3" json:"block_number,omitempty"`                             // Execution layer block number
	ParentHash           string                 `protobuf:"bytes,4,opt,name=parent_hash,json=parentHash,proto3" json:"parent_hash,omitempty"`                                 // Parent block hash
	BuilderPubkey        string                 `protobuf:"bytes,5,opt,name=builder_pubkey,json=builderPubkey,proto3" json:"builder_pubkey,omitempty"`                        // Builder public key
	ProposerPubkey       string                 `protobuf:"bytes,6,opt,name=proposer_pubkey,json=proposerPubkey,proto3" json:"proposer_pubkey,omitempty"`                     // Proposer public key
	ProposerFeeRecipient string                 `protobuf:"bytes,7,opt,name=proposer_fee_recipient,json=proposerFeeRecipient,proto3" json:"proposer_fee_recipient,omitempty"` // Fee recipient address
	GasLimit             uint64                 `protobuf:"varint,8,opt,name=gas_limit,json=gasLimit,proto3" json:"gas_limit,omitempty"`                                      // Gas limit
	GasUsed              uint64                 `protobuf:"varint,9,opt,name=gas_used,json=gasUsed,proto3" json:"gas_used,omitempty"`                                         // Gas used
	Value                string                 `protobuf:"bytes,10,opt,name=value,proto3" json:"value,omitempty"`                                                            // MEV value in wei
	TransactionCount     uint32                 `protobuf:"varint,11,opt,name=transaction_count,json=transactionCount,proto3" json:"transaction_count,omitempty"`             // Number of transactions
	RelayNames           []string               `protobuf:"bytes,12,rep,name=relay_names,json=relayNames,proto3" json:"relay_names,omitempty"`                                // Relay names that delivered the payload
	EarliestBidTime      string                 `protobuf:"bytes,13,opt,name=earliest_bid_time,json=earliestBidTime,proto3" json:"earliest_bid_time,omitempty"`               // Earliest bid timestamp (ISO 8601)
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *MevBlock) Reset() {
	*x = MevBlock{}
	mi := &file_pkg_api_v1_proto_public_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MevBlock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MevBlock) ProtoMessage() {}

func (x *MevBlock) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_v1_proto_public_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MevBlock.ProtoReflect.Descriptor instead.
func (*MevBlock) Descriptor() ([]byte, []int) {
	return file_pkg_api_v1_proto_public_proto_rawDescGZIP(), []int{21}
}

func (x *MevBlock) GetBlockRoot() string {
	if x != nil {
		return x.BlockRoot
	}
	return ""
}

func (x *MevBlock) GetBlockHash() string {
	if x != nil {
		return x.BlockHash
	}
	return ""
}

func (x *MevBlock) GetBlockNumber() uint64 {
	if x != nil {
		return x.BlockNumber
	}
	return 0
}

func (x *MevBlock) GetParentHash() string {
	if x != nil {
		return x.ParentHash
	}
	return ""
}

func (x *MevBlock) GetBuilderPubkey() string {
	if x != nil {
		return x.BuilderPubkey
	}
	return ""
}

func (x *MevBlock) GetProposerPubkey() string {
	if x != nil {
		return x.ProposerPubkey
	}
	return ""
}

func (x *MevBlock) GetProposerFeeRecipient() string {
	if x != nil {
		return x.ProposerFeeRecipient
	}
	return ""
}

func (x *MevBlock) GetGasLimit() uint64 {
	if x != nil {
		return x.GasLimit
	}
	return 0
}

func (x *MevBlock) GetGasUsed() uint64 {
	if x != nil {
		return x.GasUsed
	}
	return 0
}

func (x *MevBlock) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *MevBlock) GetTransactionCount() uint32 {
	if x != nil {
		return x.TransactionCount
	}
	return 0
}

func (x *MevBlock) GetRelayNames() []string {
	if x != nil {
		return x.RelayNames
	}
	return nil
}

func (x *MevBlock) GetEarliestBidTime() string {
	if x != nil {
		return x.EarliestBidTime
	}
	return ""
}

// ListBeaconSlotMevBuilderResponse is the v1 API response for highest MEV builder bids by slot.
type ListBeaconSlotMevBuilderResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Builders      []*MevBuilderBid       `protobuf:"bytes,1,rep,name=builders,proto3" json:"builders,omitempty"`
	Pagination    *PaginationMetadata    `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	Filters       *FilterMetadata        `protobuf:"bytes,3,opt,name=filters,proto3" json:"filters,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListBeaconSlotMevBuilderResponse) Reset() {
	*x = ListBeaconSlotMevBuilderResponse{}
	mi := &file_pkg_api_v1_proto_public_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListBeaconSlotMevBuilderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBeaconSlotMevBuilderResponse) ProtoMessage() {}

func (x *ListBeaconSlotMevBuilderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_v1_proto_public_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBeaconSlotMevBuilderResponse.ProtoReflect.Descriptor instead.
func (*ListBeaconSlotMevBuilderResponse) Descriptor() ([]byte, []int) {
	return file_pkg_api_v1_proto_public_proto_rawDescGZIP(), []int{22}
}

func (x *ListBeaconSlotMevBuilderResponse) GetBuilders() []*MevBuilderBid {
	if x != nil {
		return x.Builders
	}
	return nil
}

func (x *ListBeaconSlotMevBuilderResponse) GetPagination() *PaginationMetadata {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *ListBeaconSlotMevBuilderResponse) GetFilters() *FilterMetadata {
	if x != nil {
		return x.Filters
	}
	return nil
}

// MevBuilderBid represents the highest MEV bid from a builder for a slot for public API consumption.
type MevBuilderBid struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BlockHash     string                 `protobuf:"bytes,1,opt,name=block_hash,json=blockHash,proto3" json:"block_hash,omitempty"`    // Execution block hash
	Value         string                 `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`                             // Bid value in wei
	RelayNames    []string               `protobuf:"bytes,3,rep,name=relay_names,json=relayNames,proto3" json:"relay_names,omitempty"` // Relays that received the bid
	BuilderPubkey string                 `protobuf:"bytes,4,opt,name=builder_pubkey,json=builderPubkey,proto3" json:"builder_pubkey,omitempty"`
	ChunkStartMs  int32                  `protobuf:"varint,5,opt,name=chunk_start_ms,json=chunkStartMs,proto3" json:"chunk_start_ms,omitempty"` // 50ms chunk start time from slot start (e.g., 1500 for 1500-1550ms chunk)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MevBuilderBid) Reset() {
	*x = MevBuilderBid{}
	mi := &file_pkg_api_v1_proto_public_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MevBuilderBid) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MevBuilderBid) ProtoMessage() {}

func (x *MevBuilderBid) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_v1_proto_public_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MevBuilderBid.ProtoReflect.Descriptor instead.
func (*MevBuilderBid) Descriptor() ([]byte, []int) {
	return file_pkg_api_v1_proto_public_proto_rawDescGZIP(), []int{23}
}

func (x *MevBuilderBid) GetBlockHash() string {
	if x != nil {
		return x.BlockHash
	}
	return ""
}

func (x *MevBuilderBid) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *MevBuilderBid) GetRelayNames() []string {
	if x != nil {
		return x.RelayNames
	}
	return nil
}

func (x *MevBuilderBid) GetBuilderPubkey() string {
	if x != nil {
		return x.BuilderPubkey
	}
	return ""
}

func (x *MevBuilderBid) GetChunkStartMs() int32 {
	if x != nil {
		return x.ChunkStartMs
	}
	return 0
}

// Error response.
type ErrorResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Error         string                 `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Code          int32                  `protobuf:"varint,3,opt,name=code,proto3" json:"code,omitempty"`
	RequestId     string                 `protobuf:"bytes,4,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ErrorResponse) Reset() {
	*x = ErrorResponse{}
	mi := &file_pkg_api_v1_proto_public_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ErrorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorResponse) ProtoMessage() {}

func (x *ErrorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_v1_proto_public_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorResponse.ProtoReflect.Descriptor instead.
func (*ErrorResponse) Descriptor() ([]byte, []int) {
	return file_pkg_api_v1_proto_public_proto_rawDescGZIP(), []int{24}
}

func (x *ErrorResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *ErrorResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ErrorResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ErrorResponse) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

// GetConfigResponse is the v1 API response for getting the complete lab configuration.
type GetConfigResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Config        *FrontendConfig        `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetConfigResponse) Reset() {
	*x = GetConfigResponse{}
	mi := &file_pkg_api_v1_proto_public_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConfigResponse) ProtoMessage() {}

func (x *GetConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_v1_proto_public_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConfigResponse.ProtoReflect.Descriptor instead.
func (*GetConfigResponse) Descriptor() ([]byte, []int) {
	return file_pkg_api_v1_proto_public_proto_rawDescGZIP(), []int{25}
}

func (x *GetConfigResponse) GetConfig() *FrontendConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

// FrontendConfig represents the complete frontend configuration for public API consumption.
type FrontendConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ethereum      *EthereumConfig        `protobuf:"bytes,1,opt,name=ethereum,proto3" json:"ethereum,omitempty"`
	Experiments   []*ExperimentConfig    `protobuf:"bytes,2,rep,name=experiments,proto3" json:"experiments,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FrontendConfig) Reset() {
	*x = FrontendConfig{}
	mi := &file_pkg_api_v1_proto_public_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FrontendConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrontendConfig) ProtoMessage() {}

func (x *FrontendConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_v1_proto_public_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrontendConfig.ProtoReflect.Descriptor instead.
func (*FrontendConfig) Descriptor() ([]byte, []int) {
	return file_pkg_api_v1_proto_public_proto_rawDescGZIP(), []int{26}
}

func (x *FrontendConfig) GetEthereum() *EthereumConfig {
	if x != nil {
		return x.Ethereum
	}
	return nil
}

func (x *FrontendConfig) GetExperiments() []*ExperimentConfig {
	if x != nil {
		return x.Experiments
	}
	return nil
}

// EthereumConfig contains Ethereum-related configuration for public API consumption.
type EthereumConfig struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	Networks      map[string]*NetworkConfig `protobuf:"bytes,1,rep,name=networks,proto3" json:"networks,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EthereumConfig) Reset() {
	*x = EthereumConfig{}
	mi := &file_pkg_api_v1_proto_public_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EthereumConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EthereumConfig) ProtoMessage() {}

func (x *EthereumConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_v1_proto_public_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EthereumConfig.ProtoReflect.Descriptor instead.
func (*EthereumConfig) Descriptor() ([]byte, []int) {
	return file_pkg_api_v1_proto_public_proto_rawDescGZIP(), []int{27}
}

func (x *EthereumConfig) GetNetworks() map[string]*NetworkConfig {
	if x != nil {
		return x.Networks
	}
	return nil
}

// NetworkConfig represents configuration for a single network for public API consumption.
type NetworkConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Status        string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	ChainId       int64                  `protobuf:"varint,3,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	Description   string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	GenesisTime   int64                  `protobuf:"varint,5,opt,name=genesis_time,json=genesisTime,proto3" json:"genesis_time,omitempty"`
	Forks         *ForkConfig            `protobuf:"bytes,6,opt,name=forks,proto3" json:"forks,omitempty"`
	LastUpdated   string                 `protobuf:"bytes,7,opt,name=last_updated,json=lastUpdated,proto3" json:"last_updated,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NetworkConfig) Reset() {
	*x = NetworkConfig{}
	mi := &file_pkg_api_v1_proto_public_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkConfig) ProtoMessage() {}

func (x *NetworkConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_v1_proto_public_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkConfig.ProtoReflect.Descriptor instead.
func (*NetworkConfig) Descriptor() ([]byte, []int) {
	return file_pkg_api_v1_proto_public_proto_rawDescGZIP(), []int{28}
}

func (x *NetworkConfig) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NetworkConfig) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *NetworkConfig) GetChainId() int64 {
	if x != nil {
		return x.ChainId
	}
	return 0
}

func (x *NetworkConfig) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *NetworkConfig) GetGenesisTime() int64 {
	if x != nil {
		return x.GenesisTime
	}
	return 0
}

func (x *NetworkConfig) GetForks() *ForkConfig {
	if x != nil {
		return x.Forks
	}
	return nil
}

func (x *NetworkConfig) GetLastUpdated() string {
	if x != nil {
		return x.LastUpdated
	}
	return ""
}

// ForkConfig contains fork information for public API consumption.
type ForkConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Consensus     *ConsensusForks        `protobuf:"bytes,1,opt,name=consensus,proto3" json:"consensus,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ForkConfig) Reset() {
	*x = ForkConfig{}
	mi := &file_pkg_api_v1_proto_public_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ForkConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForkConfig) ProtoMessage() {}

func (x *ForkConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_v1_proto_public_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForkConfig.ProtoReflect.Descriptor instead.
func (*ForkConfig) Descriptor() ([]byte, []int) {
	return file_pkg_api_v1_proto_public_proto_rawDescGZIP(), []int{29}
}

func (x *ForkConfig) GetConsensus() *ConsensusForks {
	if x != nil {
		return x.Consensus
	}
	return nil
}

// ConsensusForks contains consensus layer fork information for public API consumption.
type ConsensusForks struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Electra       *ForkInfo              `protobuf:"bytes,1,opt,name=electra,proto3" json:"electra,omitempty"`
	Fusaka        *ForkInfo              `protobuf:"bytes,2,opt,name=fusaka,proto3" json:"fusaka,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConsensusForks) Reset() {
	*x = ConsensusForks{}
	mi := &file_pkg_api_v1_proto_public_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConsensusForks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConsensusForks) ProtoMessage() {}

func (x *ConsensusForks) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_v1_proto_public_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConsensusForks.ProtoReflect.Descriptor instead.
func (*ConsensusForks) Descriptor() ([]byte, []int) {
	return file_pkg_api_v1_proto_public_proto_rawDescGZIP(), []int{30}
}

func (x *ConsensusForks) GetElectra() *ForkInfo {
	if x != nil {
		return x.Electra
	}
	return nil
}

func (x *ConsensusForks) GetFusaka() *ForkInfo {
	if x != nil {
		return x.Fusaka
	}
	return nil
}

// ForkInfo contains information about a specific fork for public API consumption.
type ForkInfo struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Epoch             int64                  `protobuf:"varint,1,opt,name=epoch,proto3" json:"epoch,omitempty"`
	MinClientVersions map[string]string      `protobuf:"bytes,2,rep,name=min_client_versions,json=minClientVersions,proto3" json:"min_client_versions,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ForkInfo) Reset() {
	*x = ForkInfo{}
	mi := &file_pkg_api_v1_proto_public_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ForkInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForkInfo) ProtoMessage() {}

func (x *ForkInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_v1_proto_public_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForkInfo.ProtoReflect.Descriptor instead.
func (*ForkInfo) Descriptor() ([]byte, []int) {
	return file_pkg_api_v1_proto_public_proto_rawDescGZIP(), []int{31}
}

func (x *ForkInfo) GetEpoch() int64 {
	if x != nil {
		return x.Epoch
	}
	return 0
}

func (x *ForkInfo) GetMinClientVersions() map[string]string {
	if x != nil {
		return x.MinClientVersions
	}
	return nil
}

// ExperimentsConfig contains all experiments configuration for public API consumption.
type ExperimentsConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Experiments   []*ExperimentConfig    `protobuf:"bytes,1,rep,name=experiments,proto3" json:"experiments,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExperimentsConfig) Reset() {
	*x = ExperimentsConfig{}
	mi := &file_pkg_api_v1_proto_public_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExperimentsConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExperimentsConfig) ProtoMessage() {}

func (x *ExperimentsConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_v1_proto_public_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExperimentsConfig.ProtoReflect.Descriptor instead.
func (*ExperimentsConfig) Descriptor() ([]byte, []int) {
	return file_pkg_api_v1_proto_public_proto_rawDescGZIP(), []int{32}
}

func (x *ExperimentsConfig) GetExperiments() []*ExperimentConfig {
	if x != nil {
		return x.Experiments
	}
	return nil
}

// ExperimentConfig represents a single experiment for public API consumption.
type ExperimentConfig struct {
	state            protoimpl.MessageState                 `protogen:"open.v1"`
	Id               string                                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Enabled          bool                                   `protobuf:"varint,2,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Networks         []string                               `protobuf:"bytes,3,rep,name=networks,proto3" json:"networks,omitempty"`
	Config           *structpb.Struct                       `protobuf:"bytes,4,opt,name=config,proto3" json:"config,omitempty"`
	DataAvailability map[string]*ExperimentDataAvailability `protobuf:"bytes,5,rep,name=data_availability,json=dataAvailability,proto3" json:"data_availability,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ExperimentConfig) Reset() {
	*x = ExperimentConfig{}
	mi := &file_pkg_api_v1_proto_public_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExperimentConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExperimentConfig) ProtoMessage() {}

func (x *ExperimentConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_v1_proto_public_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExperimentConfig.ProtoReflect.Descriptor instead.
func (*ExperimentConfig) Descriptor() ([]byte, []int) {
	return file_pkg_api_v1_proto_public_proto_rawDescGZIP(), []int{33}
}

func (x *ExperimentConfig) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ExperimentConfig) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *ExperimentConfig) GetNetworks() []string {
	if x != nil {
		return x.Networks
	}
	return nil
}

func (x *ExperimentConfig) GetConfig() *structpb.Struct {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *ExperimentConfig) GetDataAvailability() map[string]*ExperimentDataAvailability {
	if x != nil {
		return x.DataAvailability
	}
	return nil
}

// ExperimentDataAvailability contains data availability information for an experiment on a specific network.
type ExperimentDataAvailability struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MinSlot       uint64                 `protobuf:"varint,1,opt,name=min_slot,json=minSlot,proto3" json:"min_slot,omitempty"`
	MaxSlot       uint64                 `protobuf:"varint,2,opt,name=max_slot,json=maxSlot,proto3" json:"max_slot,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExperimentDataAvailability) Reset() {
	*x = ExperimentDataAvailability{}
	mi := &file_pkg_api_v1_proto_public_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExperimentDataAvailability) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExperimentDataAvailability) ProtoMessage() {}

func (x *ExperimentDataAvailability) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_v1_proto_public_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExperimentDataAvailability.ProtoReflect.Descriptor instead.
func (*ExperimentDataAvailability) Descriptor() ([]byte, []int) {
	return file_pkg_api_v1_proto_public_proto_rawDescGZIP(), []int{34}
}

func (x *ExperimentDataAvailability) GetMinSlot() uint64 {
	if x != nil {
		return x.MinSlot
	}
	return 0
}

func (x *ExperimentDataAvailability) GetMaxSlot() uint64 {
	if x != nil {
		return x.MaxSlot
	}
	return 0
}

// GetExperimentConfigRequest defines the request for getting a single experiment's configuration.
type GetExperimentConfigRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ExperimentId  string                 `protobuf:"bytes,1,opt,name=experiment_id,json=experimentId,proto3" json:"experiment_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetExperimentConfigRequest) Reset() {
	*x = GetExperimentConfigRequest{}
	mi := &file_pkg_api_v1_proto_public_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetExperimentConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExperimentConfigRequest) ProtoMessage() {}

func (x *GetExperimentConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_v1_proto_public_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExperimentConfigRequest.ProtoReflect.Descriptor instead.
func (*GetExperimentConfigRequest) Descriptor() ([]byte, []int) {
	return file_pkg_api_v1_proto_public_proto_rawDescGZIP(), []int{35}
}

func (x *GetExperimentConfigRequest) GetExperimentId() string {
	if x != nil {
		return x.ExperimentId
	}
	return ""
}

// GetExperimentConfigResponse returns a single experiment's full configuration with data availability.
type GetExperimentConfigResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Experiment    *ExperimentConfig      `protobuf:"bytes,1,opt,name=experiment,proto3" json:"experiment,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetExperimentConfigResponse) Reset() {
	*x = GetExperimentConfigResponse{}
	mi := &file_pkg_api_v1_proto_public_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetExperimentConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExperimentConfigResponse) ProtoMessage() {}

func (x *GetExperimentConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_v1_proto_public_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExperimentConfigResponse.ProtoReflect.Descriptor instead.
func (*GetExperimentConfigResponse) Descriptor() ([]byte, []int) {
	return file_pkg_api_v1_proto_public_proto_rawDescGZIP(), []int{36}
}

func (x *GetExperimentConfigResponse) GetExperiment() *ExperimentConfig {
	if x != nil {
		return x.Experiment
	}
	return nil
}

// ListBeaconSlotBlockTimingResponse is the v1 API response for block timing data.
type ListBeaconSlotBlockTimingResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Nodes         []*BlockTimingNode     `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
	Pagination    *PaginationMetadata    `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	Filters       *FilterMetadata        `protobuf:"bytes,3,opt,name=filters,proto3" json:"filters,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListBeaconSlotBlockTimingResponse) Reset() {
	*x = ListBeaconSlotBlockTimingResponse{}
	mi := &file_pkg_api_v1_proto_public_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListBeaconSlotBlockTimingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBeaconSlotBlockTimingResponse) ProtoMessage() {}

func (x *ListBeaconSlotBlockTimingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_v1_proto_public_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBeaconSlotBlockTimingResponse.ProtoReflect.Descriptor instead.
func (*ListBeaconSlotBlockTimingResponse) Descriptor() ([]byte, []int) {
	return file_pkg_api_v1_proto_public_proto_rawDescGZIP(), []int{37}
}

func (x *ListBeaconSlotBlockTimingResponse) GetNodes() []*BlockTimingNode {
	if x != nil {
		return x.Nodes
	}
	return nil
}

func (x *ListBeaconSlotBlockTimingResponse) GetPagination() *PaginationMetadata {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *ListBeaconSlotBlockTimingResponse) GetFilters() *FilterMetadata {
	if x != nil {
		return x.Filters
	}
	return nil
}

// BlockTimingNode represents a node that observed a block.
type BlockTimingNode struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	NodeId            string                 `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Username          string                 `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	SeenSlotStartDiff uint32                 `protobuf:"varint,3,opt,name=seen_slot_start_diff,json=seenSlotStartDiff,proto3" json:"seen_slot_start_diff,omitempty"` // milliseconds from slot start
	Geo               *GeoInfo               `protobuf:"bytes,4,opt,name=geo,proto3" json:"geo,omitempty"`                                                           // reuse existing GeoInfo type
	Client            *ClientInfo            `protobuf:"bytes,5,opt,name=client,proto3" json:"client,omitempty"`                                                     // reuse existing ClientInfo type
	Source            string                 `protobuf:"bytes,6,opt,name=source,proto3" json:"source,omitempty"`                                                     // source of the event (e.g., "xatu-sentry")
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *BlockTimingNode) Reset() {
	*x = BlockTimingNode{}
	mi := &file_pkg_api_v1_proto_public_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BlockTimingNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockTimingNode) ProtoMessage() {}

func (x *BlockTimingNode) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_v1_proto_public_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockTimingNode.ProtoReflect.Descriptor instead.
func (*BlockTimingNode) Descriptor() ([]byte, []int) {
	return file_pkg_api_v1_proto_public_proto_rawDescGZIP(), []int{38}
}

func (x *BlockTimingNode) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *BlockTimingNode) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *BlockTimingNode) GetSeenSlotStartDiff() uint32 {
	if x != nil {
		return x.SeenSlotStartDiff
	}
	return 0
}

func (x *BlockTimingNode) GetGeo() *GeoInfo {
	if x != nil {
		return x.Geo
	}
	return nil
}

func (x *BlockTimingNode) GetClient() *ClientInfo {
	if x != nil {
		return x.Client
	}
	return nil
}

func (x *BlockTimingNode) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

// ListBeaconSlotBlobTimingResponse is the v1 API response for blob timing data.
type ListBeaconSlotBlobTimingResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Nodes         []*BlobTimingNode      `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
	Pagination    *PaginationMetadata    `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	Filters       *FilterMetadata        `protobuf:"bytes,3,opt,name=filters,proto3" json:"filters,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListBeaconSlotBlobTimingResponse) Reset() {
	*x = ListBeaconSlotBlobTimingResponse{}
	mi := &file_pkg_api_v1_proto_public_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListBeaconSlotBlobTimingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBeaconSlotBlobTimingResponse) ProtoMessage() {}

func (x *ListBeaconSlotBlobTimingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_v1_proto_public_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBeaconSlotBlobTimingResponse.ProtoReflect.Descriptor instead.
func (*ListBeaconSlotBlobTimingResponse) Descriptor() ([]byte, []int) {
	return file_pkg_api_v1_proto_public_proto_rawDescGZIP(), []int{39}
}

func (x *ListBeaconSlotBlobTimingResponse) GetNodes() []*BlobTimingNode {
	if x != nil {
		return x.Nodes
	}
	return nil
}

func (x *ListBeaconSlotBlobTimingResponse) GetPagination() *PaginationMetadata {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *ListBeaconSlotBlobTimingResponse) GetFilters() *FilterMetadata {
	if x != nil {
		return x.Filters
	}
	return nil
}

// BlobTimingNode represents a node that observed a blob.
type BlobTimingNode struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	NodeId            string                 `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Username          string                 `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	SeenSlotStartDiff uint32                 `protobuf:"varint,3,opt,name=seen_slot_start_diff,json=seenSlotStartDiff,proto3" json:"seen_slot_start_diff,omitempty"` // milliseconds from slot start
	BlobIndex         uint32                 `protobuf:"varint,4,opt,name=blob_index,json=blobIndex,proto3" json:"blob_index,omitempty"`                             // blob index within the block
	BlockRoot         string                 `protobuf:"bytes,5,opt,name=block_root,json=blockRoot,proto3" json:"block_root,omitempty"`                              // beacon block root hash
	Geo               *GeoInfo               `protobuf:"bytes,6,opt,name=geo,proto3" json:"geo,omitempty"`                                                           // reuse existing GeoInfo type
	Client            *ClientInfo            `protobuf:"bytes,7,opt,name=client,proto3" json:"client,omitempty"`                                                     // reuse existing ClientInfo type
	Source            string                 `protobuf:"bytes,8,opt,name=source,proto3" json:"source,omitempty"`                                                     // source of the event (e.g., "xatu-sentry")
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *BlobTimingNode) Reset() {
	*x = BlobTimingNode{}
	mi := &file_pkg_api_v1_proto_public_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BlobTimingNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlobTimingNode) ProtoMessage() {}

func (x *BlobTimingNode) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_v1_proto_public_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlobTimingNode.ProtoReflect.Descriptor instead.
func (*BlobTimingNode) Descriptor() ([]byte, []int) {
	return file_pkg_api_v1_proto_public_proto_rawDescGZIP(), []int{40}
}

func (x *BlobTimingNode) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *BlobTimingNode) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *BlobTimingNode) GetSeenSlotStartDiff() uint32 {
	if x != nil {
		return x.SeenSlotStartDiff
	}
	return 0
}

func (x *BlobTimingNode) GetBlobIndex() uint32 {
	if x != nil {
		return x.BlobIndex
	}
	return 0
}

func (x *BlobTimingNode) GetBlockRoot() string {
	if x != nil {
		return x.BlockRoot
	}
	return ""
}

func (x *BlobTimingNode) GetGeo() *GeoInfo {
	if x != nil {
		return x.Geo
	}
	return nil
}

func (x *BlobTimingNode) GetClient() *ClientInfo {
	if x != nil {
		return x.Client
	}
	return nil
}

func (x *BlobTimingNode) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

// ListBeaconSlotAttestationTimingResponse is the v1 API response for attestation timing data.
type ListBeaconSlotAttestationTimingResponse struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	Chunks        []*AttestationTimingChunk `protobuf:"bytes,1,rep,name=chunks,proto3" json:"chunks,omitempty"`
	Pagination    *PaginationMetadata       `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	Filters       *FilterMetadata           `protobuf:"bytes,3,opt,name=filters,proto3" json:"filters,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListBeaconSlotAttestationTimingResponse) Reset() {
	*x = ListBeaconSlotAttestationTimingResponse{}
	mi := &file_pkg_api_v1_proto_public_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListBeaconSlotAttestationTimingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBeaconSlotAttestationTimingResponse) ProtoMessage() {}

func (x *ListBeaconSlotAttestationTimingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_v1_proto_public_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBeaconSlotAttestationTimingResponse.ProtoReflect.Descriptor instead.
func (*ListBeaconSlotAttestationTimingResponse) Descriptor() ([]byte, []int) {
	return file_pkg_api_v1_proto_public_proto_rawDescGZIP(), []int{41}
}

func (x *ListBeaconSlotAttestationTimingResponse) GetChunks() []*AttestationTimingChunk {
	if x != nil {
		return x.Chunks
	}
	return nil
}

func (x *ListBeaconSlotAttestationTimingResponse) GetPagination() *PaginationMetadata {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *ListBeaconSlotAttestationTimingResponse) GetFilters() *FilterMetadata {
	if x != nil {
		return x.Filters
	}
	return nil
}

// AttestationTimingChunk represents attestation timing data in 50ms chunks.
type AttestationTimingChunk struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	BlockRoot        string                 `protobuf:"bytes,1,opt,name=block_root,json=blockRoot,proto3" json:"block_root,omitempty"`                       // beacon block root that was attested (empty if missed)
	ChunkStartMs     int64                  `protobuf:"varint,2,opt,name=chunk_start_ms,json=chunkStartMs,proto3" json:"chunk_start_ms,omitempty"`           // milliseconds from slot start (e.g., 1500 for 1500-1550ms chunk)
	AttestationCount uint32                 `protobuf:"varint,3,opt,name=attestation_count,json=attestationCount,proto3" json:"attestation_count,omitempty"` // number of attestations in this chunk
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *AttestationTimingChunk) Reset() {
	*x = AttestationTimingChunk{}
	mi := &file_pkg_api_v1_proto_public_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AttestationTimingChunk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttestationTimingChunk) ProtoMessage() {}

func (x *AttestationTimingChunk) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_v1_proto_public_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttestationTimingChunk.ProtoReflect.Descriptor instead.
func (*AttestationTimingChunk) Descriptor() ([]byte, []int) {
	return file_pkg_api_v1_proto_public_proto_rawDescGZIP(), []int{42}
}

func (x *AttestationTimingChunk) GetBlockRoot() string {
	if x != nil {
		return x.BlockRoot
	}
	return ""
}

func (x *AttestationTimingChunk) GetChunkStartMs() int64 {
	if x != nil {
		return x.ChunkStartMs
	}
	return 0
}

func (x *AttestationTimingChunk) GetAttestationCount() uint32 {
	if x != nil {
		return x.AttestationCount
	}
	return 0
}

// ListBeaconSlotAttestationCorrectnessResponse is the v1 API response for attestation correctness data for a single slot.
type ListBeaconSlotAttestationCorrectnessResponse struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	Blocks        []*AttestationCorrectness `protobuf:"bytes,1,rep,name=blocks,proto3" json:"blocks,omitempty"` // Attestation correctness for blocks in the slot (may include forks)
	Filters       *FilterMetadata           `protobuf:"bytes,2,opt,name=filters,proto3" json:"filters,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListBeaconSlotAttestationCorrectnessResponse) Reset() {
	*x = ListBeaconSlotAttestationCorrectnessResponse{}
	mi := &file_pkg_api_v1_proto_public_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListBeaconSlotAttestationCorrectnessResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBeaconSlotAttestationCorrectnessResponse) ProtoMessage() {}

func (x *ListBeaconSlotAttestationCorrectnessResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_v1_proto_public_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBeaconSlotAttestationCorrectnessResponse.ProtoReflect.Descriptor instead.
func (*ListBeaconSlotAttestationCorrectnessResponse) Descriptor() ([]byte, []int) {
	return file_pkg_api_v1_proto_public_proto_rawDescGZIP(), []int{43}
}

func (x *ListBeaconSlotAttestationCorrectnessResponse) GetBlocks() []*AttestationCorrectness {
	if x != nil {
		return x.Blocks
	}
	return nil
}

func (x *ListBeaconSlotAttestationCorrectnessResponse) GetFilters() *FilterMetadata {
	if x != nil {
		return x.Filters
	}
	return nil
}

// AttestationCorrectness represents attestation correctness data for a block in a slot.
type AttestationCorrectness struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	BlockRoot             string                 `protobuf:"bytes,1,opt,name=block_root,json=blockRoot,proto3" json:"block_root,omitempty"`                                       // The beacon block root hash (may be empty for missed blocks)
	VotesMax              uint32                 `protobuf:"varint,2,opt,name=votes_max,json=votesMax,proto3" json:"votes_max,omitempty"`                                         // Maximum possible attestations for this block
	VotesActual           uint32                 `protobuf:"varint,3,opt,name=votes_actual,json=votesActual,proto3" json:"votes_actual,omitempty"`                                // Actual attestations received for this block
	CorrectnessPercentage float32                `protobuf:"fixed32,4,opt,name=correctness_percentage,json=correctnessPercentage,proto3" json:"correctness_percentage,omitempty"` // Percentage of actual vs max votes
	VotesOther            uint32                 `protobuf:"varint,5,opt,name=votes_other,json=votesOther,proto3" json:"votes_other,omitempty"`                                   // Number of votes for alternative blocks
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *AttestationCorrectness) Reset() {
	*x = AttestationCorrectness{}
	mi := &file_pkg_api_v1_proto_public_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AttestationCorrectness) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttestationCorrectness) ProtoMessage() {}

func (x *AttestationCorrectness) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_v1_proto_public_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttestationCorrectness.ProtoReflect.Descriptor instead.
func (*AttestationCorrectness) Descriptor() ([]byte, []int) {
	return file_pkg_api_v1_proto_public_proto_rawDescGZIP(), []int{44}
}

func (x *AttestationCorrectness) GetBlockRoot() string {
	if x != nil {
		return x.BlockRoot
	}
	return ""
}

func (x *AttestationCorrectness) GetVotesMax() uint32 {
	if x != nil {
		return x.VotesMax
	}
	return 0
}

func (x *AttestationCorrectness) GetVotesActual() uint32 {
	if x != nil {
		return x.VotesActual
	}
	return 0
}

func (x *AttestationCorrectness) GetCorrectnessPercentage() float32 {
	if x != nil {
		return x.CorrectnessPercentage
	}
	return 0
}

func (x *AttestationCorrectness) GetVotesOther() uint32 {
	if x != nil {
		return x.VotesOther
	}
	return 0
}

// ListBeaconSlotBlobTotalResponse is the v1 API response for blob count data for a single slot.
type ListBeaconSlotBlobTotalResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Blocks        []*BlobTotal           `protobuf:"bytes,1,rep,name=blocks,proto3" json:"blocks,omitempty"` // Blob counts for blocks in the slot (may include forks)
	Filters       *FilterMetadata        `protobuf:"bytes,2,opt,name=filters,proto3" json:"filters,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListBeaconSlotBlobTotalResponse) Reset() {
	*x = ListBeaconSlotBlobTotalResponse{}
	mi := &file_pkg_api_v1_proto_public_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListBeaconSlotBlobTotalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBeaconSlotBlobTotalResponse) ProtoMessage() {}

func (x *ListBeaconSlotBlobTotalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_v1_proto_public_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBeaconSlotBlobTotalResponse.ProtoReflect.Descriptor instead.
func (*ListBeaconSlotBlobTotalResponse) Descriptor() ([]byte, []int) {
	return file_pkg_api_v1_proto_public_proto_rawDescGZIP(), []int{45}
}

func (x *ListBeaconSlotBlobTotalResponse) GetBlocks() []*BlobTotal {
	if x != nil {
		return x.Blocks
	}
	return nil
}

func (x *ListBeaconSlotBlobTotalResponse) GetFilters() *FilterMetadata {
	if x != nil {
		return x.Filters
	}
	return nil
}

// BlobTotal represents the total blob count for a block in the unfinalized chain.
type BlobTotal struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BlockRoot     string                 `protobuf:"bytes,1,opt,name=block_root,json=blockRoot,proto3" json:"block_root,omitempty"`  // The beacon block root hash
	BlobCount     uint32                 `protobuf:"varint,2,opt,name=blob_count,json=blobCount,proto3" json:"blob_count,omitempty"` // The number of blobs in this block
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BlobTotal) Reset() {
	*x = BlobTotal{}
	mi := &file_pkg_api_v1_proto_public_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BlobTotal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlobTotal) ProtoMessage() {}

func (x *BlobTotal) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_v1_proto_public_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlobTotal.ProtoReflect.Descriptor instead.
func (*BlobTotal) Descriptor() ([]byte, []int) {
	return file_pkg_api_v1_proto_public_proto_rawDescGZIP(), []int{46}
}

func (x *BlobTotal) GetBlockRoot() string {
	if x != nil {
		return x.BlockRoot
	}
	return ""
}

func (x *BlobTotal) GetBlobCount() uint32 {
	if x != nil {
		return x.BlobCount
	}
	return 0
}

// ListBeaconSlotBlockResponse is the v1 API response for beacon block data for a specific slot.
type ListBeaconSlotBlockResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Blocks        []*BeaconBlock         `protobuf:"bytes,1,rep,name=blocks,proto3" json:"blocks,omitempty"` // Block data for the slot (may include forks)
	Pagination    *PaginationMetadata    `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	Filters       *FilterMetadata        `protobuf:"bytes,3,opt,name=filters,proto3" json:"filters,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListBeaconSlotBlockResponse) Reset() {
	*x = ListBeaconSlotBlockResponse{}
	mi := &file_pkg_api_v1_proto_public_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListBeaconSlotBlockResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBeaconSlotBlockResponse) ProtoMessage() {}

func (x *ListBeaconSlotBlockResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_v1_proto_public_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBeaconSlotBlockResponse.ProtoReflect.Descriptor instead.
func (*ListBeaconSlotBlockResponse) Descriptor() ([]byte, []int) {
	return file_pkg_api_v1_proto_public_proto_rawDescGZIP(), []int{47}
}

func (x *ListBeaconSlotBlockResponse) GetBlocks() []*BeaconBlock {
	if x != nil {
		return x.Blocks
	}
	return nil
}

func (x *ListBeaconSlotBlockResponse) GetPagination() *PaginationMetadata {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *ListBeaconSlotBlockResponse) GetFilters() *FilterMetadata {
	if x != nil {
		return x.Filters
	}
	return nil
}

// BeaconBlock represents beacon block data from the unfinalized chain for public API consumption.
type BeaconBlock struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Core block identifiers
	BlockRoot  string `protobuf:"bytes,1,opt,name=block_root,json=blockRoot,proto3" json:"block_root,omitempty"`    // The root hash of the beacon block
	ParentRoot string `protobuf:"bytes,2,opt,name=parent_root,json=parentRoot,proto3" json:"parent_root,omitempty"` // The root hash of the parent block
	StateRoot  string `protobuf:"bytes,3,opt,name=state_root,json=stateRoot,proto3" json:"state_root,omitempty"`    // The root hash of the beacon state
	// Block metadata
	ProposerIndex             uint32 `protobuf:"varint,4,opt,name=proposer_index,json=proposerIndex,proto3" json:"proposer_index,omitempty"`                                         // Validator index who proposed the block
	BlockVersion              string `protobuf:"bytes,5,opt,name=block_version,json=blockVersion,proto3" json:"block_version,omitempty"`                                             // Block version (e.g., phase0, altair, bellatrix)
	BlockTotalBytes           uint32 `protobuf:"varint,6,opt,name=block_total_bytes,json=blockTotalBytes,proto3" json:"block_total_bytes,omitempty"`                                 // Total size of the block in bytes
	BlockTotalBytesCompressed uint32 `protobuf:"varint,7,opt,name=block_total_bytes_compressed,json=blockTotalBytesCompressed,proto3" json:"block_total_bytes_compressed,omitempty"` // Compressed size using snappy
	// Execution payload information
	ExecutionBlockHash         string `protobuf:"bytes,8,opt,name=execution_block_hash,json=executionBlockHash,proto3" json:"execution_block_hash,omitempty"`                           // Execution layer block hash
	ExecutionBlockNumber       uint32 `protobuf:"varint,9,opt,name=execution_block_number,json=executionBlockNumber,proto3" json:"execution_block_number,omitempty"`                    // Execution layer block number
	ExecutionFeeRecipient      string `protobuf:"bytes,10,opt,name=execution_fee_recipient,json=executionFeeRecipient,proto3" json:"execution_fee_recipient,omitempty"`                 // Address receiving execution fees
	ExecutionBaseFeePerGas     string `protobuf:"bytes,11,opt,name=execution_base_fee_per_gas,json=executionBaseFeePerGas,proto3" json:"execution_base_fee_per_gas,omitempty"`          // Base fee per gas
	ExecutionGasUsed           uint64 `protobuf:"varint,12,opt,name=execution_gas_used,json=executionGasUsed,proto3" json:"execution_gas_used,omitempty"`                               // Total gas used
	ExecutionGasLimit          uint64 `protobuf:"varint,13,opt,name=execution_gas_limit,json=executionGasLimit,proto3" json:"execution_gas_limit,omitempty"`                            // Gas limit for the block
	ExecutionBlobGasUsed       uint64 `protobuf:"varint,14,opt,name=execution_blob_gas_used,json=executionBlobGasUsed,proto3" json:"execution_blob_gas_used,omitempty"`                 // Blob gas used (EIP-4844)
	ExecutionExcessBlobGas     uint64 `protobuf:"varint,15,opt,name=execution_excess_blob_gas,json=executionExcessBlobGas,proto3" json:"execution_excess_blob_gas,omitempty"`           // Excess blob gas (EIP-4844)
	ExecutionStateRoot         string `protobuf:"bytes,16,opt,name=execution_state_root,json=executionStateRoot,proto3" json:"execution_state_root,omitempty"`                          // Execution layer state root
	ExecutionParentHash        string `protobuf:"bytes,17,opt,name=execution_parent_hash,json=executionParentHash,proto3" json:"execution_parent_hash,omitempty"`                       // Parent hash in execution layer
	ExecutionTransactionsCount uint32 `protobuf:"varint,18,opt,name=execution_transactions_count,json=executionTransactionsCount,proto3" json:"execution_transactions_count,omitempty"` // Number of transactions
	ExecutionTransactionsBytes uint32 `protobuf:"varint,19,opt,name=execution_transactions_bytes,json=executionTransactionsBytes,proto3" json:"execution_transactions_bytes,omitempty"` // Total transaction bytes
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *BeaconBlock) Reset() {
	*x = BeaconBlock{}
	mi := &file_pkg_api_v1_proto_public_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BeaconBlock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BeaconBlock) ProtoMessage() {}

func (x *BeaconBlock) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_v1_proto_public_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BeaconBlock.ProtoReflect.Descriptor instead.
func (*BeaconBlock) Descriptor() ([]byte, []int) {
	return file_pkg_api_v1_proto_public_proto_rawDescGZIP(), []int{48}
}

func (x *BeaconBlock) GetBlockRoot() string {
	if x != nil {
		return x.BlockRoot
	}
	return ""
}

func (x *BeaconBlock) GetParentRoot() string {
	if x != nil {
		return x.ParentRoot
	}
	return ""
}

func (x *BeaconBlock) GetStateRoot() string {
	if x != nil {
		return x.StateRoot
	}
	return ""
}

func (x *BeaconBlock) GetProposerIndex() uint32 {
	if x != nil {
		return x.ProposerIndex
	}
	return 0
}

func (x *BeaconBlock) GetBlockVersion() string {
	if x != nil {
		return x.BlockVersion
	}
	return ""
}

func (x *BeaconBlock) GetBlockTotalBytes() uint32 {
	if x != nil {
		return x.BlockTotalBytes
	}
	return 0
}

func (x *BeaconBlock) GetBlockTotalBytesCompressed() uint32 {
	if x != nil {
		return x.BlockTotalBytesCompressed
	}
	return 0
}

func (x *BeaconBlock) GetExecutionBlockHash() string {
	if x != nil {
		return x.ExecutionBlockHash
	}
	return ""
}

func (x *BeaconBlock) GetExecutionBlockNumber() uint32 {
	if x != nil {
		return x.ExecutionBlockNumber
	}
	return 0
}

func (x *BeaconBlock) GetExecutionFeeRecipient() string {
	if x != nil {
		return x.ExecutionFeeRecipient
	}
	return ""
}

func (x *BeaconBlock) GetExecutionBaseFeePerGas() string {
	if x != nil {
		return x.ExecutionBaseFeePerGas
	}
	return ""
}

func (x *BeaconBlock) GetExecutionGasUsed() uint64 {
	if x != nil {
		return x.ExecutionGasUsed
	}
	return 0
}

func (x *BeaconBlock) GetExecutionGasLimit() uint64 {
	if x != nil {
		return x.ExecutionGasLimit
	}
	return 0
}

func (x *BeaconBlock) GetExecutionBlobGasUsed() uint64 {
	if x != nil {
		return x.ExecutionBlobGasUsed
	}
	return 0
}

func (x *BeaconBlock) GetExecutionExcessBlobGas() uint64 {
	if x != nil {
		return x.ExecutionExcessBlobGas
	}
	return 0
}

func (x *BeaconBlock) GetExecutionStateRoot() string {
	if x != nil {
		return x.ExecutionStateRoot
	}
	return ""
}

func (x *BeaconBlock) GetExecutionParentHash() string {
	if x != nil {
		return x.ExecutionParentHash
	}
	return ""
}

func (x *BeaconBlock) GetExecutionTransactionsCount() uint32 {
	if x != nil {
		return x.ExecutionTransactionsCount
	}
	return 0
}

func (x *BeaconBlock) GetExecutionTransactionsBytes() uint32 {
	if x != nil {
		return x.ExecutionTransactionsBytes
	}
	return 0
}

// ListBeaconSlotProposerEntityResponse is the v1 API response for block proposer entity data for a specific slot.
type ListBeaconSlotProposerEntityResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Entities      []*ProposerEntity      `protobuf:"bytes,1,rep,name=entities,proto3" json:"entities,omitempty"` // Proposer entities for the slot (may include forks)
	Pagination    *PaginationMetadata    `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	Filters       *FilterMetadata        `protobuf:"bytes,3,opt,name=filters,proto3" json:"filters,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListBeaconSlotProposerEntityResponse) Reset() {
	*x = ListBeaconSlotProposerEntityResponse{}
	mi := &file_pkg_api_v1_proto_public_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListBeaconSlotProposerEntityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBeaconSlotProposerEntityResponse) ProtoMessage() {}

func (x *ListBeaconSlotProposerEntityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_v1_proto_public_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBeaconSlotProposerEntityResponse.ProtoReflect.Descriptor instead.
func (*ListBeaconSlotProposerEntityResponse) Descriptor() ([]byte, []int) {
	return file_pkg_api_v1_proto_public_proto_rawDescGZIP(), []int{49}
}

func (x *ListBeaconSlotProposerEntityResponse) GetEntities() []*ProposerEntity {
	if x != nil {
		return x.Entities
	}
	return nil
}

func (x *ListBeaconSlotProposerEntityResponse) GetPagination() *PaginationMetadata {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *ListBeaconSlotProposerEntityResponse) GetFilters() *FilterMetadata {
	if x != nil {
		return x.Filters
	}
	return nil
}

// ProposerEntity represents the entity that proposed a block in the unfinalized chain for public API consumption.
type ProposerEntity struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Entity information
	Entity        string `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity,omitempty"` // The entity that proposed the block (e.g., "Lido", "Coinbase")
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProposerEntity) Reset() {
	*x = ProposerEntity{}
	mi := &file_pkg_api_v1_proto_public_proto_msgTypes[50]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProposerEntity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProposerEntity) ProtoMessage() {}

func (x *ProposerEntity) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_v1_proto_public_proto_msgTypes[50]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProposerEntity.ProtoReflect.Descriptor instead.
func (*ProposerEntity) Descriptor() ([]byte, []int) {
	return file_pkg_api_v1_proto_public_proto_rawDescGZIP(), []int{50}
}

func (x *ProposerEntity) GetEntity() string {
	if x != nil {
		return x.Entity
	}
	return ""
}

// ListPreparedBlocksResponse is the v1 API response for listing prepared blocks.
type ListPreparedBlocksResponse struct {
	state          protoimpl.MessageState       `protogen:"open.v1"`
	PreparedBlocks []*PreparedBlock             `protobuf:"bytes,1,rep,name=prepared_blocks,json=preparedBlocks,proto3" json:"prepared_blocks,omitempty"`
	Pagination     *PaginationMetadata          `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	Filters        *PreparedBlockFilterMetadata `protobuf:"bytes,3,opt,name=filters,proto3" json:"filters,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ListPreparedBlocksResponse) Reset() {
	*x = ListPreparedBlocksResponse{}
	mi := &file_pkg_api_v1_proto_public_proto_msgTypes[51]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPreparedBlocksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPreparedBlocksResponse) ProtoMessage() {}

func (x *ListPreparedBlocksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_v1_proto_public_proto_msgTypes[51]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPreparedBlocksResponse.ProtoReflect.Descriptor instead.
func (*ListPreparedBlocksResponse) Descriptor() ([]byte, []int) {
	return file_pkg_api_v1_proto_public_proto_rawDescGZIP(), []int{51}
}

func (x *ListPreparedBlocksResponse) GetPreparedBlocks() []*PreparedBlock {
	if x != nil {
		return x.PreparedBlocks
	}
	return nil
}

func (x *ListPreparedBlocksResponse) GetPagination() *PaginationMetadata {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *ListPreparedBlocksResponse) GetFilters() *PreparedBlockFilterMetadata {
	if x != nil {
		return x.Filters
	}
	return nil
}

// PreparedBlock represents a transformed view of prepared block data for public consumption.
// This shows what would have been built if the validator had been selected as proposer.
type PreparedBlock struct {
	state            protoimpl.MessageState   `protogen:"open.v1"`
	Slot             uint32                   `protobuf:"varint,1,opt,name=slot,proto3" json:"slot,omitempty"`
	SlotStartTime    string                   `protobuf:"bytes,2,opt,name=slot_start_time,json=slotStartTime,proto3" json:"slot_start_time,omitempty"` // ISO 8601 formatted
	EventTime        string                   `protobuf:"bytes,3,opt,name=event_time,json=eventTime,proto3" json:"event_time,omitempty"`               // ISO 8601 formatted
	Client           *ClientInfo              `protobuf:"bytes,4,opt,name=client,proto3" json:"client,omitempty"`                                      // reuse existing ClientInfo type
	Consensus        *ConsensusInfo           `protobuf:"bytes,5,opt,name=consensus,proto3" json:"consensus,omitempty"`                                // reuse existing ConsensusInfo type
	Geo              *GeoInfo                 `protobuf:"bytes,6,opt,name=geo,proto3" json:"geo,omitempty"`                                            // reuse existing GeoInfo type
	BlockMetrics     *BlockMetrics            `protobuf:"bytes,7,opt,name=block_metrics,json=blockMetrics,proto3" json:"block_metrics,omitempty"`
	ExecutionMetrics *ExecutionPayloadMetrics `protobuf:"bytes,8,opt,name=execution_metrics,json=executionMetrics,proto3" json:"execution_metrics,omitempty"`
	LastUpdated      string                   `protobuf:"bytes,9,opt,name=last_updated,json=lastUpdated,proto3" json:"last_updated,omitempty"` // ISO 8601 formatted
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *PreparedBlock) Reset() {
	*x = PreparedBlock{}
	mi := &file_pkg_api_v1_proto_public_proto_msgTypes[52]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PreparedBlock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreparedBlock) ProtoMessage() {}

func (x *PreparedBlock) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_v1_proto_public_proto_msgTypes[52]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreparedBlock.ProtoReflect.Descriptor instead.
func (*PreparedBlock) Descriptor() ([]byte, []int) {
	return file_pkg_api_v1_proto_public_proto_rawDescGZIP(), []int{52}
}

func (x *PreparedBlock) GetSlot() uint32 {
	if x != nil {
		return x.Slot
	}
	return 0
}

func (x *PreparedBlock) GetSlotStartTime() string {
	if x != nil {
		return x.SlotStartTime
	}
	return ""
}

func (x *PreparedBlock) GetEventTime() string {
	if x != nil {
		return x.EventTime
	}
	return ""
}

func (x *PreparedBlock) GetClient() *ClientInfo {
	if x != nil {
		return x.Client
	}
	return nil
}

func (x *PreparedBlock) GetConsensus() *ConsensusInfo {
	if x != nil {
		return x.Consensus
	}
	return nil
}

func (x *PreparedBlock) GetGeo() *GeoInfo {
	if x != nil {
		return x.Geo
	}
	return nil
}

func (x *PreparedBlock) GetBlockMetrics() *BlockMetrics {
	if x != nil {
		return x.BlockMetrics
	}
	return nil
}

func (x *PreparedBlock) GetExecutionMetrics() *ExecutionPayloadMetrics {
	if x != nil {
		return x.ExecutionMetrics
	}
	return nil
}

func (x *PreparedBlock) GetLastUpdated() string {
	if x != nil {
		return x.LastUpdated
	}
	return ""
}

// BlockMetrics groups block-related metrics.
type BlockMetrics struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	Version              string                 `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	TotalBytes           uint32                 `protobuf:"varint,2,opt,name=total_bytes,json=totalBytes,proto3" json:"total_bytes,omitempty"`
	TotalBytesCompressed uint32                 `protobuf:"varint,3,opt,name=total_bytes_compressed,json=totalBytesCompressed,proto3" json:"total_bytes_compressed,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *BlockMetrics) Reset() {
	*x = BlockMetrics{}
	mi := &file_pkg_api_v1_proto_public_proto_msgTypes[53]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BlockMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockMetrics) ProtoMessage() {}

func (x *BlockMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_v1_proto_public_proto_msgTypes[53]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockMetrics.ProtoReflect.Descriptor instead.
func (*BlockMetrics) Descriptor() ([]byte, []int) {
	return file_pkg_api_v1_proto_public_proto_rawDescGZIP(), []int{53}
}

func (x *BlockMetrics) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *BlockMetrics) GetTotalBytes() uint32 {
	if x != nil {
		return x.TotalBytes
	}
	return 0
}

func (x *BlockMetrics) GetTotalBytesCompressed() uint32 {
	if x != nil {
		return x.TotalBytesCompressed
	}
	return 0
}

// ExecutionPayloadMetrics groups execution payload metrics.
type ExecutionPayloadMetrics struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	ValueWei               uint64                 `protobuf:"varint,1,opt,name=value_wei,json=valueWei,proto3" json:"value_wei,omitempty"`
	ConsensusValueWei      uint64                 `protobuf:"varint,2,opt,name=consensus_value_wei,json=consensusValueWei,proto3" json:"consensus_value_wei,omitempty"`
	BlockNumber            uint32                 `protobuf:"varint,3,opt,name=block_number,json=blockNumber,proto3" json:"block_number,omitempty"`
	GasLimit               uint64                 `protobuf:"varint,4,opt,name=gas_limit,json=gasLimit,proto3" json:"gas_limit,omitempty"`
	GasUsed                uint64                 `protobuf:"varint,5,opt,name=gas_used,json=gasUsed,proto3" json:"gas_used,omitempty"`
	TransactionsCount      uint32                 `protobuf:"varint,6,opt,name=transactions_count,json=transactionsCount,proto3" json:"transactions_count,omitempty"`
	TransactionsTotalBytes uint32                 `protobuf:"varint,7,opt,name=transactions_total_bytes,json=transactionsTotalBytes,proto3" json:"transactions_total_bytes,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ExecutionPayloadMetrics) Reset() {
	*x = ExecutionPayloadMetrics{}
	mi := &file_pkg_api_v1_proto_public_proto_msgTypes[54]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecutionPayloadMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecutionPayloadMetrics) ProtoMessage() {}

func (x *ExecutionPayloadMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_v1_proto_public_proto_msgTypes[54]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecutionPayloadMetrics.ProtoReflect.Descriptor instead.
func (*ExecutionPayloadMetrics) Descriptor() ([]byte, []int) {
	return file_pkg_api_v1_proto_public_proto_rawDescGZIP(), []int{54}
}

func (x *ExecutionPayloadMetrics) GetValueWei() uint64 {
	if x != nil {
		return x.ValueWei
	}
	return 0
}

func (x *ExecutionPayloadMetrics) GetConsensusValueWei() uint64 {
	if x != nil {
		return x.ConsensusValueWei
	}
	return 0
}

func (x *ExecutionPayloadMetrics) GetBlockNumber() uint32 {
	if x != nil {
		return x.BlockNumber
	}
	return 0
}

func (x *ExecutionPayloadMetrics) GetGasLimit() uint64 {
	if x != nil {
		return x.GasLimit
	}
	return 0
}

func (x *ExecutionPayloadMetrics) GetGasUsed() uint64 {
	if x != nil {
		return x.GasUsed
	}
	return 0
}

func (x *ExecutionPayloadMetrics) GetTransactionsCount() uint32 {
	if x != nil {
		return x.TransactionsCount
	}
	return 0
}

func (x *ExecutionPayloadMetrics) GetTransactionsTotalBytes() uint32 {
	if x != nil {
		return x.TransactionsTotalBytes
	}
	return 0
}

// PreparedBlockFilterMetadata shows filtering information for prepared block queries.
type PreparedBlockFilterMetadata struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Network        string                 `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`
	Slot           uint32                 `protobuf:"varint,2,opt,name=slot,proto3" json:"slot,omitempty"`
	ClientName     string                 `protobuf:"bytes,3,opt,name=client_name,json=clientName,proto3" json:"client_name,omitempty"`
	AppliedFilters map[string]string      `protobuf:"bytes,4,rep,name=applied_filters,json=appliedFilters,proto3" json:"applied_filters,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // All filters including time filters
	OrderBy        string                 `protobuf:"bytes,5,opt,name=order_by,json=orderBy,proto3" json:"order_by,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *PreparedBlockFilterMetadata) Reset() {
	*x = PreparedBlockFilterMetadata{}
	mi := &file_pkg_api_v1_proto_public_proto_msgTypes[55]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PreparedBlockFilterMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreparedBlockFilterMetadata) ProtoMessage() {}

func (x *PreparedBlockFilterMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_v1_proto_public_proto_msgTypes[55]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreparedBlockFilterMetadata.ProtoReflect.Descriptor instead.
func (*PreparedBlockFilterMetadata) Descriptor() ([]byte, []int) {
	return file_pkg_api_v1_proto_public_proto_rawDescGZIP(), []int{55}
}

func (x *PreparedBlockFilterMetadata) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *PreparedBlockFilterMetadata) GetSlot() uint32 {
	if x != nil {
		return x.Slot
	}
	return 0
}

func (x *PreparedBlockFilterMetadata) GetClientName() string {
	if x != nil {
		return x.ClientName
	}
	return ""
}

func (x *PreparedBlockFilterMetadata) GetAppliedFilters() map[string]string {
	if x != nil {
		return x.AppliedFilters
	}
	return nil
}

func (x *PreparedBlockFilterMetadata) GetOrderBy() string {
	if x != nil {
		return x.OrderBy
	}
	return ""
}

var File_pkg_api_v1_proto_public_proto protoreflect.FileDescriptor

const file_pkg_api_v1_proto_public_proto_rawDesc = "" +
	"\n" +
	"\x1dpkg/api/v1/proto/public.proto\x12\x06api.v1\x1a\x1cgoogle/protobuf/struct.proto\"\xa5\x01\n" +
	"\x11ListNodesResponse\x12\"\n" +
	"\x05nodes\x18\x01 \x03(\v2\f.api.v1.NodeR\x05nodes\x12:\n" +
	"\n" +
	"pagination\x18\x02 \x01(\v2\x1a.api.v1.PaginationMetadataR\n" +
	"pagination\x120\n" +
	"\afilters\x18\x03 \x01(\v2\x16.api.v1.FilterMetadataR\afilters\"|\n" +
	"\x14ListNetworksResponse\x12+\n" +
	"\bnetworks\x18\x01 \x03(\v2\x0f.api.v1.NetworkR\bnetworks\x127\n" +
	"\afilters\x18\x02 \x01(\v2\x1d.api.v1.NetworkFilterMetadataR\afilters\"\x84\x02\n" +
	"\x04Node\x12\x1a\n" +
	"\busername\x18\x01 \x01(\tR\busername\x12\x17\n" +
	"\anode_id\x18\x02 \x01(\tR\x06nodeId\x12&\n" +
	"\x0eclassification\x18\x03 \x01(\tR\x0eclassification\x12*\n" +
	"\x06client\x18\x04 \x01(\v2\x12.api.v1.ClientInfoR\x06client\x12!\n" +
	"\x03geo\x18\x05 \x01(\v2\x0f.api.v1.GeoInfoR\x03geo\x123\n" +
	"\tconsensus\x18\x06 \x01(\v2\x15.api.v1.ConsensusInfoR\tconsensus\x12\x1b\n" +
	"\tlast_seen\x18\a \x01(\tR\blastSeen\"b\n" +
	"\n" +
	"ClientInfo\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x18\n" +
	"\aversion\x18\x02 \x01(\tR\aversion\x12&\n" +
	"\x0eimplementation\x18\x03 \x01(\tR\x0eimplementation\"\xe0\x01\n" +
	"\aGeoInfo\x12\x12\n" +
	"\x04city\x18\x01 \x01(\tR\x04city\x12\x18\n" +
	"\acountry\x18\x02 \x01(\tR\acountry\x12!\n" +
	"\fcountry_code\x18\x03 \x01(\tR\vcountryCode\x12%\n" +
	"\x0econtinent_code\x18\x04 \x01(\tR\rcontinentCode\x12\x1f\n" +
	"\blatitude\x18\x05 \x01(\x01H\x00R\blatitude\x88\x01\x01\x12!\n" +
	"\tlongitude\x18\x06 \x01(\x01H\x01R\tlongitude\x88\x01\x01B\v\n" +
	"\t_latitudeB\f\n" +
	"\n" +
	"_longitude\"Q\n" +
	"\rConsensusInfo\x12\x18\n" +
	"\aversion\x18\x01 \x01(\tR\aversion\x12&\n" +
	"\x0eimplementation\x18\x02 \x01(\tR\x0eimplementation\"x\n" +
	"\x12PaginationMetadata\x12\x1b\n" +
	"\tpage_size\x18\x01 \x01(\x05R\bpageSize\x12\x1d\n" +
	"\n" +
	"page_token\x18\x02 \x01(\tR\tpageToken\x12&\n" +
	"\x0fnext_page_token\x18\x03 \x01(\tR\rnextPageToken\"\xdd\x01\n" +
	"\x0eFilterMetadata\x12\x18\n" +
	"\anetwork\x18\x01 \x01(\tR\anetwork\x12S\n" +
	"\x0fapplied_filters\x18\x02 \x03(\v2*.api.v1.FilterMetadata.AppliedFiltersEntryR\x0eappliedFilters\x12\x19\n" +
	"\border_by\x18\x03 \x01(\tR\aorderBy\x1aA\n" +
	"\x13AppliedFiltersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x86\x01\n" +
	"\x1eStateExpiryAccessTotalResponse\x122\n" +
	"\x04item\x18\x01 \x01(\v2\x1e.api.v1.StateExpiryAccessTotalR\x04item\x120\n" +
	"\afilters\x18\x02 \x01(\v2\x16.api.v1.FilterMetadataR\afilters\"\xc0\x01\n" +
	"\x16StateExpiryAccessTotal\x12%\n" +
	"\x0etotal_accounts\x18\x01 \x01(\x04R\rtotalAccounts\x12)\n" +
	"\x10expired_accounts\x18\x02 \x01(\x04R\x0fexpiredAccounts\x12'\n" +
	"\x0ftotal_contracts\x18\x03 \x01(\x04R\x0etotalContracts\x12+\n" +
	"\x11expired_contracts\x18\x04 \x01(\x04R\x10expiredContracts\"s\n" +
	"\aNetwork\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\x12\x19\n" +
	"\bchain_id\x18\x03 \x01(\x03R\achainId\x12!\n" +
	"\flast_updated\x18\x04 \x01(\tR\vlastUpdated\"\x88\x01\n" +
	"\x15NetworkFilterMetadata\x12'\n" +
	"\x0fapplied_filters\x18\x01 \x03(\tR\x0eappliedFilters\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\x12%\n" +
	"\x0efiltered_count\x18\x03 \x01(\x05R\rfilteredCount\"\xc8\x01\n" +
	" StateExpiryAccessHistoryResponse\x126\n" +
	"\x05items\x18\x01 \x03(\v2 .api.v1.StateExpiryAccessHistoryR\x05items\x12:\n" +
	"\n" +
	"pagination\x18\x02 \x01(\v2\x1a.api.v1.PaginationMetadataR\n" +
	"pagination\x120\n" +
	"\afilters\x18\x03 \x01(\v2\x16.api.v1.FilterMetadataR\afilters\"\xc1\x01\n" +
	"\x18StateExpiryAccessHistory\x127\n" +
	"\x18chunk_start_block_number\x18\x01 \x01(\rR\x15chunkStartBlockNumber\x126\n" +
	"\x17first_accessed_accounts\x18\x02 \x01(\rR\x15firstAccessedAccounts\x124\n" +
	"\x16last_accessed_accounts\x18\x03 \x01(\rR\x14lastAccessedAccounts\"\xca\x01\n" +
	"!StateExpiryStorageHistoryResponse\x127\n" +
	"\x05items\x18\x01 \x03(\v2!.api.v1.StateExpiryStorageHistoryR\x05items\x12:\n" +
	"\n" +
	"pagination\x18\x02 \x01(\v2\x1a.api.v1.PaginationMetadataR\n" +
	"pagination\x120\n" +
	"\afilters\x18\x03 \x01(\v2\x16.api.v1.FilterMetadataR\afilters\"\xb6\x01\n" +
	"\x19StateExpiryStorageHistory\x127\n" +
	"\x18chunk_start_block_number\x18\x01 \x01(\rR\x15chunkStartBlockNumber\x120\n" +
	"\x14first_accessed_slots\x18\x02 \x01(\rR\x12firstAccessedSlots\x12.\n" +
	"\x13last_accessed_slots\x18\x03 \x01(\rR\x11lastAccessedSlots\"\xc0\x01\n" +
	"\x1eListBeaconSlotMevRelayResponse\x120\n" +
	"\x06relays\x18\x01 \x03(\v2\x18.api.v1.MevRelayBidCountR\x06relays\x12:\n" +
	"\n" +
	"pagination\x18\x02 \x01(\v2\x1a.api.v1.PaginationMetadataR\n" +
	"pagination\x120\n" +
	"\afilters\x18\x03 \x01(\v2\x16.api.v1.FilterMetadataR\afilters\"N\n" +
	"\x10MevRelayBidCount\x12\x1d\n" +
	"\n" +
	"relay_name\x18\x01 \x01(\tR\trelayName\x12\x1b\n" +
	"\tbid_count\x18\x02 \x01(\rR\bbidCount\"\xcd\x01\n" +
	"%ListBeaconSlotMevBuilderCountResponse\x126\n" +
	"\bbuilders\x18\x01 \x03(\v2\x1a.api.v1.MevBuilderBidCountR\bbuilders\x12:\n" +
	"\n" +
	"pagination\x18\x02 \x01(\v2\x1a.api.v1.PaginationMetadataR\n" +
	"pagination\x120\n" +
	"\afilters\x18\x03 \x01(\v2\x16.api.v1.FilterMetadataR\afilters\"X\n" +
	"\x12MevBuilderBidCount\x12%\n" +
	"\x0ebuilder_pubkey\x18\x01 \x01(\tR\rbuilderPubkey\x12\x1b\n" +
	"\tbid_count\x18\x02 \x01(\rR\bbidCount\"\xb3\x01\n" +
	"\x19ListBeaconSlotMevResponse\x12(\n" +
	"\x06blocks\x18\x01 \x03(\v2\x10.api.v1.MevBlockR\x06blocks\x12:\n" +
	"\n" +
	"pagination\x18\x02 \x01(\v2\x1a.api.v1.PaginationMetadataR\n" +
	"pagination\x120\n" +
	"\afilters\x18\x03 \x01(\v2\x16.api.v1.FilterMetadataR\afilters\"\xda\x03\n" +
	"\bMevBlock\x12\x1d\n" +
	"\n" +
	"block_root\x18\x01 \x01(\tR\tblockRoot\x12\x1d\n" +
	"\n" +
	"block_hash\x18\x02 \x01(\tR\tblockHash\x12!\n" +
	"\fblock_number\x18\x03 \x01(\x04R\vblockNumber\x12\x1f\n" +
	"\vparent_hash\x18\x04 \x01(\tR\n" +
	"parentHash\x12%\n" +
	"\x0ebuilder_pubkey\x18\x05 \x01(\tR\rbuilderPubkey\x12'\n" +
	"\x0fproposer_pubkey\x18\x06 \x01(\tR\x0eproposerPubkey\x124\n" +
	"\x16proposer_fee_recipient\x18\a \x01(\tR\x14proposerFeeRecipient\x12\x1b\n" +
	"\tgas_limit\x18\b \x01(\x04R\bgasLimit\x12\x19\n" +
	"\bgas_used\x18\t \x01(\x04R\agasUsed\x12\x14\n" +
	"\x05value\x18\n" +
	" \x01(\tR\x05value\x12+\n" +
	"\x11transaction_count\x18\v \x01(\rR\x10transactionCount\x12\x1f\n" +
	"\vrelay_names\x18\f \x03(\tR\n" +
	"relayNames\x12*\n" +
	"\x11earliest_bid_time\x18\r \x01(\tR\x0fearliestBidTime\"\xc3\x01\n" +
	" ListBeaconSlotMevBuilderResponse\x121\n" +
	"\bbuilders\x18\x01 \x03(\v2\x15.api.v1.MevBuilderBidR\bbuilders\x12:\n" +
	"\n" +
	"pagination\x18\x02 \x01(\v2\x1a.api.v1.PaginationMetadataR\n" +
	"pagination\x120\n" +
	"\afilters\x18\x03 \x01(\v2\x16.api.v1.FilterMetadataR\afilters\"\xb2\x01\n" +
	"\rMevBuilderBid\x12\x1d\n" +
	"\n" +
	"block_hash\x18\x01 \x01(\tR\tblockHash\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value\x12\x1f\n" +
	"\vrelay_names\x18\x03 \x03(\tR\n" +
	"relayNames\x12%\n" +
	"\x0ebuilder_pubkey\x18\x04 \x01(\tR\rbuilderPubkey\x12$\n" +
	"\x0echunk_start_ms\x18\x05 \x01(\x05R\fchunkStartMs\"r\n" +
	"\rErrorResponse\x12\x14\n" +
	"\x05error\x18\x01 \x01(\tR\x05error\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x12\n" +
	"\x04code\x18\x03 \x01(\x05R\x04code\x12\x1d\n" +
	"\n" +
	"request_id\x18\x04 \x01(\tR\trequestId\"C\n" +
	"\x11GetConfigResponse\x12.\n" +
	"\x06config\x18\x01 \x01(\v2\x16.api.v1.FrontendConfigR\x06config\"\x80\x01\n" +
	"\x0eFrontendConfig\x122\n" +
	"\bethereum\x18\x01 \x01(\v2\x16.api.v1.EthereumConfigR\bethereum\x12:\n" +
	"\vexperiments\x18\x02 \x03(\v2\x18.api.v1.ExperimentConfigR\vexperiments\"\xa6\x01\n" +
	"\x0eEthereumConfig\x12@\n" +
	"\bnetworks\x18\x01 \x03(\v2$.api.v1.EthereumConfig.NetworksEntryR\bnetworks\x1aR\n" +
	"\rNetworksEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12+\n" +
	"\x05value\x18\x02 \x01(\v2\x15.api.v1.NetworkConfigR\x05value:\x028\x01\"\xe8\x01\n" +
	"\rNetworkConfig\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\x12\x19\n" +
	"\bchain_id\x18\x03 \x01(\x03R\achainId\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\x12!\n" +
	"\fgenesis_time\x18\x05 \x01(\x03R\vgenesisTime\x12(\n" +
	"\x05forks\x18\x06 \x01(\v2\x12.api.v1.ForkConfigR\x05forks\x12!\n" +
	"\flast_updated\x18\a \x01(\tR\vlastUpdated\"B\n" +
	"\n" +
	"ForkConfig\x124\n" +
	"\tconsensus\x18\x01 \x01(\v2\x16.api.v1.ConsensusForksR\tconsensus\"f\n" +
	"\x0eConsensusForks\x12*\n" +
	"\aelectra\x18\x01 \x01(\v2\x10.api.v1.ForkInfoR\aelectra\x12(\n" +
	"\x06fusaka\x18\x02 \x01(\v2\x10.api.v1.ForkInfoR\x06fusaka\"\xbf\x01\n" +
	"\bForkInfo\x12\x14\n" +
	"\x05epoch\x18\x01 \x01(\x03R\x05epoch\x12W\n" +
	"\x13min_client_versions\x18\x02 \x03(\v2'.api.v1.ForkInfo.MinClientVersionsEntryR\x11minClientVersions\x1aD\n" +
	"\x16MinClientVersionsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"O\n" +
	"\x11ExperimentsConfig\x12:\n" +
	"\vexperiments\x18\x01 \x03(\v2\x18.api.v1.ExperimentConfigR\vexperiments\"\xcf\x02\n" +
	"\x10ExperimentConfig\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x18\n" +
	"\aenabled\x18\x02 \x01(\bR\aenabled\x12\x1a\n" +
	"\bnetworks\x18\x03 \x03(\tR\bnetworks\x12/\n" +
	"\x06config\x18\x04 \x01(\v2\x17.google.protobuf.StructR\x06config\x12[\n" +
	"\x11data_availability\x18\x05 \x03(\v2..api.v1.ExperimentConfig.DataAvailabilityEntryR\x10dataAvailability\x1ag\n" +
	"\x15DataAvailabilityEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x128\n" +
	"\x05value\x18\x02 \x01(\v2\".api.v1.ExperimentDataAvailabilityR\x05value:\x028\x01\"R\n" +
	"\x1aExperimentDataAvailability\x12\x19\n" +
	"\bmin_slot\x18\x01 \x01(\x04R\aminSlot\x12\x19\n" +
	"\bmax_slot\x18\x02 \x01(\x04R\amaxSlot\"A\n" +
	"\x1aGetExperimentConfigRequest\x12#\n" +
	"\rexperiment_id\x18\x01 \x01(\tR\fexperimentId\"W\n" +
	"\x1bGetExperimentConfigResponse\x128\n" +
	"\n" +
	"experiment\x18\x01 \x01(\v2\x18.api.v1.ExperimentConfigR\n" +
	"experiment\"\xc0\x01\n" +
	"!ListBeaconSlotBlockTimingResponse\x12-\n" +
	"\x05nodes\x18\x01 \x03(\v2\x17.api.v1.BlockTimingNodeR\x05nodes\x12:\n" +
	"\n" +
	"pagination\x18\x02 \x01(\v2\x1a.api.v1.PaginationMetadataR\n" +
	"pagination\x120\n" +
	"\afilters\x18\x03 \x01(\v2\x16.api.v1.FilterMetadataR\afilters\"\xde\x01\n" +
	"\x0fBlockTimingNode\x12\x17\n" +
	"\anode_id\x18\x01 \x01(\tR\x06nodeId\x12\x1a\n" +
	"\busername\x18\x02 \x01(\tR\busername\x12/\n" +
	"\x14seen_slot_start_diff\x18\x03 \x01(\rR\x11seenSlotStartDiff\x12!\n" +
	"\x03geo\x18\x04 \x01(\v2\x0f.api.v1.GeoInfoR\x03geo\x12*\n" +
	"\x06client\x18\x05 \x01(\v2\x12.api.v1.ClientInfoR\x06client\x12\x16\n" +
	"\x06source\x18\x06 \x01(\tR\x06source\"\xbe\x01\n" +
	" ListBeaconSlotBlobTimingResponse\x12,\n" +
	"\x05nodes\x18\x01 \x03(\v2\x16.api.v1.BlobTimingNodeR\x05nodes\x12:\n" +
	"\n" +
	"pagination\x18\x02 \x01(\v2\x1a.api.v1.PaginationMetadataR\n" +
	"pagination\x120\n" +
	"\afilters\x18\x03 \x01(\v2\x16.api.v1.FilterMetadataR\afilters\"\x9b\x02\n" +
	"\x0eBlobTimingNode\x12\x17\n" +
	"\anode_id\x18\x01 \x01(\tR\x06nodeId\x12\x1a\n" +
	"\busername\x18\x02 \x01(\tR\busername\x12/\n" +
	"\x14seen_slot_start_diff\x18\x03 \x01(\rR\x11seenSlotStartDiff\x12\x1d\n" +
	"\n" +
	"blob_index\x18\x04 \x01(\rR\tblobIndex\x12\x1d\n" +
	"\n" +
	"block_root\x18\x05 \x01(\tR\tblockRoot\x12!\n" +
	"\x03geo\x18\x06 \x01(\v2\x0f.api.v1.GeoInfoR\x03geo\x12*\n" +
	"\x06client\x18\a \x01(\v2\x12.api.v1.ClientInfoR\x06client\x12\x16\n" +
	"\x06source\x18\b \x01(\tR\x06source\"\xcf\x01\n" +
	"'ListBeaconSlotAttestationTimingResponse\x126\n" +
	"\x06chunks\x18\x01 \x03(\v2\x1e.api.v1.AttestationTimingChunkR\x06chunks\x12:\n" +
	"\n" +
	"pagination\x18\x02 \x01(\v2\x1a.api.v1.PaginationMetadataR\n" +
	"pagination\x120\n" +
	"\afilters\x18\x03 \x01(\v2\x16.api.v1.FilterMetadataR\afilters\"\x8a\x01\n" +
	"\x16AttestationTimingChunk\x12\x1d\n" +
	"\n" +
	"block_root\x18\x01 \x01(\tR\tblockRoot\x12$\n" +
	"\x0echunk_start_ms\x18\x02 \x01(\x03R\fchunkStartMs\x12+\n" +
	"\x11attestation_count\x18\x03 \x01(\rR\x10attestationCount\"\x98\x01\n" +
	",ListBeaconSlotAttestationCorrectnessResponse\x126\n" +
	"\x06blocks\x18\x01 \x03(\v2\x1e.api.v1.AttestationCorrectnessR\x06blocks\x120\n" +
	"\afilters\x18\x02 \x01(\v2\x16.api.v1.FilterMetadataR\afilters\"\xcf\x01\n" +
	"\x16AttestationCorrectness\x12\x1d\n" +
	"\n" +
	"block_root\x18\x01 \x01(\tR\tblockRoot\x12\x1b\n" +
	"\tvotes_max\x18\x02 \x01(\rR\bvotesMax\x12!\n" +
	"\fvotes_actual\x18\x03 \x01(\rR\vvotesActual\x125\n" +
	"\x16correctness_percentage\x18\x04 \x01(\x02R\x15correctnessPercentage\x12\x1f\n" +
	"\vvotes_other\x18\x05 \x01(\rR\n" +
	"votesOther\"~\n" +
	"\x1fListBeaconSlotBlobTotalResponse\x12)\n" +
	"\x06blocks\x18\x01 \x03(\v2\x11.api.v1.BlobTotalR\x06blocks\x120\n" +
	"\afilters\x18\x02 \x01(\v2\x16.api.v1.FilterMetadataR\afilters\"I\n" +
	"\tBlobTotal\x12\x1d\n" +
	"\n" +
	"block_root\x18\x01 \x01(\tR\tblockRoot\x12\x1d\n" +
	"\n" +
	"blob_count\x18\x02 \x01(\rR\tblobCount\"\xb8\x01\n" +
	"\x1bListBeaconSlotBlockResponse\x12+\n" +
	"\x06blocks\x18\x01 \x03(\v2\x13.api.v1.BeaconBlockR\x06blocks\x12:\n" +
	"\n" +
	"pagination\x18\x02 \x01(\v2\x1a.api.v1.PaginationMetadataR\n" +
	"pagination\x120\n" +
	"\afilters\x18\x03 \x01(\v2\x16.api.v1.FilterMetadataR\afilters\"\xbb\a\n" +
	"\vBeaconBlock\x12\x1d\n" +
	"\n" +
	"block_root\x18\x01 \x01(\tR\tblockRoot\x12\x1f\n" +
	"\vparent_root\x18\x02 \x01(\tR\n" +
	"parentRoot\x12\x1d\n" +
	"\n" +
	"state_root\x18\x03 \x01(\tR\tstateRoot\x12%\n" +
	"\x0eproposer_index\x18\x04 \x01(\rR\rproposerIndex\x12#\n" +
	"\rblock_version\x18\x05 \x01(\tR\fblockVersion\x12*\n" +
	"\x11block_total_bytes\x18\x06 \x01(\rR\x0fblockTotalBytes\x12?\n" +
	"\x1cblock_total_bytes_compressed\x18\a \x01(\rR\x19blockTotalBytesCompressed\x120\n" +
	"\x14execution_block_hash\x18\b \x01(\tR\x12executionBlockHash\x124\n" +
	"\x16execution_block_number\x18\t \x01(\rR\x14executionBlockNumber\x126\n" +
	"\x17execution_fee_recipient\x18\n" +
	" \x01(\tR\x15executionFeeRecipient\x12:\n" +
	"\x1aexecution_base_fee_per_gas\x18\v \x01(\tR\x16executionBaseFeePerGas\x12,\n" +
	"\x12execution_gas_used\x18\f \x01(\x04R\x10executionGasUsed\x12.\n" +
	"\x13execution_gas_limit\x18\r \x01(\x04R\x11executionGasLimit\x125\n" +
	"\x17execution_blob_gas_used\x18\x0e \x01(\x04R\x14executionBlobGasUsed\x129\n" +
	"\x19execution_excess_blob_gas\x18\x0f \x01(\x04R\x16executionExcessBlobGas\x120\n" +
	"\x14execution_state_root\x18\x10 \x01(\tR\x12executionStateRoot\x122\n" +
	"\x15execution_parent_hash\x18\x11 \x01(\tR\x13executionParentHash\x12@\n" +
	"\x1cexecution_transactions_count\x18\x12 \x01(\rR\x1aexecutionTransactionsCount\x12@\n" +
	"\x1cexecution_transactions_bytes\x18\x13 \x01(\rR\x1aexecutionTransactionsBytes\"\xc8\x01\n" +
	"$ListBeaconSlotProposerEntityResponse\x122\n" +
	"\bentities\x18\x01 \x03(\v2\x16.api.v1.ProposerEntityR\bentities\x12:\n" +
	"\n" +
	"pagination\x18\x02 \x01(\v2\x1a.api.v1.PaginationMetadataR\n" +
	"pagination\x120\n" +
	"\afilters\x18\x03 \x01(\v2\x16.api.v1.FilterMetadataR\afilters\"(\n" +
	"\x0eProposerEntity\x12\x16\n" +
	"\x06entity\x18\x01 \x01(\tR\x06entity\"\xd7\x01\n" +
	"\x1aListPreparedBlocksResponse\x12>\n" +
	"\x0fprepared_blocks\x18\x01 \x03(\v2\x15.api.v1.PreparedBlockR\x0epreparedBlocks\x12:\n" +
	"\n" +
	"pagination\x18\x02 \x01(\v2\x1a.api.v1.PaginationMetadataR\n" +
	"pagination\x12=\n" +
	"\afilters\x18\x03 \x01(\v2#.api.v1.PreparedBlockFilterMetadataR\afilters\"\x9a\x03\n" +
	"\rPreparedBlock\x12\x12\n" +
	"\x04slot\x18\x01 \x01(\rR\x04slot\x12&\n" +
	"\x0fslot_start_time\x18\x02 \x01(\tR\rslotStartTime\x12\x1d\n" +
	"\n" +
	"event_time\x18\x03 \x01(\tR\teventTime\x12*\n" +
	"\x06client\x18\x04 \x01(\v2\x12.api.v1.ClientInfoR\x06client\x123\n" +
	"\tconsensus\x18\x05 \x01(\v2\x15.api.v1.ConsensusInfoR\tconsensus\x12!\n" +
	"\x03geo\x18\x06 \x01(\v2\x0f.api.v1.GeoInfoR\x03geo\x129\n" +
	"\rblock_metrics\x18\a \x01(\v2\x14.api.v1.BlockMetricsR\fblockMetrics\x12L\n" +
	"\x11execution_metrics\x18\b \x01(\v2\x1f.api.v1.ExecutionPayloadMetricsR\x10executionMetrics\x12!\n" +
	"\flast_updated\x18\t \x01(\tR\vlastUpdated\"\x7f\n" +
	"\fBlockMetrics\x12\x18\n" +
	"\aversion\x18\x01 \x01(\tR\aversion\x12\x1f\n" +
	"\vtotal_bytes\x18\x02 \x01(\rR\n" +
	"totalBytes\x124\n" +
	"\x16total_bytes_compressed\x18\x03 \x01(\rR\x14totalBytesCompressed\"\xaa\x02\n" +
	"\x17ExecutionPayloadMetrics\x12\x1b\n" +
	"\tvalue_wei\x18\x01 \x01(\x04R\bvalueWei\x12.\n" +
	"\x13consensus_value_wei\x18\x02 \x01(\x04R\x11consensusValueWei\x12!\n" +
	"\fblock_number\x18\x03 \x01(\rR\vblockNumber\x12\x1b\n" +
	"\tgas_limit\x18\x04 \x01(\x04R\bgasLimit\x12\x19\n" +
	"\bgas_used\x18\x05 \x01(\x04R\agasUsed\x12-\n" +
	"\x12transactions_count\x18\x06 \x01(\rR\x11transactionsCount\x128\n" +
	"\x18transactions_total_bytes\x18\a \x01(\rR\x16transactionsTotalBytes\"\xac\x02\n" +
	"\x1bPreparedBlockFilterMetadata\x12\x18\n" +
	"\anetwork\x18\x01 \x01(\tR\anetwork\x12\x12\n" +
	"\x04slot\x18\x02 \x01(\rR\x04slot\x12\x1f\n" +
	"\vclient_name\x18\x03 \x01(\tR\n" +
	"clientName\x12`\n" +
	"\x0fapplied_filters\x18\x04 \x03(\v27.api.v1.PreparedBlockFilterMetadata.AppliedFiltersEntryR\x0eappliedFilters\x12\x19\n" +
	"\border_by\x18\x05 \x01(\tR\aorderBy\x1aA\n" +
	"\x13AppliedFiltersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B5Z3github.com/ethpandaops/lab/backend/pkg/api/v1/protob\x06proto3"

var (
	file_pkg_api_v1_proto_public_proto_rawDescOnce sync.Once
	file_pkg_api_v1_proto_public_proto_rawDescData []byte
)

func file_pkg_api_v1_proto_public_proto_rawDescGZIP() []byte {
	file_pkg_api_v1_proto_public_proto_rawDescOnce.Do(func() {
		file_pkg_api_v1_proto_public_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pkg_api_v1_proto_public_proto_rawDesc), len(file_pkg_api_v1_proto_public_proto_rawDesc)))
	})
	return file_pkg_api_v1_proto_public_proto_rawDescData
}

var file_pkg_api_v1_proto_public_proto_msgTypes = make([]protoimpl.MessageInfo, 61)
var file_pkg_api_v1_proto_public_proto_goTypes = []any{
	(*ListNodesResponse)(nil),                            // 0: api.v1.ListNodesResponse
	(*ListNetworksResponse)(nil),                         // 1: api.v1.ListNetworksResponse
	(*Node)(nil),                                         // 2: api.v1.Node
	(*ClientInfo)(nil),                                   // 3: api.v1.ClientInfo
	(*GeoInfo)(nil),                                      // 4: api.v1.GeoInfo
	(*ConsensusInfo)(nil),                                // 5: api.v1.ConsensusInfo
	(*PaginationMetadata)(nil),                           // 6: api.v1.PaginationMetadata
	(*FilterMetadata)(nil),                               // 7: api.v1.FilterMetadata
	(*StateExpiryAccessTotalResponse)(nil),               // 8: api.v1.StateExpiryAccessTotalResponse
	(*StateExpiryAccessTotal)(nil),                       // 9: api.v1.StateExpiryAccessTotal
	(*Network)(nil),                                      // 10: api.v1.Network
	(*NetworkFilterMetadata)(nil),                        // 11: api.v1.NetworkFilterMetadata
	(*StateExpiryAccessHistoryResponse)(nil),             // 12: api.v1.StateExpiryAccessHistoryResponse
	(*StateExpiryAccessHistory)(nil),                     // 13: api.v1.StateExpiryAccessHistory
	(*StateExpiryStorageHistoryResponse)(nil),            // 14: api.v1.StateExpiryStorageHistoryResponse
	(*StateExpiryStorageHistory)(nil),                    // 15: api.v1.StateExpiryStorageHistory
	(*ListBeaconSlotMevRelayResponse)(nil),               // 16: api.v1.ListBeaconSlotMevRelayResponse
	(*MevRelayBidCount)(nil),                             // 17: api.v1.MevRelayBidCount
	(*ListBeaconSlotMevBuilderCountResponse)(nil),        // 18: api.v1.ListBeaconSlotMevBuilderCountResponse
	(*MevBuilderBidCount)(nil),                           // 19: api.v1.MevBuilderBidCount
	(*ListBeaconSlotMevResponse)(nil),                    // 20: api.v1.ListBeaconSlotMevResponse
	(*MevBlock)(nil),                                     // 21: api.v1.MevBlock
	(*ListBeaconSlotMevBuilderResponse)(nil),             // 22: api.v1.ListBeaconSlotMevBuilderResponse
	(*MevBuilderBid)(nil),                                // 23: api.v1.MevBuilderBid
	(*ErrorResponse)(nil),                                // 24: api.v1.ErrorResponse
	(*GetConfigResponse)(nil),                            // 25: api.v1.GetConfigResponse
	(*FrontendConfig)(nil),                               // 26: api.v1.FrontendConfig
	(*EthereumConfig)(nil),                               // 27: api.v1.EthereumConfig
	(*NetworkConfig)(nil),                                // 28: api.v1.NetworkConfig
	(*ForkConfig)(nil),                                   // 29: api.v1.ForkConfig
	(*ConsensusForks)(nil),                               // 30: api.v1.ConsensusForks
	(*ForkInfo)(nil),                                     // 31: api.v1.ForkInfo
	(*ExperimentsConfig)(nil),                            // 32: api.v1.ExperimentsConfig
	(*ExperimentConfig)(nil),                             // 33: api.v1.ExperimentConfig
	(*ExperimentDataAvailability)(nil),                   // 34: api.v1.ExperimentDataAvailability
	(*GetExperimentConfigRequest)(nil),                   // 35: api.v1.GetExperimentConfigRequest
	(*GetExperimentConfigResponse)(nil),                  // 36: api.v1.GetExperimentConfigResponse
	(*ListBeaconSlotBlockTimingResponse)(nil),            // 37: api.v1.ListBeaconSlotBlockTimingResponse
	(*BlockTimingNode)(nil),                              // 38: api.v1.BlockTimingNode
	(*ListBeaconSlotBlobTimingResponse)(nil),             // 39: api.v1.ListBeaconSlotBlobTimingResponse
	(*BlobTimingNode)(nil),                               // 40: api.v1.BlobTimingNode
	(*ListBeaconSlotAttestationTimingResponse)(nil),      // 41: api.v1.ListBeaconSlotAttestationTimingResponse
	(*AttestationTimingChunk)(nil),                       // 42: api.v1.AttestationTimingChunk
	(*ListBeaconSlotAttestationCorrectnessResponse)(nil), // 43: api.v1.ListBeaconSlotAttestationCorrectnessResponse
	(*AttestationCorrectness)(nil),                       // 44: api.v1.AttestationCorrectness
	(*ListBeaconSlotBlobTotalResponse)(nil),              // 45: api.v1.ListBeaconSlotBlobTotalResponse
	(*BlobTotal)(nil),                                    // 46: api.v1.BlobTotal
	(*ListBeaconSlotBlockResponse)(nil),                  // 47: api.v1.ListBeaconSlotBlockResponse
	(*BeaconBlock)(nil),                                  // 48: api.v1.BeaconBlock
	(*ListBeaconSlotProposerEntityResponse)(nil),         // 49: api.v1.ListBeaconSlotProposerEntityResponse
	(*ProposerEntity)(nil),                               // 50: api.v1.ProposerEntity
	(*ListPreparedBlocksResponse)(nil),                   // 51: api.v1.ListPreparedBlocksResponse
	(*PreparedBlock)(nil),                                // 52: api.v1.PreparedBlock
	(*BlockMetrics)(nil),                                 // 53: api.v1.BlockMetrics
	(*ExecutionPayloadMetrics)(nil),                      // 54: api.v1.ExecutionPayloadMetrics
	(*PreparedBlockFilterMetadata)(nil),                  // 55: api.v1.PreparedBlockFilterMetadata
	nil,                                                  // 56: api.v1.FilterMetadata.AppliedFiltersEntry
	nil,                                                  // 57: api.v1.EthereumConfig.NetworksEntry
	nil,                                                  // 58: api.v1.ForkInfo.MinClientVersionsEntry
	nil,                                                  // 59: api.v1.ExperimentConfig.DataAvailabilityEntry
	nil,                                                  // 60: api.v1.PreparedBlockFilterMetadata.AppliedFiltersEntry
	(*structpb.Struct)(nil),                              // 61: google.protobuf.Struct
}
var file_pkg_api_v1_proto_public_proto_depIdxs = []int32{
	2,  // 0: api.v1.ListNodesResponse.nodes:type_name -> api.v1.Node
	6,  // 1: api.v1.ListNodesResponse.pagination:type_name -> api.v1.PaginationMetadata
	7,  // 2: api.v1.ListNodesResponse.filters:type_name -> api.v1.FilterMetadata
	10, // 3: api.v1.ListNetworksResponse.networks:type_name -> api.v1.Network
	11, // 4: api.v1.ListNetworksResponse.filters:type_name -> api.v1.NetworkFilterMetadata
	3,  // 5: api.v1.Node.client:type_name -> api.v1.ClientInfo
	4,  // 6: api.v1.Node.geo:type_name -> api.v1.GeoInfo
	5,  // 7: api.v1.Node.consensus:type_name -> api.v1.ConsensusInfo
	56, // 8: api.v1.FilterMetadata.applied_filters:type_name -> api.v1.FilterMetadata.AppliedFiltersEntry
	9,  // 9: api.v1.StateExpiryAccessTotalResponse.item:type_name -> api.v1.StateExpiryAccessTotal
	7,  // 10: api.v1.StateExpiryAccessTotalResponse.filters:type_name -> api.v1.FilterMetadata
	13, // 11: api.v1.StateExpiryAccessHistoryResponse.items:type_name -> api.v1.StateExpiryAccessHistory
	6,  // 12: api.v1.StateExpiryAccessHistoryResponse.pagination:type_name -> api.v1.PaginationMetadata
	7,  // 13: api.v1.StateExpiryAccessHistoryResponse.filters:type_name -> api.v1.FilterMetadata
	15, // 14: api.v1.StateExpiryStorageHistoryResponse.items:type_name -> api.v1.StateExpiryStorageHistory
	6,  // 15: api.v1.StateExpiryStorageHistoryResponse.pagination:type_name -> api.v1.PaginationMetadata
	7,  // 16: api.v1.StateExpiryStorageHistoryResponse.filters:type_name -> api.v1.FilterMetadata
	17, // 17: api.v1.ListBeaconSlotMevRelayResponse.relays:type_name -> api.v1.MevRelayBidCount
	6,  // 18: api.v1.ListBeaconSlotMevRelayResponse.pagination:type_name -> api.v1.PaginationMetadata
	7,  // 19: api.v1.ListBeaconSlotMevRelayResponse.filters:type_name -> api.v1.FilterMetadata
	19, // 20: api.v1.ListBeaconSlotMevBuilderCountResponse.builders:type_name -> api.v1.MevBuilderBidCount
	6,  // 21: api.v1.ListBeaconSlotMevBuilderCountResponse.pagination:type_name -> api.v1.PaginationMetadata
	7,  // 22: api.v1.ListBeaconSlotMevBuilderCountResponse.filters:type_name -> api.v1.FilterMetadata
	21, // 23: api.v1.ListBeaconSlotMevResponse.blocks:type_name -> api.v1.MevBlock
	6,  // 24: api.v1.ListBeaconSlotMevResponse.pagination:type_name -> api.v1.PaginationMetadata
	7,  // 25: api.v1.ListBeaconSlotMevResponse.filters:type_name -> api.v1.FilterMetadata
	23, // 26: api.v1.ListBeaconSlotMevBuilderResponse.builders:type_name -> api.v1.MevBuilderBid
	6,  // 27: api.v1.ListBeaconSlotMevBuilderResponse.pagination:type_name -> api.v1.PaginationMetadata
	7,  // 28: api.v1.ListBeaconSlotMevBuilderResponse.filters:type_name -> api.v1.FilterMetadata
	26, // 29: api.v1.GetConfigResponse.config:type_name -> api.v1.FrontendConfig
	27, // 30: api.v1.FrontendConfig.ethereum:type_name -> api.v1.EthereumConfig
	33, // 31: api.v1.FrontendConfig.experiments:type_name -> api.v1.ExperimentConfig
	57, // 32: api.v1.EthereumConfig.networks:type_name -> api.v1.EthereumConfig.NetworksEntry
	29, // 33: api.v1.NetworkConfig.forks:type_name -> api.v1.ForkConfig
	30, // 34: api.v1.ForkConfig.consensus:type_name -> api.v1.ConsensusForks
	31, // 35: api.v1.ConsensusForks.electra:type_name -> api.v1.ForkInfo
	31, // 36: api.v1.ConsensusForks.fusaka:type_name -> api.v1.ForkInfo
	58, // 37: api.v1.ForkInfo.min_client_versions:type_name -> api.v1.ForkInfo.MinClientVersionsEntry
	33, // 38: api.v1.ExperimentsConfig.experiments:type_name -> api.v1.ExperimentConfig
	61, // 39: api.v1.ExperimentConfig.config:type_name -> google.protobuf.Struct
	59, // 40: api.v1.ExperimentConfig.data_availability:type_name -> api.v1.ExperimentConfig.DataAvailabilityEntry
	33, // 41: api.v1.GetExperimentConfigResponse.experiment:type_name -> api.v1.ExperimentConfig
	38, // 42: api.v1.ListBeaconSlotBlockTimingResponse.nodes:type_name -> api.v1.BlockTimingNode
	6,  // 43: api.v1.ListBeaconSlotBlockTimingResponse.pagination:type_name -> api.v1.PaginationMetadata
	7,  // 44: api.v1.ListBeaconSlotBlockTimingResponse.filters:type_name -> api.v1.FilterMetadata
	4,  // 45: api.v1.BlockTimingNode.geo:type_name -> api.v1.GeoInfo
	3,  // 46: api.v1.BlockTimingNode.client:type_name -> api.v1.ClientInfo
	40, // 47: api.v1.ListBeaconSlotBlobTimingResponse.nodes:type_name -> api.v1.BlobTimingNode
	6,  // 48: api.v1.ListBeaconSlotBlobTimingResponse.pagination:type_name -> api.v1.PaginationMetadata
	7,  // 49: api.v1.ListBeaconSlotBlobTimingResponse.filters:type_name -> api.v1.FilterMetadata
	4,  // 50: api.v1.BlobTimingNode.geo:type_name -> api.v1.GeoInfo
	3,  // 51: api.v1.BlobTimingNode.client:type_name -> api.v1.ClientInfo
	42, // 52: api.v1.ListBeaconSlotAttestationTimingResponse.chunks:type_name -> api.v1.AttestationTimingChunk
	6,  // 53: api.v1.ListBeaconSlotAttestationTimingResponse.pagination:type_name -> api.v1.PaginationMetadata
	7,  // 54: api.v1.ListBeaconSlotAttestationTimingResponse.filters:type_name -> api.v1.FilterMetadata
	44, // 55: api.v1.ListBeaconSlotAttestationCorrectnessResponse.blocks:type_name -> api.v1.AttestationCorrectness
	7,  // 56: api.v1.ListBeaconSlotAttestationCorrectnessResponse.filters:type_name -> api.v1.FilterMetadata
	46, // 57: api.v1.ListBeaconSlotBlobTotalResponse.blocks:type_name -> api.v1.BlobTotal
	7,  // 58: api.v1.ListBeaconSlotBlobTotalResponse.filters:type_name -> api.v1.FilterMetadata
	48, // 59: api.v1.ListBeaconSlotBlockResponse.blocks:type_name -> api.v1.BeaconBlock
	6,  // 60: api.v1.ListBeaconSlotBlockResponse.pagination:type_name -> api.v1.PaginationMetadata
	7,  // 61: api.v1.ListBeaconSlotBlockResponse.filters:type_name -> api.v1.FilterMetadata
	50, // 62: api.v1.ListBeaconSlotProposerEntityResponse.entities:type_name -> api.v1.ProposerEntity
	6,  // 63: api.v1.ListBeaconSlotProposerEntityResponse.pagination:type_name -> api.v1.PaginationMetadata
	7,  // 64: api.v1.ListBeaconSlotProposerEntityResponse.filters:type_name -> api.v1.FilterMetadata
	52, // 65: api.v1.ListPreparedBlocksResponse.prepared_blocks:type_name -> api.v1.PreparedBlock
	6,  // 66: api.v1.ListPreparedBlocksResponse.pagination:type_name -> api.v1.PaginationMetadata
	55, // 67: api.v1.ListPreparedBlocksResponse.filters:type_name -> api.v1.PreparedBlockFilterMetadata
	3,  // 68: api.v1.PreparedBlock.client:type_name -> api.v1.ClientInfo
	5,  // 69: api.v1.PreparedBlock.consensus:type_name -> api.v1.ConsensusInfo
	4,  // 70: api.v1.PreparedBlock.geo:type_name -> api.v1.GeoInfo
	53, // 71: api.v1.PreparedBlock.block_metrics:type_name -> api.v1.BlockMetrics
	54, // 72: api.v1.PreparedBlock.execution_metrics:type_name -> api.v1.ExecutionPayloadMetrics
	60, // 73: api.v1.PreparedBlockFilterMetadata.applied_filters:type_name -> api.v1.PreparedBlockFilterMetadata.AppliedFiltersEntry
	28, // 74: api.v1.EthereumConfig.NetworksEntry.value:type_name -> api.v1.NetworkConfig
	34, // 75: api.v1.ExperimentConfig.DataAvailabilityEntry.value:type_name -> api.v1.ExperimentDataAvailability
	76, // [76:76] is the sub-list for method output_type
	76, // [76:76] is the sub-list for method input_type
	76, // [76:76] is the sub-list for extension type_name
	76, // [76:76] is the sub-list for extension extendee
	0,  // [0:76] is the sub-list for field type_name
}

func init() { file_pkg_api_v1_proto_public_proto_init() }
func file_pkg_api_v1_proto_public_proto_init() {
	if File_pkg_api_v1_proto_public_proto != nil {
		return
	}
	file_pkg_api_v1_proto_public_proto_msgTypes[4].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_api_v1_proto_public_proto_rawDesc), len(file_pkg_api_v1_proto_public_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   61,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pkg_api_v1_proto_public_proto_goTypes,
		DependencyIndexes: file_pkg_api_v1_proto_public_proto_depIdxs,
		MessageInfos:      file_pkg_api_v1_proto_public_proto_msgTypes,
	}.Build()
	File_pkg_api_v1_proto_public_proto = out.File
	file_pkg_api_v1_proto_public_proto_goTypes = nil
	file_pkg_api_v1_proto_public_proto_depIdxs = nil
}
