// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: backend/pkg/api/v1/proto/public.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ListNodesResponse is the v1 API response for listing nodes with pagination.
type ListNodesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nodes      []*Node             `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
	Pagination *PaginationMetadata `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	Filters    *FilterMetadata     `protobuf:"bytes,3,opt,name=filters,proto3" json:"filters,omitempty"`
}

func (x *ListNodesResponse) Reset() {
	*x = ListNodesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListNodesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNodesResponse) ProtoMessage() {}

func (x *ListNodesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNodesResponse.ProtoReflect.Descriptor instead.
func (*ListNodesResponse) Descriptor() ([]byte, []int) {
	return file_backend_pkg_api_v1_proto_public_proto_rawDescGZIP(), []int{0}
}

func (x *ListNodesResponse) GetNodes() []*Node {
	if x != nil {
		return x.Nodes
	}
	return nil
}

func (x *ListNodesResponse) GetPagination() *PaginationMetadata {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *ListNodesResponse) GetFilters() *FilterMetadata {
	if x != nil {
		return x.Filters
	}
	return nil
}

// ListNetworksResponse is the v1 API response for listing available networks.
type ListNetworksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Networks []*Network             `protobuf:"bytes,1,rep,name=networks,proto3" json:"networks,omitempty"`
	Filters  *NetworkFilterMetadata `protobuf:"bytes,2,opt,name=filters,proto3" json:"filters,omitempty"`
}

func (x *ListNetworksResponse) Reset() {
	*x = ListNetworksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListNetworksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNetworksResponse) ProtoMessage() {}

func (x *ListNetworksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNetworksResponse.ProtoReflect.Descriptor instead.
func (*ListNetworksResponse) Descriptor() ([]byte, []int) {
	return file_backend_pkg_api_v1_proto_public_proto_rawDescGZIP(), []int{1}
}

func (x *ListNetworksResponse) GetNetworks() []*Network {
	if x != nil {
		return x.Networks
	}
	return nil
}

func (x *ListNetworksResponse) GetFilters() *NetworkFilterMetadata {
	if x != nil {
		return x.Filters
	}
	return nil
}

// Node represents a transformed view of node data for public consumption.
// This is a curated subset of fields from the internal structs,
// formatted for client convenience (e.g., timestamps as ISO strings).
type Node struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username       string         `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	NodeId         string         `protobuf:"bytes,2,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Classification string         `protobuf:"bytes,3,opt,name=classification,proto3" json:"classification,omitempty"`
	Client         *ClientInfo    `protobuf:"bytes,4,opt,name=client,proto3" json:"client,omitempty"`
	Geo            *GeoInfo       `protobuf:"bytes,5,opt,name=geo,proto3" json:"geo,omitempty"`
	Consensus      *ConsensusInfo `protobuf:"bytes,6,opt,name=consensus,proto3" json:"consensus,omitempty"`
	LastSeen       string         `protobuf:"bytes,7,opt,name=last_seen,json=lastSeen,proto3" json:"last_seen,omitempty"` // ISO 8601 formatted, not raw Unix timestamp
}

func (x *Node) Reset() {
	*x = Node{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Node) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Node) ProtoMessage() {}

func (x *Node) ProtoReflect() protoreflect.Message {
	mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Node.ProtoReflect.Descriptor instead.
func (*Node) Descriptor() ([]byte, []int) {
	return file_backend_pkg_api_v1_proto_public_proto_rawDescGZIP(), []int{2}
}

func (x *Node) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *Node) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *Node) GetClassification() string {
	if x != nil {
		return x.Classification
	}
	return ""
}

func (x *Node) GetClient() *ClientInfo {
	if x != nil {
		return x.Client
	}
	return nil
}

func (x *Node) GetGeo() *GeoInfo {
	if x != nil {
		return x.Geo
	}
	return nil
}

func (x *Node) GetConsensus() *ConsensusInfo {
	if x != nil {
		return x.Consensus
	}
	return nil
}

func (x *Node) GetLastSeen() string {
	if x != nil {
		return x.LastSeen
	}
	return ""
}

// ClientInfo groups execution client metadata.
type ClientInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name           string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Version        string `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	Implementation string `protobuf:"bytes,3,opt,name=implementation,proto3" json:"implementation,omitempty"`
}

func (x *ClientInfo) Reset() {
	*x = ClientInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientInfo) ProtoMessage() {}

func (x *ClientInfo) ProtoReflect() protoreflect.Message {
	mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientInfo.ProtoReflect.Descriptor instead.
func (*ClientInfo) Descriptor() ([]byte, []int) {
	return file_backend_pkg_api_v1_proto_public_proto_rawDescGZIP(), []int{3}
}

func (x *ClientInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ClientInfo) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *ClientInfo) GetImplementation() string {
	if x != nil {
		return x.Implementation
	}
	return ""
}

// GeoInfo groups geographical metadata.
type GeoInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	City          string   `protobuf:"bytes,1,opt,name=city,proto3" json:"city,omitempty"`
	Country       string   `protobuf:"bytes,2,opt,name=country,proto3" json:"country,omitempty"`
	CountryCode   string   `protobuf:"bytes,3,opt,name=country_code,json=countryCode,proto3" json:"country_code,omitempty"`
	ContinentCode string   `protobuf:"bytes,4,opt,name=continent_code,json=continentCode,proto3" json:"continent_code,omitempty"`
	Latitude      *float64 `protobuf:"fixed64,5,opt,name=latitude,proto3,oneof" json:"latitude,omitempty"`
	Longitude     *float64 `protobuf:"fixed64,6,opt,name=longitude,proto3,oneof" json:"longitude,omitempty"`
}

func (x *GeoInfo) Reset() {
	*x = GeoInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeoInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeoInfo) ProtoMessage() {}

func (x *GeoInfo) ProtoReflect() protoreflect.Message {
	mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeoInfo.ProtoReflect.Descriptor instead.
func (*GeoInfo) Descriptor() ([]byte, []int) {
	return file_backend_pkg_api_v1_proto_public_proto_rawDescGZIP(), []int{4}
}

func (x *GeoInfo) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *GeoInfo) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *GeoInfo) GetCountryCode() string {
	if x != nil {
		return x.CountryCode
	}
	return ""
}

func (x *GeoInfo) GetContinentCode() string {
	if x != nil {
		return x.ContinentCode
	}
	return ""
}

func (x *GeoInfo) GetLatitude() float64 {
	if x != nil && x.Latitude != nil {
		return *x.Latitude
	}
	return 0
}

func (x *GeoInfo) GetLongitude() float64 {
	if x != nil && x.Longitude != nil {
		return *x.Longitude
	}
	return 0
}

// ConsensusInfo groups consensus client metadata.
type ConsensusInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version        string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	Implementation string `protobuf:"bytes,2,opt,name=implementation,proto3" json:"implementation,omitempty"`
}

func (x *ConsensusInfo) Reset() {
	*x = ConsensusInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConsensusInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConsensusInfo) ProtoMessage() {}

func (x *ConsensusInfo) ProtoReflect() protoreflect.Message {
	mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConsensusInfo.ProtoReflect.Descriptor instead.
func (*ConsensusInfo) Descriptor() ([]byte, []int) {
	return file_backend_pkg_api_v1_proto_public_proto_rawDescGZIP(), []int{5}
}

func (x *ConsensusInfo) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *ConsensusInfo) GetImplementation() string {
	if x != nil {
		return x.Implementation
	}
	return ""
}

// Pagination metadata following AIP-132.
type PaginationMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageSize      int32  `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken     string `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	NextPageToken string `protobuf:"bytes,3,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *PaginationMetadata) Reset() {
	*x = PaginationMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaginationMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaginationMetadata) ProtoMessage() {}

func (x *PaginationMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaginationMetadata.ProtoReflect.Descriptor instead.
func (*PaginationMetadata) Descriptor() ([]byte, []int) {
	return file_backend_pkg_api_v1_proto_public_proto_rawDescGZIP(), []int{6}
}

func (x *PaginationMetadata) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *PaginationMetadata) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *PaginationMetadata) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

// Filter metadata showing applied filters.
type FilterMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Network        string            `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`
	AppliedFilters map[string]string `protobuf:"bytes,2,rep,name=applied_filters,json=appliedFilters,proto3" json:"applied_filters,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // All filters including time filters
	OrderBy        string            `protobuf:"bytes,3,opt,name=order_by,json=orderBy,proto3" json:"order_by,omitempty"`
}

func (x *FilterMetadata) Reset() {
	*x = FilterMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilterMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterMetadata) ProtoMessage() {}

func (x *FilterMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterMetadata.ProtoReflect.Descriptor instead.
func (*FilterMetadata) Descriptor() ([]byte, []int) {
	return file_backend_pkg_api_v1_proto_public_proto_rawDescGZIP(), []int{7}
}

func (x *FilterMetadata) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *FilterMetadata) GetAppliedFilters() map[string]string {
	if x != nil {
		return x.AppliedFilters
	}
	return nil
}

func (x *FilterMetadata) GetOrderBy() string {
	if x != nil {
		return x.OrderBy
	}
	return ""
}

// StateExpiryAccessTotalResponse is the v1 API response for state expiry access totals.
type StateExpiryAccessTotalResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item    *StateExpiryAccessTotal `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
	Filters *FilterMetadata         `protobuf:"bytes,2,opt,name=filters,proto3" json:"filters,omitempty"`
}

func (x *StateExpiryAccessTotalResponse) Reset() {
	*x = StateExpiryAccessTotalResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateExpiryAccessTotalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateExpiryAccessTotalResponse) ProtoMessage() {}

func (x *StateExpiryAccessTotalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateExpiryAccessTotalResponse.ProtoReflect.Descriptor instead.
func (*StateExpiryAccessTotalResponse) Descriptor() ([]byte, []int) {
	return file_backend_pkg_api_v1_proto_public_proto_rawDescGZIP(), []int{8}
}

func (x *StateExpiryAccessTotalResponse) GetItem() *StateExpiryAccessTotal {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *StateExpiryAccessTotalResponse) GetFilters() *FilterMetadata {
	if x != nil {
		return x.Filters
	}
	return nil
}

// StateExpiryAccessTotal represents state expiry access statistics for public API consumption.
type StateExpiryAccessTotal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Total number of accounts accessed in last 365 days
	TotalAccounts uint64 `protobuf:"varint,1,opt,name=total_accounts,json=totalAccounts,proto3" json:"total_accounts,omitempty"`
	// Number of expired accounts (not accessed in last 365 days)
	ExpiredAccounts uint64 `protobuf:"varint,2,opt,name=expired_accounts,json=expiredAccounts,proto3" json:"expired_accounts,omitempty"`
	// Total number of contract accounts accessed in last 365 days
	TotalContracts uint64 `protobuf:"varint,3,opt,name=total_contracts,json=totalContracts,proto3" json:"total_contracts,omitempty"`
	// Number of expired contracts (not accessed in last 365 days)
	ExpiredContracts uint64 `protobuf:"varint,4,opt,name=expired_contracts,json=expiredContracts,proto3" json:"expired_contracts,omitempty"`
}

func (x *StateExpiryAccessTotal) Reset() {
	*x = StateExpiryAccessTotal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateExpiryAccessTotal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateExpiryAccessTotal) ProtoMessage() {}

func (x *StateExpiryAccessTotal) ProtoReflect() protoreflect.Message {
	mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateExpiryAccessTotal.ProtoReflect.Descriptor instead.
func (*StateExpiryAccessTotal) Descriptor() ([]byte, []int) {
	return file_backend_pkg_api_v1_proto_public_proto_rawDescGZIP(), []int{9}
}

func (x *StateExpiryAccessTotal) GetTotalAccounts() uint64 {
	if x != nil {
		return x.TotalAccounts
	}
	return 0
}

func (x *StateExpiryAccessTotal) GetExpiredAccounts() uint64 {
	if x != nil {
		return x.ExpiredAccounts
	}
	return 0
}

func (x *StateExpiryAccessTotal) GetTotalContracts() uint64 {
	if x != nil {
		return x.TotalContracts
	}
	return 0
}

func (x *StateExpiryAccessTotal) GetExpiredContracts() uint64 {
	if x != nil {
		return x.ExpiredContracts
	}
	return 0
}

// StateExpiryBlockResponse is the v1 API response for state expiry block information.
// Returns the execution layer block number from approximately 1 year ago, which is
// used as the expiry boundary for state expiry calculations.
type StateExpiryBlockResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item    *StateExpiryBlock `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
	Filters *FilterMetadata   `protobuf:"bytes,2,opt,name=filters,proto3" json:"filters,omitempty"`
}

func (x *StateExpiryBlockResponse) Reset() {
	*x = StateExpiryBlockResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateExpiryBlockResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateExpiryBlockResponse) ProtoMessage() {}

func (x *StateExpiryBlockResponse) ProtoReflect() protoreflect.Message {
	mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateExpiryBlockResponse.ProtoReflect.Descriptor instead.
func (*StateExpiryBlockResponse) Descriptor() ([]byte, []int) {
	return file_backend_pkg_api_v1_proto_public_proto_rawDescGZIP(), []int{10}
}

func (x *StateExpiryBlockResponse) GetItem() *StateExpiryBlock {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *StateExpiryBlockResponse) GetFilters() *FilterMetadata {
	if x != nil {
		return x.Filters
	}
	return nil
}

// StateExpiryBlock represents the execution block from approximately 1 year ago
// that serves as the boundary for state expiry calculations.
type StateExpiryBlock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The execution layer block number from approximately 1 year ago
	BlockNumber uint32 `protobuf:"varint,1,opt,name=block_number,json=blockNumber,proto3" json:"block_number,omitempty"`
}

func (x *StateExpiryBlock) Reset() {
	*x = StateExpiryBlock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateExpiryBlock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateExpiryBlock) ProtoMessage() {}

func (x *StateExpiryBlock) ProtoReflect() protoreflect.Message {
	mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateExpiryBlock.ProtoReflect.Descriptor instead.
func (*StateExpiryBlock) Descriptor() ([]byte, []int) {
	return file_backend_pkg_api_v1_proto_public_proto_rawDescGZIP(), []int{11}
}

func (x *StateExpiryBlock) GetBlockNumber() uint32 {
	if x != nil {
		return x.BlockNumber
	}
	return 0
}

// StateExpiryStorageTotalResponse is the v1 API response for storage slot totals.
// This endpoint provides the latest total storage slot statistics for state expiry analysis.
type StateExpiryStorageTotalResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item    *StateExpiryStorageTotal `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
	Filters *FilterMetadata          `protobuf:"bytes,2,opt,name=filters,proto3" json:"filters,omitempty"`
}

func (x *StateExpiryStorageTotalResponse) Reset() {
	*x = StateExpiryStorageTotalResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateExpiryStorageTotalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateExpiryStorageTotalResponse) ProtoMessage() {}

func (x *StateExpiryStorageTotalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateExpiryStorageTotalResponse.ProtoReflect.Descriptor instead.
func (*StateExpiryStorageTotalResponse) Descriptor() ([]byte, []int) {
	return file_backend_pkg_api_v1_proto_public_proto_rawDescGZIP(), []int{12}
}

func (x *StateExpiryStorageTotalResponse) GetItem() *StateExpiryStorageTotal {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *StateExpiryStorageTotalResponse) GetFilters() *FilterMetadata {
	if x != nil {
		return x.Filters
	}
	return nil
}

// StateExpiryStorageTotal represents state expiry storage slot statistics for public API consumption.
type StateExpiryStorageTotal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Total number of storage slots accessed in last 365 days
	TotalStorageSlots uint64 `protobuf:"varint,1,opt,name=total_storage_slots,json=totalStorageSlots,proto3" json:"total_storage_slots,omitempty"`
	// Number of expired storage slots (not accessed in last 365 days)
	ExpiredStorageSlots uint64 `protobuf:"varint,2,opt,name=expired_storage_slots,json=expiredStorageSlots,proto3" json:"expired_storage_slots,omitempty"`
}

func (x *StateExpiryStorageTotal) Reset() {
	*x = StateExpiryStorageTotal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateExpiryStorageTotal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateExpiryStorageTotal) ProtoMessage() {}

func (x *StateExpiryStorageTotal) ProtoReflect() protoreflect.Message {
	mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateExpiryStorageTotal.ProtoReflect.Descriptor instead.
func (*StateExpiryStorageTotal) Descriptor() ([]byte, []int) {
	return file_backend_pkg_api_v1_proto_public_proto_rawDescGZIP(), []int{13}
}

func (x *StateExpiryStorageTotal) GetTotalStorageSlots() uint64 {
	if x != nil {
		return x.TotalStorageSlots
	}
	return 0
}

func (x *StateExpiryStorageTotal) GetExpiredStorageSlots() uint64 {
	if x != nil {
		return x.ExpiredStorageSlots
	}
	return 0
}

// Network represents an Ethereum network for public API consumption.
// This provides essential network metadata needed by clients.
type Network struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                                  // Full network name (e.g., "mainnet", "sepolia", "fusaka-devnet-0")
	Status      string `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`                              // "active", "inactive", or "unknown"
	ChainId     int64  `protobuf:"varint,3,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`            // Ethereum chain ID
	LastUpdated string `protobuf:"bytes,4,opt,name=last_updated,json=lastUpdated,proto3" json:"last_updated,omitempty"` // ISO 8601 formatted timestamp
}

func (x *Network) Reset() {
	*x = Network{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Network) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Network) ProtoMessage() {}

func (x *Network) ProtoReflect() protoreflect.Message {
	mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Network.ProtoReflect.Descriptor instead.
func (*Network) Descriptor() ([]byte, []int) {
	return file_backend_pkg_api_v1_proto_public_proto_rawDescGZIP(), []int{14}
}

func (x *Network) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Network) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Network) GetChainId() int64 {
	if x != nil {
		return x.ChainId
	}
	return 0
}

func (x *Network) GetLastUpdated() string {
	if x != nil {
		return x.LastUpdated
	}
	return ""
}

// NetworkFilterMetadata shows filtering information for network queries.
type NetworkFilterMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppliedFilters []string `protobuf:"bytes,1,rep,name=applied_filters,json=appliedFilters,proto3" json:"applied_filters,omitempty"` // e.g., ["active_only"]
	TotalCount     int32    `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`            // Total networks before filtering
	FilteredCount  int32    `protobuf:"varint,3,opt,name=filtered_count,json=filteredCount,proto3" json:"filtered_count,omitempty"`   // Networks after filtering
}

func (x *NetworkFilterMetadata) Reset() {
	*x = NetworkFilterMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetworkFilterMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkFilterMetadata) ProtoMessage() {}

func (x *NetworkFilterMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkFilterMetadata.ProtoReflect.Descriptor instead.
func (*NetworkFilterMetadata) Descriptor() ([]byte, []int) {
	return file_backend_pkg_api_v1_proto_public_proto_rawDescGZIP(), []int{15}
}

func (x *NetworkFilterMetadata) GetAppliedFilters() []string {
	if x != nil {
		return x.AppliedFilters
	}
	return nil
}

func (x *NetworkFilterMetadata) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *NetworkFilterMetadata) GetFilteredCount() int32 {
	if x != nil {
		return x.FilteredCount
	}
	return 0
}

// StateExpiryAccessHistoryResponse is the v1 API response for state expiry access history data.
// This endpoint provides aggregated data about Ethereum address access patterns chunked by 10000 blocks.
type StateExpiryAccessHistoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items      []*StateExpiryAccessHistory `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	Pagination *PaginationMetadata         `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	Filters    *FilterMetadata             `protobuf:"bytes,3,opt,name=filters,proto3" json:"filters,omitempty"`
}

func (x *StateExpiryAccessHistoryResponse) Reset() {
	*x = StateExpiryAccessHistoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateExpiryAccessHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateExpiryAccessHistoryResponse) ProtoMessage() {}

func (x *StateExpiryAccessHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateExpiryAccessHistoryResponse.ProtoReflect.Descriptor instead.
func (*StateExpiryAccessHistoryResponse) Descriptor() ([]byte, []int) {
	return file_backend_pkg_api_v1_proto_public_proto_rawDescGZIP(), []int{16}
}

func (x *StateExpiryAccessHistoryResponse) GetItems() []*StateExpiryAccessHistory {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *StateExpiryAccessHistoryResponse) GetPagination() *PaginationMetadata {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *StateExpiryAccessHistoryResponse) GetFilters() *FilterMetadata {
	if x != nil {
		return x.Filters
	}
	return nil
}

// StateExpiryAccessHistory represents address access statistics for a 10000-block chunk.
// This data is useful for analyzing state expiry patterns and understanding address activity over time.
type StateExpiryAccessHistory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The starting block number of this 10000-block chunk
	ChunkStartBlockNumber uint32 `protobuf:"varint,1,opt,name=chunk_start_block_number,json=chunkStartBlockNumber,proto3" json:"chunk_start_block_number,omitempty"`
	// Number of unique accounts that were accessed for the first time in this chunk
	// These are addresses that had never been accessed before this chunk
	FirstAccessedAccounts uint32 `protobuf:"varint,2,opt,name=first_accessed_accounts,json=firstAccessedAccounts,proto3" json:"first_accessed_accounts,omitempty"`
	// Number of unique accounts whose most recent access was in this chunk
	// These addresses haven't been accessed in any later chunks
	LastAccessedAccounts uint32 `protobuf:"varint,3,opt,name=last_accessed_accounts,json=lastAccessedAccounts,proto3" json:"last_accessed_accounts,omitempty"`
}

func (x *StateExpiryAccessHistory) Reset() {
	*x = StateExpiryAccessHistory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateExpiryAccessHistory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateExpiryAccessHistory) ProtoMessage() {}

func (x *StateExpiryAccessHistory) ProtoReflect() protoreflect.Message {
	mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateExpiryAccessHistory.ProtoReflect.Descriptor instead.
func (*StateExpiryAccessHistory) Descriptor() ([]byte, []int) {
	return file_backend_pkg_api_v1_proto_public_proto_rawDescGZIP(), []int{17}
}

func (x *StateExpiryAccessHistory) GetChunkStartBlockNumber() uint32 {
	if x != nil {
		return x.ChunkStartBlockNumber
	}
	return 0
}

func (x *StateExpiryAccessHistory) GetFirstAccessedAccounts() uint32 {
	if x != nil {
		return x.FirstAccessedAccounts
	}
	return 0
}

func (x *StateExpiryAccessHistory) GetLastAccessedAccounts() uint32 {
	if x != nil {
		return x.LastAccessedAccounts
	}
	return 0
}

// StateExpiryStorageHistoryResponse is the v1 API response for state expiry storage slot history data.
// This endpoint provides aggregated data about Ethereum storage slot access patterns chunked by 10000 blocks.
type StateExpiryStorageHistoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items      []*StateExpiryStorageHistory `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	Pagination *PaginationMetadata          `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	Filters    *FilterMetadata              `protobuf:"bytes,3,opt,name=filters,proto3" json:"filters,omitempty"`
}

func (x *StateExpiryStorageHistoryResponse) Reset() {
	*x = StateExpiryStorageHistoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateExpiryStorageHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateExpiryStorageHistoryResponse) ProtoMessage() {}

func (x *StateExpiryStorageHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateExpiryStorageHistoryResponse.ProtoReflect.Descriptor instead.
func (*StateExpiryStorageHistoryResponse) Descriptor() ([]byte, []int) {
	return file_backend_pkg_api_v1_proto_public_proto_rawDescGZIP(), []int{18}
}

func (x *StateExpiryStorageHistoryResponse) GetItems() []*StateExpiryStorageHistory {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *StateExpiryStorageHistoryResponse) GetPagination() *PaginationMetadata {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *StateExpiryStorageHistoryResponse) GetFilters() *FilterMetadata {
	if x != nil {
		return x.Filters
	}
	return nil
}

// StateExpiryStorageHistory represents storage slot statistics for a 10000-block chunk.
// This data is useful for analyzing state expiry patterns and understanding storage slot activity over time.
type StateExpiryStorageHistory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The starting block number of this 10000-block chunk
	ChunkStartBlockNumber uint32 `protobuf:"varint,1,opt,name=chunk_start_block_number,json=chunkStartBlockNumber,proto3" json:"chunk_start_block_number,omitempty"`
	// Number of storage slots that were accessed for the first time in this chunk
	// These are slots that had never been accessed before this chunk
	FirstAccessedSlots uint32 `protobuf:"varint,2,opt,name=first_accessed_slots,json=firstAccessedSlots,proto3" json:"first_accessed_slots,omitempty"`
	// Number of storage slots whose most recent access was in this chunk
	// These slots haven't been accessed in any later chunks
	LastAccessedSlots uint32 `protobuf:"varint,3,opt,name=last_accessed_slots,json=lastAccessedSlots,proto3" json:"last_accessed_slots,omitempty"`
}

func (x *StateExpiryStorageHistory) Reset() {
	*x = StateExpiryStorageHistory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateExpiryStorageHistory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateExpiryStorageHistory) ProtoMessage() {}

func (x *StateExpiryStorageHistory) ProtoReflect() protoreflect.Message {
	mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateExpiryStorageHistory.ProtoReflect.Descriptor instead.
func (*StateExpiryStorageHistory) Descriptor() ([]byte, []int) {
	return file_backend_pkg_api_v1_proto_public_proto_rawDescGZIP(), []int{19}
}

func (x *StateExpiryStorageHistory) GetChunkStartBlockNumber() uint32 {
	if x != nil {
		return x.ChunkStartBlockNumber
	}
	return 0
}

func (x *StateExpiryStorageHistory) GetFirstAccessedSlots() uint32 {
	if x != nil {
		return x.FirstAccessedSlots
	}
	return 0
}

func (x *StateExpiryStorageHistory) GetLastAccessedSlots() uint32 {
	if x != nil {
		return x.LastAccessedSlots
	}
	return 0
}

// StateExpiryStorageExpiredTopResponse is the v1 API response for top contracts by expired storage slots.
// This endpoint provides the top 100 contracts ranked by the number of expired storage slots (not accessed in last 365 days).
type StateExpiryStorageExpiredTopResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items   []*StateExpiryStorageExpiredTop `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	Filters *FilterMetadata                 `protobuf:"bytes,2,opt,name=filters,proto3" json:"filters,omitempty"`
}

func (x *StateExpiryStorageExpiredTopResponse) Reset() {
	*x = StateExpiryStorageExpiredTopResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateExpiryStorageExpiredTopResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateExpiryStorageExpiredTopResponse) ProtoMessage() {}

func (x *StateExpiryStorageExpiredTopResponse) ProtoReflect() protoreflect.Message {
	mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateExpiryStorageExpiredTopResponse.ProtoReflect.Descriptor instead.
func (*StateExpiryStorageExpiredTopResponse) Descriptor() ([]byte, []int) {
	return file_backend_pkg_api_v1_proto_public_proto_rawDescGZIP(), []int{20}
}

func (x *StateExpiryStorageExpiredTopResponse) GetItems() []*StateExpiryStorageExpiredTop {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *StateExpiryStorageExpiredTopResponse) GetFilters() *FilterMetadata {
	if x != nil {
		return x.Filters
	}
	return nil
}

// StateExpiryStorageExpiredTop represents a contract ranked by expired storage slots for public API consumption.
type StateExpiryStorageExpiredTop struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Rank by expired storage slots (1=highest)
	Rank uint32 `protobuf:"varint,1,opt,name=rank,proto3" json:"rank,omitempty"`
	// The contract address
	ContractAddress string `protobuf:"bytes,2,opt,name=contract_address,json=contractAddress,proto3" json:"contract_address,omitempty"`
	// Number of expired storage slots for this contract (not accessed in last 365 days)
	ExpiredSlots uint64 `protobuf:"varint,3,opt,name=expired_slots,json=expiredSlots,proto3" json:"expired_slots,omitempty"`
}

func (x *StateExpiryStorageExpiredTop) Reset() {
	*x = StateExpiryStorageExpiredTop{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateExpiryStorageExpiredTop) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateExpiryStorageExpiredTop) ProtoMessage() {}

func (x *StateExpiryStorageExpiredTop) ProtoReflect() protoreflect.Message {
	mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateExpiryStorageExpiredTop.ProtoReflect.Descriptor instead.
func (*StateExpiryStorageExpiredTop) Descriptor() ([]byte, []int) {
	return file_backend_pkg_api_v1_proto_public_proto_rawDescGZIP(), []int{21}
}

func (x *StateExpiryStorageExpiredTop) GetRank() uint32 {
	if x != nil {
		return x.Rank
	}
	return 0
}

func (x *StateExpiryStorageExpiredTop) GetContractAddress() string {
	if x != nil {
		return x.ContractAddress
	}
	return ""
}

func (x *StateExpiryStorageExpiredTop) GetExpiredSlots() uint64 {
	if x != nil {
		return x.ExpiredSlots
	}
	return 0
}

// StateExpiryStorageTopResponse is the v1 API response for top contracts by total storage slots.
// This endpoint provides the top 100 contracts ranked by the total number of storage slots.
type StateExpiryStorageTopResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items   []*StateExpiryStorageTop `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	Filters *FilterMetadata          `protobuf:"bytes,2,opt,name=filters,proto3" json:"filters,omitempty"`
}

func (x *StateExpiryStorageTopResponse) Reset() {
	*x = StateExpiryStorageTopResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateExpiryStorageTopResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateExpiryStorageTopResponse) ProtoMessage() {}

func (x *StateExpiryStorageTopResponse) ProtoReflect() protoreflect.Message {
	mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateExpiryStorageTopResponse.ProtoReflect.Descriptor instead.
func (*StateExpiryStorageTopResponse) Descriptor() ([]byte, []int) {
	return file_backend_pkg_api_v1_proto_public_proto_rawDescGZIP(), []int{22}
}

func (x *StateExpiryStorageTopResponse) GetItems() []*StateExpiryStorageTop {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *StateExpiryStorageTopResponse) GetFilters() *FilterMetadata {
	if x != nil {
		return x.Filters
	}
	return nil
}

// StateExpiryStorageTop represents a contract ranked by total storage slots for public API consumption.
type StateExpiryStorageTop struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Rank by total storage slots (1=highest)
	Rank uint32 `protobuf:"varint,1,opt,name=rank,proto3" json:"rank,omitempty"`
	// The contract address
	ContractAddress string `protobuf:"bytes,2,opt,name=contract_address,json=contractAddress,proto3" json:"contract_address,omitempty"`
	// Total number of storage slots for this contract
	TotalStorageSlots uint64 `protobuf:"varint,3,opt,name=total_storage_slots,json=totalStorageSlots,proto3" json:"total_storage_slots,omitempty"`
}

func (x *StateExpiryStorageTop) Reset() {
	*x = StateExpiryStorageTop{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateExpiryStorageTop) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateExpiryStorageTop) ProtoMessage() {}

func (x *StateExpiryStorageTop) ProtoReflect() protoreflect.Message {
	mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateExpiryStorageTop.ProtoReflect.Descriptor instead.
func (*StateExpiryStorageTop) Descriptor() ([]byte, []int) {
	return file_backend_pkg_api_v1_proto_public_proto_rawDescGZIP(), []int{23}
}

func (x *StateExpiryStorageTop) GetRank() uint32 {
	if x != nil {
		return x.Rank
	}
	return 0
}

func (x *StateExpiryStorageTop) GetContractAddress() string {
	if x != nil {
		return x.ContractAddress
	}
	return ""
}

func (x *StateExpiryStorageTop) GetTotalStorageSlots() uint64 {
	if x != nil {
		return x.TotalStorageSlots
	}
	return 0
}

// ListBeaconSlotMevRelayResponse is the v1 API response for MEV relay bid counts by slot.
type ListBeaconSlotMevRelayResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Relays     []*MevRelayBidCount `protobuf:"bytes,1,rep,name=relays,proto3" json:"relays,omitempty"`
	Pagination *PaginationMetadata `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	Filters    *FilterMetadata     `protobuf:"bytes,3,opt,name=filters,proto3" json:"filters,omitempty"`
}

func (x *ListBeaconSlotMevRelayResponse) Reset() {
	*x = ListBeaconSlotMevRelayResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListBeaconSlotMevRelayResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBeaconSlotMevRelayResponse) ProtoMessage() {}

func (x *ListBeaconSlotMevRelayResponse) ProtoReflect() protoreflect.Message {
	mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBeaconSlotMevRelayResponse.ProtoReflect.Descriptor instead.
func (*ListBeaconSlotMevRelayResponse) Descriptor() ([]byte, []int) {
	return file_backend_pkg_api_v1_proto_public_proto_rawDescGZIP(), []int{24}
}

func (x *ListBeaconSlotMevRelayResponse) GetRelays() []*MevRelayBidCount {
	if x != nil {
		return x.Relays
	}
	return nil
}

func (x *ListBeaconSlotMevRelayResponse) GetPagination() *PaginationMetadata {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *ListBeaconSlotMevRelayResponse) GetFilters() *FilterMetadata {
	if x != nil {
		return x.Filters
	}
	return nil
}

// MevRelayBidCount represents MEV relay bid statistics for public API consumption.
type MevRelayBidCount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RelayName string `protobuf:"bytes,1,opt,name=relay_name,json=relayName,proto3" json:"relay_name,omitempty"` // Relay identifier
	BidCount  uint32 `protobuf:"varint,2,opt,name=bid_count,json=bidCount,proto3" json:"bid_count,omitempty"`   // Total number of bids
}

func (x *MevRelayBidCount) Reset() {
	*x = MevRelayBidCount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MevRelayBidCount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MevRelayBidCount) ProtoMessage() {}

func (x *MevRelayBidCount) ProtoReflect() protoreflect.Message {
	mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MevRelayBidCount.ProtoReflect.Descriptor instead.
func (*MevRelayBidCount) Descriptor() ([]byte, []int) {
	return file_backend_pkg_api_v1_proto_public_proto_rawDescGZIP(), []int{25}
}

func (x *MevRelayBidCount) GetRelayName() string {
	if x != nil {
		return x.RelayName
	}
	return ""
}

func (x *MevRelayBidCount) GetBidCount() uint32 {
	if x != nil {
		return x.BidCount
	}
	return 0
}

// ListBeaconSlotMevBuilderCountResponse is the v1 API response for MEV builder bid counts by slot.
type ListBeaconSlotMevBuilderCountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Builders   []*MevBuilderBidCount `protobuf:"bytes,1,rep,name=builders,proto3" json:"builders,omitempty"`
	Pagination *PaginationMetadata   `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	Filters    *FilterMetadata       `protobuf:"bytes,3,opt,name=filters,proto3" json:"filters,omitempty"`
}

func (x *ListBeaconSlotMevBuilderCountResponse) Reset() {
	*x = ListBeaconSlotMevBuilderCountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListBeaconSlotMevBuilderCountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBeaconSlotMevBuilderCountResponse) ProtoMessage() {}

func (x *ListBeaconSlotMevBuilderCountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBeaconSlotMevBuilderCountResponse.ProtoReflect.Descriptor instead.
func (*ListBeaconSlotMevBuilderCountResponse) Descriptor() ([]byte, []int) {
	return file_backend_pkg_api_v1_proto_public_proto_rawDescGZIP(), []int{26}
}

func (x *ListBeaconSlotMevBuilderCountResponse) GetBuilders() []*MevBuilderBidCount {
	if x != nil {
		return x.Builders
	}
	return nil
}

func (x *ListBeaconSlotMevBuilderCountResponse) GetPagination() *PaginationMetadata {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *ListBeaconSlotMevBuilderCountResponse) GetFilters() *FilterMetadata {
	if x != nil {
		return x.Filters
	}
	return nil
}

// MevBuilderBidCount represents MEV builder bid statistics for public API consumption.
type MevBuilderBidCount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BuilderPubkey string `protobuf:"bytes,1,opt,name=builder_pubkey,json=builderPubkey,proto3" json:"builder_pubkey,omitempty"` // Builder public key identifier
	BidCount      uint32 `protobuf:"varint,2,opt,name=bid_count,json=bidCount,proto3" json:"bid_count,omitempty"`               // Total number of bids from this builder
}

func (x *MevBuilderBidCount) Reset() {
	*x = MevBuilderBidCount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MevBuilderBidCount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MevBuilderBidCount) ProtoMessage() {}

func (x *MevBuilderBidCount) ProtoReflect() protoreflect.Message {
	mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MevBuilderBidCount.ProtoReflect.Descriptor instead.
func (*MevBuilderBidCount) Descriptor() ([]byte, []int) {
	return file_backend_pkg_api_v1_proto_public_proto_rawDescGZIP(), []int{27}
}

func (x *MevBuilderBidCount) GetBuilderPubkey() string {
	if x != nil {
		return x.BuilderPubkey
	}
	return ""
}

func (x *MevBuilderBidCount) GetBidCount() uint32 {
	if x != nil {
		return x.BidCount
	}
	return 0
}

// ListBeaconSlotMevResponse is the v1 API response for MEV block data by slot.
type ListBeaconSlotMevResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Blocks     []*MevBlock         `protobuf:"bytes,1,rep,name=blocks,proto3" json:"blocks,omitempty"`
	Pagination *PaginationMetadata `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	Filters    *FilterMetadata     `protobuf:"bytes,3,opt,name=filters,proto3" json:"filters,omitempty"`
}

func (x *ListBeaconSlotMevResponse) Reset() {
	*x = ListBeaconSlotMevResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListBeaconSlotMevResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBeaconSlotMevResponse) ProtoMessage() {}

func (x *ListBeaconSlotMevResponse) ProtoReflect() protoreflect.Message {
	mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBeaconSlotMevResponse.ProtoReflect.Descriptor instead.
func (*ListBeaconSlotMevResponse) Descriptor() ([]byte, []int) {
	return file_backend_pkg_api_v1_proto_public_proto_rawDescGZIP(), []int{28}
}

func (x *ListBeaconSlotMevResponse) GetBlocks() []*MevBlock {
	if x != nil {
		return x.Blocks
	}
	return nil
}

func (x *ListBeaconSlotMevResponse) GetPagination() *PaginationMetadata {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *ListBeaconSlotMevResponse) GetFilters() *FilterMetadata {
	if x != nil {
		return x.Filters
	}
	return nil
}

// MevBlock represents MEV block data for public API consumption.
type MevBlock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockRoot            string   `protobuf:"bytes,1,opt,name=block_root,json=blockRoot,proto3" json:"block_root,omitempty"`                                    // Block root hash
	BlockHash            string   `protobuf:"bytes,2,opt,name=block_hash,json=blockHash,proto3" json:"block_hash,omitempty"`                                    // Execution layer block hash
	BlockNumber          uint64   `protobuf:"varint,3,opt,name=block_number,json=blockNumber,proto3" json:"block_number,omitempty"`                             // Execution layer block number
	ParentHash           string   `protobuf:"bytes,4,opt,name=parent_hash,json=parentHash,proto3" json:"parent_hash,omitempty"`                                 // Parent block hash
	BuilderPubkey        string   `protobuf:"bytes,5,opt,name=builder_pubkey,json=builderPubkey,proto3" json:"builder_pubkey,omitempty"`                        // Builder public key
	ProposerPubkey       string   `protobuf:"bytes,6,opt,name=proposer_pubkey,json=proposerPubkey,proto3" json:"proposer_pubkey,omitempty"`                     // Proposer public key
	ProposerFeeRecipient string   `protobuf:"bytes,7,opt,name=proposer_fee_recipient,json=proposerFeeRecipient,proto3" json:"proposer_fee_recipient,omitempty"` // Fee recipient address
	GasLimit             uint64   `protobuf:"varint,8,opt,name=gas_limit,json=gasLimit,proto3" json:"gas_limit,omitempty"`                                      // Gas limit
	GasUsed              uint64   `protobuf:"varint,9,opt,name=gas_used,json=gasUsed,proto3" json:"gas_used,omitempty"`                                         // Gas used
	Value                string   `protobuf:"bytes,10,opt,name=value,proto3" json:"value,omitempty"`                                                            // MEV value in wei
	TransactionCount     uint32   `protobuf:"varint,11,opt,name=transaction_count,json=transactionCount,proto3" json:"transaction_count,omitempty"`             // Number of transactions
	RelayNames           []string `protobuf:"bytes,12,rep,name=relay_names,json=relayNames,proto3" json:"relay_names,omitempty"`                                // Relay names that delivered the payload
	EarliestBidTime      string   `protobuf:"bytes,13,opt,name=earliest_bid_time,json=earliestBidTime,proto3" json:"earliest_bid_time,omitempty"`               // Earliest bid timestamp (ISO 8601)
}

func (x *MevBlock) Reset() {
	*x = MevBlock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MevBlock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MevBlock) ProtoMessage() {}

func (x *MevBlock) ProtoReflect() protoreflect.Message {
	mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MevBlock.ProtoReflect.Descriptor instead.
func (*MevBlock) Descriptor() ([]byte, []int) {
	return file_backend_pkg_api_v1_proto_public_proto_rawDescGZIP(), []int{29}
}

func (x *MevBlock) GetBlockRoot() string {
	if x != nil {
		return x.BlockRoot
	}
	return ""
}

func (x *MevBlock) GetBlockHash() string {
	if x != nil {
		return x.BlockHash
	}
	return ""
}

func (x *MevBlock) GetBlockNumber() uint64 {
	if x != nil {
		return x.BlockNumber
	}
	return 0
}

func (x *MevBlock) GetParentHash() string {
	if x != nil {
		return x.ParentHash
	}
	return ""
}

func (x *MevBlock) GetBuilderPubkey() string {
	if x != nil {
		return x.BuilderPubkey
	}
	return ""
}

func (x *MevBlock) GetProposerPubkey() string {
	if x != nil {
		return x.ProposerPubkey
	}
	return ""
}

func (x *MevBlock) GetProposerFeeRecipient() string {
	if x != nil {
		return x.ProposerFeeRecipient
	}
	return ""
}

func (x *MevBlock) GetGasLimit() uint64 {
	if x != nil {
		return x.GasLimit
	}
	return 0
}

func (x *MevBlock) GetGasUsed() uint64 {
	if x != nil {
		return x.GasUsed
	}
	return 0
}

func (x *MevBlock) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *MevBlock) GetTransactionCount() uint32 {
	if x != nil {
		return x.TransactionCount
	}
	return 0
}

func (x *MevBlock) GetRelayNames() []string {
	if x != nil {
		return x.RelayNames
	}
	return nil
}

func (x *MevBlock) GetEarliestBidTime() string {
	if x != nil {
		return x.EarliestBidTime
	}
	return ""
}

// ListBeaconSlotMevBuilderResponse is the v1 API response for highest MEV builder bids by slot.
type ListBeaconSlotMevBuilderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Builders   []*MevBuilderBid    `protobuf:"bytes,1,rep,name=builders,proto3" json:"builders,omitempty"`
	Pagination *PaginationMetadata `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	Filters    *FilterMetadata     `protobuf:"bytes,3,opt,name=filters,proto3" json:"filters,omitempty"`
}

func (x *ListBeaconSlotMevBuilderResponse) Reset() {
	*x = ListBeaconSlotMevBuilderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListBeaconSlotMevBuilderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBeaconSlotMevBuilderResponse) ProtoMessage() {}

func (x *ListBeaconSlotMevBuilderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBeaconSlotMevBuilderResponse.ProtoReflect.Descriptor instead.
func (*ListBeaconSlotMevBuilderResponse) Descriptor() ([]byte, []int) {
	return file_backend_pkg_api_v1_proto_public_proto_rawDescGZIP(), []int{30}
}

func (x *ListBeaconSlotMevBuilderResponse) GetBuilders() []*MevBuilderBid {
	if x != nil {
		return x.Builders
	}
	return nil
}

func (x *ListBeaconSlotMevBuilderResponse) GetPagination() *PaginationMetadata {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *ListBeaconSlotMevBuilderResponse) GetFilters() *FilterMetadata {
	if x != nil {
		return x.Filters
	}
	return nil
}

// MevBuilderBid represents the highest MEV bid from a builder for a slot for public API consumption.
type MevBuilderBid struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockHash     string   `protobuf:"bytes,1,opt,name=block_hash,json=blockHash,proto3" json:"block_hash,omitempty"`    // Execution block hash
	Value         string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`                             // Bid value in wei
	RelayNames    []string `protobuf:"bytes,3,rep,name=relay_names,json=relayNames,proto3" json:"relay_names,omitempty"` // Relays that received the bid
	BuilderPubkey string   `protobuf:"bytes,4,opt,name=builder_pubkey,json=builderPubkey,proto3" json:"builder_pubkey,omitempty"`
	ChunkStartMs  int32    `protobuf:"varint,5,opt,name=chunk_start_ms,json=chunkStartMs,proto3" json:"chunk_start_ms,omitempty"` // 50ms chunk start time from slot start (e.g., 1500 for 1500-1550ms chunk)
}

func (x *MevBuilderBid) Reset() {
	*x = MevBuilderBid{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MevBuilderBid) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MevBuilderBid) ProtoMessage() {}

func (x *MevBuilderBid) ProtoReflect() protoreflect.Message {
	mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MevBuilderBid.ProtoReflect.Descriptor instead.
func (*MevBuilderBid) Descriptor() ([]byte, []int) {
	return file_backend_pkg_api_v1_proto_public_proto_rawDescGZIP(), []int{31}
}

func (x *MevBuilderBid) GetBlockHash() string {
	if x != nil {
		return x.BlockHash
	}
	return ""
}

func (x *MevBuilderBid) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *MevBuilderBid) GetRelayNames() []string {
	if x != nil {
		return x.RelayNames
	}
	return nil
}

func (x *MevBuilderBid) GetBuilderPubkey() string {
	if x != nil {
		return x.BuilderPubkey
	}
	return ""
}

func (x *MevBuilderBid) GetChunkStartMs() int32 {
	if x != nil {
		return x.ChunkStartMs
	}
	return 0
}

// Error response.
type ErrorResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error     string `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Message   string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Code      int32  `protobuf:"varint,3,opt,name=code,proto3" json:"code,omitempty"`
	RequestId string `protobuf:"bytes,4,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
}

func (x *ErrorResponse) Reset() {
	*x = ErrorResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ErrorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorResponse) ProtoMessage() {}

func (x *ErrorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorResponse.ProtoReflect.Descriptor instead.
func (*ErrorResponse) Descriptor() ([]byte, []int) {
	return file_backend_pkg_api_v1_proto_public_proto_rawDescGZIP(), []int{32}
}

func (x *ErrorResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *ErrorResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ErrorResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ErrorResponse) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

// GetConfigResponse is the v1 API response for getting the complete lab configuration.
type GetConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Config *FrontendConfig `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *GetConfigResponse) Reset() {
	*x = GetConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConfigResponse) ProtoMessage() {}

func (x *GetConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConfigResponse.ProtoReflect.Descriptor instead.
func (*GetConfigResponse) Descriptor() ([]byte, []int) {
	return file_backend_pkg_api_v1_proto_public_proto_rawDescGZIP(), []int{33}
}

func (x *GetConfigResponse) GetConfig() *FrontendConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

// FrontendConfig represents the complete frontend configuration for public API consumption.
type FrontendConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ethereum    *EthereumConfig     `protobuf:"bytes,1,opt,name=ethereum,proto3" json:"ethereum,omitempty"`
	Experiments []*ExperimentConfig `protobuf:"bytes,2,rep,name=experiments,proto3" json:"experiments,omitempty"`
}

func (x *FrontendConfig) Reset() {
	*x = FrontendConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrontendConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrontendConfig) ProtoMessage() {}

func (x *FrontendConfig) ProtoReflect() protoreflect.Message {
	mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrontendConfig.ProtoReflect.Descriptor instead.
func (*FrontendConfig) Descriptor() ([]byte, []int) {
	return file_backend_pkg_api_v1_proto_public_proto_rawDescGZIP(), []int{34}
}

func (x *FrontendConfig) GetEthereum() *EthereumConfig {
	if x != nil {
		return x.Ethereum
	}
	return nil
}

func (x *FrontendConfig) GetExperiments() []*ExperimentConfig {
	if x != nil {
		return x.Experiments
	}
	return nil
}

// EthereumConfig contains Ethereum-related configuration for public API consumption.
type EthereumConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Networks map[string]*NetworkConfig `protobuf:"bytes,1,rep,name=networks,proto3" json:"networks,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *EthereumConfig) Reset() {
	*x = EthereumConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EthereumConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EthereumConfig) ProtoMessage() {}

func (x *EthereumConfig) ProtoReflect() protoreflect.Message {
	mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EthereumConfig.ProtoReflect.Descriptor instead.
func (*EthereumConfig) Descriptor() ([]byte, []int) {
	return file_backend_pkg_api_v1_proto_public_proto_rawDescGZIP(), []int{35}
}

func (x *EthereumConfig) GetNetworks() map[string]*NetworkConfig {
	if x != nil {
		return x.Networks
	}
	return nil
}

// NetworkConfig represents configuration for a single network for public API consumption.
type NetworkConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string      `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Status      string      `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	ChainId     int64       `protobuf:"varint,3,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	Description string      `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	GenesisTime int64       `protobuf:"varint,5,opt,name=genesis_time,json=genesisTime,proto3" json:"genesis_time,omitempty"`
	Forks       *ForkConfig `protobuf:"bytes,6,opt,name=forks,proto3" json:"forks,omitempty"`
	LastUpdated string      `protobuf:"bytes,7,opt,name=last_updated,json=lastUpdated,proto3" json:"last_updated,omitempty"`
}

func (x *NetworkConfig) Reset() {
	*x = NetworkConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetworkConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkConfig) ProtoMessage() {}

func (x *NetworkConfig) ProtoReflect() protoreflect.Message {
	mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkConfig.ProtoReflect.Descriptor instead.
func (*NetworkConfig) Descriptor() ([]byte, []int) {
	return file_backend_pkg_api_v1_proto_public_proto_rawDescGZIP(), []int{36}
}

func (x *NetworkConfig) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NetworkConfig) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *NetworkConfig) GetChainId() int64 {
	if x != nil {
		return x.ChainId
	}
	return 0
}

func (x *NetworkConfig) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *NetworkConfig) GetGenesisTime() int64 {
	if x != nil {
		return x.GenesisTime
	}
	return 0
}

func (x *NetworkConfig) GetForks() *ForkConfig {
	if x != nil {
		return x.Forks
	}
	return nil
}

func (x *NetworkConfig) GetLastUpdated() string {
	if x != nil {
		return x.LastUpdated
	}
	return ""
}

// ForkConfig contains fork information for public API consumption.
type ForkConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Consensus *ConsensusForks `protobuf:"bytes,1,opt,name=consensus,proto3" json:"consensus,omitempty"`
}

func (x *ForkConfig) Reset() {
	*x = ForkConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForkConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForkConfig) ProtoMessage() {}

func (x *ForkConfig) ProtoReflect() protoreflect.Message {
	mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForkConfig.ProtoReflect.Descriptor instead.
func (*ForkConfig) Descriptor() ([]byte, []int) {
	return file_backend_pkg_api_v1_proto_public_proto_rawDescGZIP(), []int{37}
}

func (x *ForkConfig) GetConsensus() *ConsensusForks {
	if x != nil {
		return x.Consensus
	}
	return nil
}

// ConsensusForks contains consensus layer fork information for public API consumption.
type ConsensusForks struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Electra *ForkInfo `protobuf:"bytes,1,opt,name=electra,proto3" json:"electra,omitempty"`
	Fusaka  *ForkInfo `protobuf:"bytes,2,opt,name=fusaka,proto3" json:"fusaka,omitempty"`
}

func (x *ConsensusForks) Reset() {
	*x = ConsensusForks{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConsensusForks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConsensusForks) ProtoMessage() {}

func (x *ConsensusForks) ProtoReflect() protoreflect.Message {
	mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConsensusForks.ProtoReflect.Descriptor instead.
func (*ConsensusForks) Descriptor() ([]byte, []int) {
	return file_backend_pkg_api_v1_proto_public_proto_rawDescGZIP(), []int{38}
}

func (x *ConsensusForks) GetElectra() *ForkInfo {
	if x != nil {
		return x.Electra
	}
	return nil
}

func (x *ConsensusForks) GetFusaka() *ForkInfo {
	if x != nil {
		return x.Fusaka
	}
	return nil
}

// ForkInfo contains information about a specific fork for public API consumption.
type ForkInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Epoch             int64             `protobuf:"varint,1,opt,name=epoch,proto3" json:"epoch,omitempty"`
	MinClientVersions map[string]string `protobuf:"bytes,2,rep,name=min_client_versions,json=minClientVersions,proto3" json:"min_client_versions,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ForkInfo) Reset() {
	*x = ForkInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForkInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForkInfo) ProtoMessage() {}

func (x *ForkInfo) ProtoReflect() protoreflect.Message {
	mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForkInfo.ProtoReflect.Descriptor instead.
func (*ForkInfo) Descriptor() ([]byte, []int) {
	return file_backend_pkg_api_v1_proto_public_proto_rawDescGZIP(), []int{39}
}

func (x *ForkInfo) GetEpoch() int64 {
	if x != nil {
		return x.Epoch
	}
	return 0
}

func (x *ForkInfo) GetMinClientVersions() map[string]string {
	if x != nil {
		return x.MinClientVersions
	}
	return nil
}

// ExperimentsConfig contains all experiments configuration for public API consumption.
type ExperimentsConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Experiments []*ExperimentConfig `protobuf:"bytes,1,rep,name=experiments,proto3" json:"experiments,omitempty"`
}

func (x *ExperimentsConfig) Reset() {
	*x = ExperimentsConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExperimentsConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExperimentsConfig) ProtoMessage() {}

func (x *ExperimentsConfig) ProtoReflect() protoreflect.Message {
	mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExperimentsConfig.ProtoReflect.Descriptor instead.
func (*ExperimentsConfig) Descriptor() ([]byte, []int) {
	return file_backend_pkg_api_v1_proto_public_proto_rawDescGZIP(), []int{40}
}

func (x *ExperimentsConfig) GetExperiments() []*ExperimentConfig {
	if x != nil {
		return x.Experiments
	}
	return nil
}

// ExperimentConfig represents a single experiment for public API consumption.
type ExperimentConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               string                                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Enabled          bool                                   `protobuf:"varint,2,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Networks         []string                               `protobuf:"bytes,3,rep,name=networks,proto3" json:"networks,omitempty"`
	Config           *structpb.Struct                       `protobuf:"bytes,4,opt,name=config,proto3" json:"config,omitempty"`
	DataAvailability map[string]*ExperimentDataAvailability `protobuf:"bytes,5,rep,name=data_availability,json=dataAvailability,proto3" json:"data_availability,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ExperimentConfig) Reset() {
	*x = ExperimentConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExperimentConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExperimentConfig) ProtoMessage() {}

func (x *ExperimentConfig) ProtoReflect() protoreflect.Message {
	mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExperimentConfig.ProtoReflect.Descriptor instead.
func (*ExperimentConfig) Descriptor() ([]byte, []int) {
	return file_backend_pkg_api_v1_proto_public_proto_rawDescGZIP(), []int{41}
}

func (x *ExperimentConfig) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ExperimentConfig) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *ExperimentConfig) GetNetworks() []string {
	if x != nil {
		return x.Networks
	}
	return nil
}

func (x *ExperimentConfig) GetConfig() *structpb.Struct {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *ExperimentConfig) GetDataAvailability() map[string]*ExperimentDataAvailability {
	if x != nil {
		return x.DataAvailability
	}
	return nil
}

// ExperimentDataAvailability contains data availability information for an experiment on a specific network.
type ExperimentDataAvailability struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MinSlot uint64 `protobuf:"varint,1,opt,name=min_slot,json=minSlot,proto3" json:"min_slot,omitempty"`
	MaxSlot uint64 `protobuf:"varint,2,opt,name=max_slot,json=maxSlot,proto3" json:"max_slot,omitempty"`
}

func (x *ExperimentDataAvailability) Reset() {
	*x = ExperimentDataAvailability{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExperimentDataAvailability) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExperimentDataAvailability) ProtoMessage() {}

func (x *ExperimentDataAvailability) ProtoReflect() protoreflect.Message {
	mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExperimentDataAvailability.ProtoReflect.Descriptor instead.
func (*ExperimentDataAvailability) Descriptor() ([]byte, []int) {
	return file_backend_pkg_api_v1_proto_public_proto_rawDescGZIP(), []int{42}
}

func (x *ExperimentDataAvailability) GetMinSlot() uint64 {
	if x != nil {
		return x.MinSlot
	}
	return 0
}

func (x *ExperimentDataAvailability) GetMaxSlot() uint64 {
	if x != nil {
		return x.MaxSlot
	}
	return 0
}

// GetExperimentConfigRequest defines the request for getting a single experiment's configuration.
type GetExperimentConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExperimentId string `protobuf:"bytes,1,opt,name=experiment_id,json=experimentId,proto3" json:"experiment_id,omitempty"`
}

func (x *GetExperimentConfigRequest) Reset() {
	*x = GetExperimentConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetExperimentConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExperimentConfigRequest) ProtoMessage() {}

func (x *GetExperimentConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExperimentConfigRequest.ProtoReflect.Descriptor instead.
func (*GetExperimentConfigRequest) Descriptor() ([]byte, []int) {
	return file_backend_pkg_api_v1_proto_public_proto_rawDescGZIP(), []int{43}
}

func (x *GetExperimentConfigRequest) GetExperimentId() string {
	if x != nil {
		return x.ExperimentId
	}
	return ""
}

// GetExperimentConfigResponse returns a single experiment's full configuration with data availability.
type GetExperimentConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Experiment *ExperimentConfig `protobuf:"bytes,1,opt,name=experiment,proto3" json:"experiment,omitempty"`
}

func (x *GetExperimentConfigResponse) Reset() {
	*x = GetExperimentConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetExperimentConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExperimentConfigResponse) ProtoMessage() {}

func (x *GetExperimentConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExperimentConfigResponse.ProtoReflect.Descriptor instead.
func (*GetExperimentConfigResponse) Descriptor() ([]byte, []int) {
	return file_backend_pkg_api_v1_proto_public_proto_rawDescGZIP(), []int{44}
}

func (x *GetExperimentConfigResponse) GetExperiment() *ExperimentConfig {
	if x != nil {
		return x.Experiment
	}
	return nil
}

// ListBeaconSlotBlockTimingResponse is the v1 API response for block timing data.
type ListBeaconSlotBlockTimingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nodes      []*BlockTimingNode  `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
	Pagination *PaginationMetadata `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	Filters    *FilterMetadata     `protobuf:"bytes,3,opt,name=filters,proto3" json:"filters,omitempty"`
}

func (x *ListBeaconSlotBlockTimingResponse) Reset() {
	*x = ListBeaconSlotBlockTimingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListBeaconSlotBlockTimingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBeaconSlotBlockTimingResponse) ProtoMessage() {}

func (x *ListBeaconSlotBlockTimingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBeaconSlotBlockTimingResponse.ProtoReflect.Descriptor instead.
func (*ListBeaconSlotBlockTimingResponse) Descriptor() ([]byte, []int) {
	return file_backend_pkg_api_v1_proto_public_proto_rawDescGZIP(), []int{45}
}

func (x *ListBeaconSlotBlockTimingResponse) GetNodes() []*BlockTimingNode {
	if x != nil {
		return x.Nodes
	}
	return nil
}

func (x *ListBeaconSlotBlockTimingResponse) GetPagination() *PaginationMetadata {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *ListBeaconSlotBlockTimingResponse) GetFilters() *FilterMetadata {
	if x != nil {
		return x.Filters
	}
	return nil
}

// BlockTimingNode represents a node that observed a block.
type BlockTimingNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId            string      `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Username          string      `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	SeenSlotStartDiff uint32      `protobuf:"varint,3,opt,name=seen_slot_start_diff,json=seenSlotStartDiff,proto3" json:"seen_slot_start_diff,omitempty"` // milliseconds from slot start
	Geo               *GeoInfo    `protobuf:"bytes,4,opt,name=geo,proto3" json:"geo,omitempty"`                                                           // reuse existing GeoInfo type
	Client            *ClientInfo `protobuf:"bytes,5,opt,name=client,proto3" json:"client,omitempty"`                                                     // reuse existing ClientInfo type
	Source            string      `protobuf:"bytes,6,opt,name=source,proto3" json:"source,omitempty"`                                                     // source of the event (e.g., "xatu-sentry")
}

func (x *BlockTimingNode) Reset() {
	*x = BlockTimingNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockTimingNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockTimingNode) ProtoMessage() {}

func (x *BlockTimingNode) ProtoReflect() protoreflect.Message {
	mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockTimingNode.ProtoReflect.Descriptor instead.
func (*BlockTimingNode) Descriptor() ([]byte, []int) {
	return file_backend_pkg_api_v1_proto_public_proto_rawDescGZIP(), []int{46}
}

func (x *BlockTimingNode) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *BlockTimingNode) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *BlockTimingNode) GetSeenSlotStartDiff() uint32 {
	if x != nil {
		return x.SeenSlotStartDiff
	}
	return 0
}

func (x *BlockTimingNode) GetGeo() *GeoInfo {
	if x != nil {
		return x.Geo
	}
	return nil
}

func (x *BlockTimingNode) GetClient() *ClientInfo {
	if x != nil {
		return x.Client
	}
	return nil
}

func (x *BlockTimingNode) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

// ListBeaconSlotBlobTimingResponse is the v1 API response for blob timing data.
type ListBeaconSlotBlobTimingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nodes      []*BlobTimingNode   `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
	Pagination *PaginationMetadata `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	Filters    *FilterMetadata     `protobuf:"bytes,3,opt,name=filters,proto3" json:"filters,omitempty"`
}

func (x *ListBeaconSlotBlobTimingResponse) Reset() {
	*x = ListBeaconSlotBlobTimingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListBeaconSlotBlobTimingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBeaconSlotBlobTimingResponse) ProtoMessage() {}

func (x *ListBeaconSlotBlobTimingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBeaconSlotBlobTimingResponse.ProtoReflect.Descriptor instead.
func (*ListBeaconSlotBlobTimingResponse) Descriptor() ([]byte, []int) {
	return file_backend_pkg_api_v1_proto_public_proto_rawDescGZIP(), []int{47}
}

func (x *ListBeaconSlotBlobTimingResponse) GetNodes() []*BlobTimingNode {
	if x != nil {
		return x.Nodes
	}
	return nil
}

func (x *ListBeaconSlotBlobTimingResponse) GetPagination() *PaginationMetadata {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *ListBeaconSlotBlobTimingResponse) GetFilters() *FilterMetadata {
	if x != nil {
		return x.Filters
	}
	return nil
}

// BlobTimingNode represents a node that observed a blob.
type BlobTimingNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId            string      `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Username          string      `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	SeenSlotStartDiff uint32      `protobuf:"varint,3,opt,name=seen_slot_start_diff,json=seenSlotStartDiff,proto3" json:"seen_slot_start_diff,omitempty"` // milliseconds from slot start
	BlobIndex         uint32      `protobuf:"varint,4,opt,name=blob_index,json=blobIndex,proto3" json:"blob_index,omitempty"`                             // blob index within the block
	BlockRoot         string      `protobuf:"bytes,5,opt,name=block_root,json=blockRoot,proto3" json:"block_root,omitempty"`                              // beacon block root hash
	Geo               *GeoInfo    `protobuf:"bytes,6,opt,name=geo,proto3" json:"geo,omitempty"`                                                           // reuse existing GeoInfo type
	Client            *ClientInfo `protobuf:"bytes,7,opt,name=client,proto3" json:"client,omitempty"`                                                     // reuse existing ClientInfo type
	Source            string      `protobuf:"bytes,8,opt,name=source,proto3" json:"source,omitempty"`                                                     // source of the event (e.g., "xatu-sentry")
}

func (x *BlobTimingNode) Reset() {
	*x = BlobTimingNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlobTimingNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlobTimingNode) ProtoMessage() {}

func (x *BlobTimingNode) ProtoReflect() protoreflect.Message {
	mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlobTimingNode.ProtoReflect.Descriptor instead.
func (*BlobTimingNode) Descriptor() ([]byte, []int) {
	return file_backend_pkg_api_v1_proto_public_proto_rawDescGZIP(), []int{48}
}

func (x *BlobTimingNode) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *BlobTimingNode) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *BlobTimingNode) GetSeenSlotStartDiff() uint32 {
	if x != nil {
		return x.SeenSlotStartDiff
	}
	return 0
}

func (x *BlobTimingNode) GetBlobIndex() uint32 {
	if x != nil {
		return x.BlobIndex
	}
	return 0
}

func (x *BlobTimingNode) GetBlockRoot() string {
	if x != nil {
		return x.BlockRoot
	}
	return ""
}

func (x *BlobTimingNode) GetGeo() *GeoInfo {
	if x != nil {
		return x.Geo
	}
	return nil
}

func (x *BlobTimingNode) GetClient() *ClientInfo {
	if x != nil {
		return x.Client
	}
	return nil
}

func (x *BlobTimingNode) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

// ListBeaconSlotAttestationTimingResponse is the v1 API response for attestation timing data.
type ListBeaconSlotAttestationTimingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Chunks     []*AttestationTimingChunk `protobuf:"bytes,1,rep,name=chunks,proto3" json:"chunks,omitempty"`
	Pagination *PaginationMetadata       `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	Filters    *FilterMetadata           `protobuf:"bytes,3,opt,name=filters,proto3" json:"filters,omitempty"`
}

func (x *ListBeaconSlotAttestationTimingResponse) Reset() {
	*x = ListBeaconSlotAttestationTimingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListBeaconSlotAttestationTimingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBeaconSlotAttestationTimingResponse) ProtoMessage() {}

func (x *ListBeaconSlotAttestationTimingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBeaconSlotAttestationTimingResponse.ProtoReflect.Descriptor instead.
func (*ListBeaconSlotAttestationTimingResponse) Descriptor() ([]byte, []int) {
	return file_backend_pkg_api_v1_proto_public_proto_rawDescGZIP(), []int{49}
}

func (x *ListBeaconSlotAttestationTimingResponse) GetChunks() []*AttestationTimingChunk {
	if x != nil {
		return x.Chunks
	}
	return nil
}

func (x *ListBeaconSlotAttestationTimingResponse) GetPagination() *PaginationMetadata {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *ListBeaconSlotAttestationTimingResponse) GetFilters() *FilterMetadata {
	if x != nil {
		return x.Filters
	}
	return nil
}

// AttestationTimingChunk represents attestation timing data in 50ms chunks.
type AttestationTimingChunk struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockRoot        string `protobuf:"bytes,1,opt,name=block_root,json=blockRoot,proto3" json:"block_root,omitempty"`                       // beacon block root that was attested (empty if missed)
	ChunkStartMs     int64  `protobuf:"varint,2,opt,name=chunk_start_ms,json=chunkStartMs,proto3" json:"chunk_start_ms,omitempty"`           // milliseconds from slot start (e.g., 1500 for 1500-1550ms chunk)
	AttestationCount uint32 `protobuf:"varint,3,opt,name=attestation_count,json=attestationCount,proto3" json:"attestation_count,omitempty"` // number of attestations in this chunk
}

func (x *AttestationTimingChunk) Reset() {
	*x = AttestationTimingChunk{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttestationTimingChunk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttestationTimingChunk) ProtoMessage() {}

func (x *AttestationTimingChunk) ProtoReflect() protoreflect.Message {
	mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttestationTimingChunk.ProtoReflect.Descriptor instead.
func (*AttestationTimingChunk) Descriptor() ([]byte, []int) {
	return file_backend_pkg_api_v1_proto_public_proto_rawDescGZIP(), []int{50}
}

func (x *AttestationTimingChunk) GetBlockRoot() string {
	if x != nil {
		return x.BlockRoot
	}
	return ""
}

func (x *AttestationTimingChunk) GetChunkStartMs() int64 {
	if x != nil {
		return x.ChunkStartMs
	}
	return 0
}

func (x *AttestationTimingChunk) GetAttestationCount() uint32 {
	if x != nil {
		return x.AttestationCount
	}
	return 0
}

// ListBeaconSlotAttestationCorrectnessResponse is the v1 API response for attestation correctness data for a single slot.
type ListBeaconSlotAttestationCorrectnessResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Blocks  []*AttestationCorrectness `protobuf:"bytes,1,rep,name=blocks,proto3" json:"blocks,omitempty"` // Attestation correctness for blocks in the slot (may include forks)
	Filters *FilterMetadata           `protobuf:"bytes,2,opt,name=filters,proto3" json:"filters,omitempty"`
}

func (x *ListBeaconSlotAttestationCorrectnessResponse) Reset() {
	*x = ListBeaconSlotAttestationCorrectnessResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListBeaconSlotAttestationCorrectnessResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBeaconSlotAttestationCorrectnessResponse) ProtoMessage() {}

func (x *ListBeaconSlotAttestationCorrectnessResponse) ProtoReflect() protoreflect.Message {
	mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBeaconSlotAttestationCorrectnessResponse.ProtoReflect.Descriptor instead.
func (*ListBeaconSlotAttestationCorrectnessResponse) Descriptor() ([]byte, []int) {
	return file_backend_pkg_api_v1_proto_public_proto_rawDescGZIP(), []int{51}
}

func (x *ListBeaconSlotAttestationCorrectnessResponse) GetBlocks() []*AttestationCorrectness {
	if x != nil {
		return x.Blocks
	}
	return nil
}

func (x *ListBeaconSlotAttestationCorrectnessResponse) GetFilters() *FilterMetadata {
	if x != nil {
		return x.Filters
	}
	return nil
}

// AttestationCorrectness represents attestation correctness data for a block in a slot.
type AttestationCorrectness struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockRoot             string  `protobuf:"bytes,1,opt,name=block_root,json=blockRoot,proto3" json:"block_root,omitempty"`                                       // The beacon block root hash (may be empty for missed blocks)
	VotesMax              uint32  `protobuf:"varint,2,opt,name=votes_max,json=votesMax,proto3" json:"votes_max,omitempty"`                                         // Maximum possible attestations for this block
	VotesActual           uint32  `protobuf:"varint,3,opt,name=votes_actual,json=votesActual,proto3" json:"votes_actual,omitempty"`                                // Actual attestations received for this block
	CorrectnessPercentage float32 `protobuf:"fixed32,4,opt,name=correctness_percentage,json=correctnessPercentage,proto3" json:"correctness_percentage,omitempty"` // Percentage of actual vs max votes
	VotesOther            uint32  `protobuf:"varint,5,opt,name=votes_other,json=votesOther,proto3" json:"votes_other,omitempty"`                                   // Number of votes for alternative blocks
}

func (x *AttestationCorrectness) Reset() {
	*x = AttestationCorrectness{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttestationCorrectness) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttestationCorrectness) ProtoMessage() {}

func (x *AttestationCorrectness) ProtoReflect() protoreflect.Message {
	mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttestationCorrectness.ProtoReflect.Descriptor instead.
func (*AttestationCorrectness) Descriptor() ([]byte, []int) {
	return file_backend_pkg_api_v1_proto_public_proto_rawDescGZIP(), []int{52}
}

func (x *AttestationCorrectness) GetBlockRoot() string {
	if x != nil {
		return x.BlockRoot
	}
	return ""
}

func (x *AttestationCorrectness) GetVotesMax() uint32 {
	if x != nil {
		return x.VotesMax
	}
	return 0
}

func (x *AttestationCorrectness) GetVotesActual() uint32 {
	if x != nil {
		return x.VotesActual
	}
	return 0
}

func (x *AttestationCorrectness) GetCorrectnessPercentage() float32 {
	if x != nil {
		return x.CorrectnessPercentage
	}
	return 0
}

func (x *AttestationCorrectness) GetVotesOther() uint32 {
	if x != nil {
		return x.VotesOther
	}
	return 0
}

// ListBeaconSlotBlobTotalResponse is the v1 API response for blob count data for a single slot.
type ListBeaconSlotBlobTotalResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Blocks  []*BlobTotal    `protobuf:"bytes,1,rep,name=blocks,proto3" json:"blocks,omitempty"` // Blob counts for blocks in the slot (may include forks)
	Filters *FilterMetadata `protobuf:"bytes,2,opt,name=filters,proto3" json:"filters,omitempty"`
}

func (x *ListBeaconSlotBlobTotalResponse) Reset() {
	*x = ListBeaconSlotBlobTotalResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListBeaconSlotBlobTotalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBeaconSlotBlobTotalResponse) ProtoMessage() {}

func (x *ListBeaconSlotBlobTotalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBeaconSlotBlobTotalResponse.ProtoReflect.Descriptor instead.
func (*ListBeaconSlotBlobTotalResponse) Descriptor() ([]byte, []int) {
	return file_backend_pkg_api_v1_proto_public_proto_rawDescGZIP(), []int{53}
}

func (x *ListBeaconSlotBlobTotalResponse) GetBlocks() []*BlobTotal {
	if x != nil {
		return x.Blocks
	}
	return nil
}

func (x *ListBeaconSlotBlobTotalResponse) GetFilters() *FilterMetadata {
	if x != nil {
		return x.Filters
	}
	return nil
}

// BlobTotal represents the total blob count for a block in the unfinalized chain.
type BlobTotal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockRoot string `protobuf:"bytes,1,opt,name=block_root,json=blockRoot,proto3" json:"block_root,omitempty"`  // The beacon block root hash
	BlobCount uint32 `protobuf:"varint,2,opt,name=blob_count,json=blobCount,proto3" json:"blob_count,omitempty"` // The number of blobs in this block
}

func (x *BlobTotal) Reset() {
	*x = BlobTotal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlobTotal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlobTotal) ProtoMessage() {}

func (x *BlobTotal) ProtoReflect() protoreflect.Message {
	mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlobTotal.ProtoReflect.Descriptor instead.
func (*BlobTotal) Descriptor() ([]byte, []int) {
	return file_backend_pkg_api_v1_proto_public_proto_rawDescGZIP(), []int{54}
}

func (x *BlobTotal) GetBlockRoot() string {
	if x != nil {
		return x.BlockRoot
	}
	return ""
}

func (x *BlobTotal) GetBlobCount() uint32 {
	if x != nil {
		return x.BlobCount
	}
	return 0
}

// ListBeaconSlotBlockResponse is the v1 API response for beacon block data for a specific slot.
type ListBeaconSlotBlockResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Blocks     []*BeaconBlock      `protobuf:"bytes,1,rep,name=blocks,proto3" json:"blocks,omitempty"` // Block data for the slot (may include forks)
	Pagination *PaginationMetadata `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	Filters    *FilterMetadata     `protobuf:"bytes,3,opt,name=filters,proto3" json:"filters,omitempty"`
}

func (x *ListBeaconSlotBlockResponse) Reset() {
	*x = ListBeaconSlotBlockResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListBeaconSlotBlockResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBeaconSlotBlockResponse) ProtoMessage() {}

func (x *ListBeaconSlotBlockResponse) ProtoReflect() protoreflect.Message {
	mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBeaconSlotBlockResponse.ProtoReflect.Descriptor instead.
func (*ListBeaconSlotBlockResponse) Descriptor() ([]byte, []int) {
	return file_backend_pkg_api_v1_proto_public_proto_rawDescGZIP(), []int{55}
}

func (x *ListBeaconSlotBlockResponse) GetBlocks() []*BeaconBlock {
	if x != nil {
		return x.Blocks
	}
	return nil
}

func (x *ListBeaconSlotBlockResponse) GetPagination() *PaginationMetadata {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *ListBeaconSlotBlockResponse) GetFilters() *FilterMetadata {
	if x != nil {
		return x.Filters
	}
	return nil
}

// BeaconBlock represents beacon block data from the unfinalized chain for public API consumption.
type BeaconBlock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Core block identifiers
	BlockRoot  string `protobuf:"bytes,1,opt,name=block_root,json=blockRoot,proto3" json:"block_root,omitempty"`    // The root hash of the beacon block
	ParentRoot string `protobuf:"bytes,2,opt,name=parent_root,json=parentRoot,proto3" json:"parent_root,omitempty"` // The root hash of the parent block
	StateRoot  string `protobuf:"bytes,3,opt,name=state_root,json=stateRoot,proto3" json:"state_root,omitempty"`    // The root hash of the beacon state
	// Block metadata
	ProposerIndex             uint32 `protobuf:"varint,4,opt,name=proposer_index,json=proposerIndex,proto3" json:"proposer_index,omitempty"`                                         // Validator index who proposed the block
	BlockVersion              string `protobuf:"bytes,5,opt,name=block_version,json=blockVersion,proto3" json:"block_version,omitempty"`                                             // Block version (e.g., phase0, altair, bellatrix)
	BlockTotalBytes           uint32 `protobuf:"varint,6,opt,name=block_total_bytes,json=blockTotalBytes,proto3" json:"block_total_bytes,omitempty"`                                 // Total size of the block in bytes
	BlockTotalBytesCompressed uint32 `protobuf:"varint,7,opt,name=block_total_bytes_compressed,json=blockTotalBytesCompressed,proto3" json:"block_total_bytes_compressed,omitempty"` // Compressed size using snappy
	// Execution payload information
	ExecutionBlockHash         string `protobuf:"bytes,8,opt,name=execution_block_hash,json=executionBlockHash,proto3" json:"execution_block_hash,omitempty"`                           // Execution layer block hash
	ExecutionBlockNumber       uint32 `protobuf:"varint,9,opt,name=execution_block_number,json=executionBlockNumber,proto3" json:"execution_block_number,omitempty"`                    // Execution layer block number
	ExecutionFeeRecipient      string `protobuf:"bytes,10,opt,name=execution_fee_recipient,json=executionFeeRecipient,proto3" json:"execution_fee_recipient,omitempty"`                 // Address receiving execution fees
	ExecutionBaseFeePerGas     string `protobuf:"bytes,11,opt,name=execution_base_fee_per_gas,json=executionBaseFeePerGas,proto3" json:"execution_base_fee_per_gas,omitempty"`          // Base fee per gas
	ExecutionGasUsed           uint64 `protobuf:"varint,12,opt,name=execution_gas_used,json=executionGasUsed,proto3" json:"execution_gas_used,omitempty"`                               // Total gas used
	ExecutionGasLimit          uint64 `protobuf:"varint,13,opt,name=execution_gas_limit,json=executionGasLimit,proto3" json:"execution_gas_limit,omitempty"`                            // Gas limit for the block
	ExecutionBlobGasUsed       uint64 `protobuf:"varint,14,opt,name=execution_blob_gas_used,json=executionBlobGasUsed,proto3" json:"execution_blob_gas_used,omitempty"`                 // Blob gas used (EIP-4844)
	ExecutionExcessBlobGas     uint64 `protobuf:"varint,15,opt,name=execution_excess_blob_gas,json=executionExcessBlobGas,proto3" json:"execution_excess_blob_gas,omitempty"`           // Excess blob gas (EIP-4844)
	ExecutionStateRoot         string `protobuf:"bytes,16,opt,name=execution_state_root,json=executionStateRoot,proto3" json:"execution_state_root,omitempty"`                          // Execution layer state root
	ExecutionParentHash        string `protobuf:"bytes,17,opt,name=execution_parent_hash,json=executionParentHash,proto3" json:"execution_parent_hash,omitempty"`                       // Parent hash in execution layer
	ExecutionTransactionsCount uint32 `protobuf:"varint,18,opt,name=execution_transactions_count,json=executionTransactionsCount,proto3" json:"execution_transactions_count,omitempty"` // Number of transactions
	ExecutionTransactionsBytes uint32 `protobuf:"varint,19,opt,name=execution_transactions_bytes,json=executionTransactionsBytes,proto3" json:"execution_transactions_bytes,omitempty"` // Total transaction bytes
}

func (x *BeaconBlock) Reset() {
	*x = BeaconBlock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BeaconBlock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BeaconBlock) ProtoMessage() {}

func (x *BeaconBlock) ProtoReflect() protoreflect.Message {
	mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BeaconBlock.ProtoReflect.Descriptor instead.
func (*BeaconBlock) Descriptor() ([]byte, []int) {
	return file_backend_pkg_api_v1_proto_public_proto_rawDescGZIP(), []int{56}
}

func (x *BeaconBlock) GetBlockRoot() string {
	if x != nil {
		return x.BlockRoot
	}
	return ""
}

func (x *BeaconBlock) GetParentRoot() string {
	if x != nil {
		return x.ParentRoot
	}
	return ""
}

func (x *BeaconBlock) GetStateRoot() string {
	if x != nil {
		return x.StateRoot
	}
	return ""
}

func (x *BeaconBlock) GetProposerIndex() uint32 {
	if x != nil {
		return x.ProposerIndex
	}
	return 0
}

func (x *BeaconBlock) GetBlockVersion() string {
	if x != nil {
		return x.BlockVersion
	}
	return ""
}

func (x *BeaconBlock) GetBlockTotalBytes() uint32 {
	if x != nil {
		return x.BlockTotalBytes
	}
	return 0
}

func (x *BeaconBlock) GetBlockTotalBytesCompressed() uint32 {
	if x != nil {
		return x.BlockTotalBytesCompressed
	}
	return 0
}

func (x *BeaconBlock) GetExecutionBlockHash() string {
	if x != nil {
		return x.ExecutionBlockHash
	}
	return ""
}

func (x *BeaconBlock) GetExecutionBlockNumber() uint32 {
	if x != nil {
		return x.ExecutionBlockNumber
	}
	return 0
}

func (x *BeaconBlock) GetExecutionFeeRecipient() string {
	if x != nil {
		return x.ExecutionFeeRecipient
	}
	return ""
}

func (x *BeaconBlock) GetExecutionBaseFeePerGas() string {
	if x != nil {
		return x.ExecutionBaseFeePerGas
	}
	return ""
}

func (x *BeaconBlock) GetExecutionGasUsed() uint64 {
	if x != nil {
		return x.ExecutionGasUsed
	}
	return 0
}

func (x *BeaconBlock) GetExecutionGasLimit() uint64 {
	if x != nil {
		return x.ExecutionGasLimit
	}
	return 0
}

func (x *BeaconBlock) GetExecutionBlobGasUsed() uint64 {
	if x != nil {
		return x.ExecutionBlobGasUsed
	}
	return 0
}

func (x *BeaconBlock) GetExecutionExcessBlobGas() uint64 {
	if x != nil {
		return x.ExecutionExcessBlobGas
	}
	return 0
}

func (x *BeaconBlock) GetExecutionStateRoot() string {
	if x != nil {
		return x.ExecutionStateRoot
	}
	return ""
}

func (x *BeaconBlock) GetExecutionParentHash() string {
	if x != nil {
		return x.ExecutionParentHash
	}
	return ""
}

func (x *BeaconBlock) GetExecutionTransactionsCount() uint32 {
	if x != nil {
		return x.ExecutionTransactionsCount
	}
	return 0
}

func (x *BeaconBlock) GetExecutionTransactionsBytes() uint32 {
	if x != nil {
		return x.ExecutionTransactionsBytes
	}
	return 0
}

// ListBeaconSlotProposerEntityResponse is the v1 API response for block proposer entity data for a specific slot.
type ListBeaconSlotProposerEntityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entities   []*ProposerEntity   `protobuf:"bytes,1,rep,name=entities,proto3" json:"entities,omitempty"` // Proposer entities for the slot (may include forks)
	Pagination *PaginationMetadata `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	Filters    *FilterMetadata     `protobuf:"bytes,3,opt,name=filters,proto3" json:"filters,omitempty"`
}

func (x *ListBeaconSlotProposerEntityResponse) Reset() {
	*x = ListBeaconSlotProposerEntityResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListBeaconSlotProposerEntityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBeaconSlotProposerEntityResponse) ProtoMessage() {}

func (x *ListBeaconSlotProposerEntityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBeaconSlotProposerEntityResponse.ProtoReflect.Descriptor instead.
func (*ListBeaconSlotProposerEntityResponse) Descriptor() ([]byte, []int) {
	return file_backend_pkg_api_v1_proto_public_proto_rawDescGZIP(), []int{57}
}

func (x *ListBeaconSlotProposerEntityResponse) GetEntities() []*ProposerEntity {
	if x != nil {
		return x.Entities
	}
	return nil
}

func (x *ListBeaconSlotProposerEntityResponse) GetPagination() *PaginationMetadata {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *ListBeaconSlotProposerEntityResponse) GetFilters() *FilterMetadata {
	if x != nil {
		return x.Filters
	}
	return nil
}

// ProposerEntity represents the entity that proposed a block in the unfinalized chain for public API consumption.
type ProposerEntity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Entity information
	Entity string `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity,omitempty"` // The entity that proposed the block (e.g., "Lido", "Coinbase")
}

func (x *ProposerEntity) Reset() {
	*x = ProposerEntity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProposerEntity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProposerEntity) ProtoMessage() {}

func (x *ProposerEntity) ProtoReflect() protoreflect.Message {
	mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProposerEntity.ProtoReflect.Descriptor instead.
func (*ProposerEntity) Descriptor() ([]byte, []int) {
	return file_backend_pkg_api_v1_proto_public_proto_rawDescGZIP(), []int{58}
}

func (x *ProposerEntity) GetEntity() string {
	if x != nil {
		return x.Entity
	}
	return ""
}

// ListPreparedBlocksResponse is the v1 API response for listing prepared blocks.
type ListPreparedBlocksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PreparedBlocks []*PreparedBlock             `protobuf:"bytes,1,rep,name=prepared_blocks,json=preparedBlocks,proto3" json:"prepared_blocks,omitempty"`
	Pagination     *PaginationMetadata          `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	Filters        *PreparedBlockFilterMetadata `protobuf:"bytes,3,opt,name=filters,proto3" json:"filters,omitempty"`
}

func (x *ListPreparedBlocksResponse) Reset() {
	*x = ListPreparedBlocksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPreparedBlocksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPreparedBlocksResponse) ProtoMessage() {}

func (x *ListPreparedBlocksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPreparedBlocksResponse.ProtoReflect.Descriptor instead.
func (*ListPreparedBlocksResponse) Descriptor() ([]byte, []int) {
	return file_backend_pkg_api_v1_proto_public_proto_rawDescGZIP(), []int{59}
}

func (x *ListPreparedBlocksResponse) GetPreparedBlocks() []*PreparedBlock {
	if x != nil {
		return x.PreparedBlocks
	}
	return nil
}

func (x *ListPreparedBlocksResponse) GetPagination() *PaginationMetadata {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *ListPreparedBlocksResponse) GetFilters() *PreparedBlockFilterMetadata {
	if x != nil {
		return x.Filters
	}
	return nil
}

// PreparedBlock represents a transformed view of prepared block data for public consumption.
// This shows what would have been built if the validator had been selected as proposer.
type PreparedBlock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Slot             uint32                   `protobuf:"varint,1,opt,name=slot,proto3" json:"slot,omitempty"`
	SlotStartTime    string                   `protobuf:"bytes,2,opt,name=slot_start_time,json=slotStartTime,proto3" json:"slot_start_time,omitempty"` // ISO 8601 formatted
	EventTime        string                   `protobuf:"bytes,3,opt,name=event_time,json=eventTime,proto3" json:"event_time,omitempty"`               // ISO 8601 formatted
	Client           *ClientInfo              `protobuf:"bytes,4,opt,name=client,proto3" json:"client,omitempty"`                                      // reuse existing ClientInfo type
	Consensus        *ConsensusInfo           `protobuf:"bytes,5,opt,name=consensus,proto3" json:"consensus,omitempty"`                                // reuse existing ConsensusInfo type
	Geo              *GeoInfo                 `protobuf:"bytes,6,opt,name=geo,proto3" json:"geo,omitempty"`                                            // reuse existing GeoInfo type
	BlockMetrics     *BlockMetrics            `protobuf:"bytes,7,opt,name=block_metrics,json=blockMetrics,proto3" json:"block_metrics,omitempty"`
	ExecutionMetrics *ExecutionPayloadMetrics `protobuf:"bytes,8,opt,name=execution_metrics,json=executionMetrics,proto3" json:"execution_metrics,omitempty"`
	LastUpdated      string                   `protobuf:"bytes,9,opt,name=last_updated,json=lastUpdated,proto3" json:"last_updated,omitempty"` // ISO 8601 formatted
}

func (x *PreparedBlock) Reset() {
	*x = PreparedBlock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PreparedBlock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreparedBlock) ProtoMessage() {}

func (x *PreparedBlock) ProtoReflect() protoreflect.Message {
	mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreparedBlock.ProtoReflect.Descriptor instead.
func (*PreparedBlock) Descriptor() ([]byte, []int) {
	return file_backend_pkg_api_v1_proto_public_proto_rawDescGZIP(), []int{60}
}

func (x *PreparedBlock) GetSlot() uint32 {
	if x != nil {
		return x.Slot
	}
	return 0
}

func (x *PreparedBlock) GetSlotStartTime() string {
	if x != nil {
		return x.SlotStartTime
	}
	return ""
}

func (x *PreparedBlock) GetEventTime() string {
	if x != nil {
		return x.EventTime
	}
	return ""
}

func (x *PreparedBlock) GetClient() *ClientInfo {
	if x != nil {
		return x.Client
	}
	return nil
}

func (x *PreparedBlock) GetConsensus() *ConsensusInfo {
	if x != nil {
		return x.Consensus
	}
	return nil
}

func (x *PreparedBlock) GetGeo() *GeoInfo {
	if x != nil {
		return x.Geo
	}
	return nil
}

func (x *PreparedBlock) GetBlockMetrics() *BlockMetrics {
	if x != nil {
		return x.BlockMetrics
	}
	return nil
}

func (x *PreparedBlock) GetExecutionMetrics() *ExecutionPayloadMetrics {
	if x != nil {
		return x.ExecutionMetrics
	}
	return nil
}

func (x *PreparedBlock) GetLastUpdated() string {
	if x != nil {
		return x.LastUpdated
	}
	return ""
}

// BlockMetrics groups block-related metrics.
type BlockMetrics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version              string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	TotalBytes           uint32 `protobuf:"varint,2,opt,name=total_bytes,json=totalBytes,proto3" json:"total_bytes,omitempty"`
	TotalBytesCompressed uint32 `protobuf:"varint,3,opt,name=total_bytes_compressed,json=totalBytesCompressed,proto3" json:"total_bytes_compressed,omitempty"`
}

func (x *BlockMetrics) Reset() {
	*x = BlockMetrics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockMetrics) ProtoMessage() {}

func (x *BlockMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockMetrics.ProtoReflect.Descriptor instead.
func (*BlockMetrics) Descriptor() ([]byte, []int) {
	return file_backend_pkg_api_v1_proto_public_proto_rawDescGZIP(), []int{61}
}

func (x *BlockMetrics) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *BlockMetrics) GetTotalBytes() uint32 {
	if x != nil {
		return x.TotalBytes
	}
	return 0
}

func (x *BlockMetrics) GetTotalBytesCompressed() uint32 {
	if x != nil {
		return x.TotalBytesCompressed
	}
	return 0
}

// ExecutionPayloadMetrics groups execution payload metrics.
type ExecutionPayloadMetrics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ValueWei               uint64 `protobuf:"varint,1,opt,name=value_wei,json=valueWei,proto3" json:"value_wei,omitempty"`
	ConsensusValueWei      uint64 `protobuf:"varint,2,opt,name=consensus_value_wei,json=consensusValueWei,proto3" json:"consensus_value_wei,omitempty"`
	BlockNumber            uint32 `protobuf:"varint,3,opt,name=block_number,json=blockNumber,proto3" json:"block_number,omitempty"`
	GasLimit               uint64 `protobuf:"varint,4,opt,name=gas_limit,json=gasLimit,proto3" json:"gas_limit,omitempty"`
	GasUsed                uint64 `protobuf:"varint,5,opt,name=gas_used,json=gasUsed,proto3" json:"gas_used,omitempty"`
	TransactionsCount      uint32 `protobuf:"varint,6,opt,name=transactions_count,json=transactionsCount,proto3" json:"transactions_count,omitempty"`
	TransactionsTotalBytes uint32 `protobuf:"varint,7,opt,name=transactions_total_bytes,json=transactionsTotalBytes,proto3" json:"transactions_total_bytes,omitempty"`
}

func (x *ExecutionPayloadMetrics) Reset() {
	*x = ExecutionPayloadMetrics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecutionPayloadMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecutionPayloadMetrics) ProtoMessage() {}

func (x *ExecutionPayloadMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecutionPayloadMetrics.ProtoReflect.Descriptor instead.
func (*ExecutionPayloadMetrics) Descriptor() ([]byte, []int) {
	return file_backend_pkg_api_v1_proto_public_proto_rawDescGZIP(), []int{62}
}

func (x *ExecutionPayloadMetrics) GetValueWei() uint64 {
	if x != nil {
		return x.ValueWei
	}
	return 0
}

func (x *ExecutionPayloadMetrics) GetConsensusValueWei() uint64 {
	if x != nil {
		return x.ConsensusValueWei
	}
	return 0
}

func (x *ExecutionPayloadMetrics) GetBlockNumber() uint32 {
	if x != nil {
		return x.BlockNumber
	}
	return 0
}

func (x *ExecutionPayloadMetrics) GetGasLimit() uint64 {
	if x != nil {
		return x.GasLimit
	}
	return 0
}

func (x *ExecutionPayloadMetrics) GetGasUsed() uint64 {
	if x != nil {
		return x.GasUsed
	}
	return 0
}

func (x *ExecutionPayloadMetrics) GetTransactionsCount() uint32 {
	if x != nil {
		return x.TransactionsCount
	}
	return 0
}

func (x *ExecutionPayloadMetrics) GetTransactionsTotalBytes() uint32 {
	if x != nil {
		return x.TransactionsTotalBytes
	}
	return 0
}

// PreparedBlockFilterMetadata shows filtering information for prepared block queries.
type PreparedBlockFilterMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Network        string            `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`
	Slot           uint32            `protobuf:"varint,2,opt,name=slot,proto3" json:"slot,omitempty"`
	ClientName     string            `protobuf:"bytes,3,opt,name=client_name,json=clientName,proto3" json:"client_name,omitempty"`
	AppliedFilters map[string]string `protobuf:"bytes,4,rep,name=applied_filters,json=appliedFilters,proto3" json:"applied_filters,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // All filters including time filters
	OrderBy        string            `protobuf:"bytes,5,opt,name=order_by,json=orderBy,proto3" json:"order_by,omitempty"`
}

func (x *PreparedBlockFilterMetadata) Reset() {
	*x = PreparedBlockFilterMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PreparedBlockFilterMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreparedBlockFilterMetadata) ProtoMessage() {}

func (x *PreparedBlockFilterMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_backend_pkg_api_v1_proto_public_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreparedBlockFilterMetadata.ProtoReflect.Descriptor instead.
func (*PreparedBlockFilterMetadata) Descriptor() ([]byte, []int) {
	return file_backend_pkg_api_v1_proto_public_proto_rawDescGZIP(), []int{63}
}

func (x *PreparedBlockFilterMetadata) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *PreparedBlockFilterMetadata) GetSlot() uint32 {
	if x != nil {
		return x.Slot
	}
	return 0
}

func (x *PreparedBlockFilterMetadata) GetClientName() string {
	if x != nil {
		return x.ClientName
	}
	return ""
}

func (x *PreparedBlockFilterMetadata) GetAppliedFilters() map[string]string {
	if x != nil {
		return x.AppliedFilters
	}
	return nil
}

func (x *PreparedBlockFilterMetadata) GetOrderBy() string {
	if x != nil {
		return x.OrderBy
	}
	return ""
}

var File_backend_pkg_api_v1_proto_public_proto protoreflect.FileDescriptor

var file_backend_pkg_api_v1_proto_public_proto_rawDesc = []byte{
	0x0a, 0x25, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x1a,
	0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa5, 0x01,
	0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x64, 0x65,
	0x52, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x3a, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x07, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x73, 0x22, 0x7c, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a,
	0x08, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x52, 0x08, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x12, 0x37, 0x0a, 0x07, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x73, 0x22, 0x84, 0x02, 0x0a, 0x04, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49,
	0x64, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6c, 0x61, 0x73, 0x73,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x06, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x03, 0x67, 0x65, 0x6f, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x6f, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x03, 0x67, 0x65, 0x6f, 0x12, 0x33, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x73,
	0x65, 0x6e, 0x73, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x12, 0x1b, 0x0a,
	0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x73, 0x65, 0x65, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x53, 0x65, 0x65, 0x6e, 0x22, 0x62, 0x0a, 0x0a, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0e, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x69, 0x6d, 0x70, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xe0,
	0x01, 0x0a, 0x07, 0x47, 0x65, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69,
	0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x63,
	0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x65, 0x6e, 0x74, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x1f, 0x0a, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x01, 0x48, 0x00, 0x52, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x48, 0x01, 0x52, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74,
	0x75, 0x64, 0x65, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x6c, 0x61, 0x74, 0x69, 0x74,
	0x75, 0x64, 0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64,
	0x65, 0x22, 0x51, 0x0a, 0x0d, 0x43, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0e,
	0x69, 0x6d, 0x70, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x78, 0x0a, 0x12, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61,
	0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70,
	0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x67,
	0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70,
	0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xdd,
	0x01, 0x0a, 0x0e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x53, 0x0a, 0x0f, 0x61,
	0x70, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x41, 0x70, 0x70,
	0x6c, 0x69, 0x65, 0x64, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x0e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73,
	0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x1a, 0x41, 0x0a, 0x13, 0x41,
	0x70, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x86,
	0x01, 0x0a, 0x1e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x45, 0x78, 0x70, 0x69, 0x72, 0x79, 0x41, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x32, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x45, 0x78,
	0x70, 0x69, 0x72, 0x79, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x52,
	0x04, 0x69, 0x74, 0x65, 0x6d, 0x12, 0x30, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x07,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x22, 0xc0, 0x01, 0x0a, 0x16, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x45, 0x78, 0x70, 0x69, 0x72, 0x79, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x74,
	0x61, 0x6c, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x65, 0x78, 0x70,
	0x69, 0x72, 0x65, 0x64, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x12, 0x2b, 0x0a,
	0x11, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65,
	0x64, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x22, 0x7a, 0x0a, 0x18, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x45, 0x78, 0x70, 0x69, 0x72, 0x79, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x45, 0x78, 0x70, 0x69, 0x72, 0x79, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x04,
	0x69, 0x74, 0x65, 0x6d, 0x12, 0x30, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x07, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x22, 0x35, 0x0a, 0x10, 0x53, 0x74, 0x61, 0x74, 0x65, 0x45,
	0x78, 0x70, 0x69, 0x72, 0x79, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x88, 0x01,
	0x0a, 0x1f, 0x53, 0x74, 0x61, 0x74, 0x65, 0x45, 0x78, 0x70, 0x69, 0x72, 0x79, 0x53, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x33, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x45, 0x78,
	0x70, 0x69, 0x72, 0x79, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x74, 0x61, 0x6c,
	0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x12, 0x30, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52,
	0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x22, 0x7d, 0x0a, 0x17, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x45, 0x78, 0x70, 0x69, 0x72, 0x79, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x54, 0x6f,
	0x74, 0x61, 0x6c, 0x12, 0x2e, 0x0a, 0x13, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x11, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x53, 0x6c,
	0x6f, 0x74, 0x73, 0x12, 0x32, 0x0a, 0x15, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x73,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x13, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x53, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x53, 0x6c, 0x6f, 0x74, 0x73, 0x22, 0x73, 0x0a, 0x07, 0x4e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x19,
	0x0a, 0x08, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x61, 0x73,
	0x74, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x22, 0x88, 0x01, 0x0a,
	0x15, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x27, 0x0a, 0x0f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x65,
	0x64, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12,
	0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x25, 0x0a, 0x0e, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xc8, 0x01, 0x0a, 0x20, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x45, 0x78, 0x70, 0x69, 0x72, 0x79, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x48, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x45, 0x78, 0x70, 0x69, 0x72, 0x79,
	0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x12, 0x3a, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x30, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x73, 0x22, 0xc1, 0x01, 0x0a, 0x18, 0x53, 0x74, 0x61, 0x74, 0x65, 0x45, 0x78, 0x70, 0x69,
	0x72, 0x79, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12,
	0x37, 0x0a, 0x18, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x15, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x53, 0x74, 0x61, 0x72, 0x74, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x36, 0x0a, 0x17, 0x66, 0x69, 0x72, 0x73,
	0x74, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x15, 0x66, 0x69, 0x72, 0x73, 0x74,
	0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73,
	0x12, 0x34, 0x0a, 0x16, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x65,
	0x64, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x14, 0x6c, 0x61, 0x73, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x22, 0xca, 0x01, 0x0a, 0x21, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x45, 0x78, 0x70, 0x69, 0x72, 0x79, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x48, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x45, 0x78, 0x70, 0x69, 0x72, 0x79,
	0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x3a, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x30, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x73, 0x22, 0xb6, 0x01, 0x0a, 0x19, 0x53, 0x74, 0x61, 0x74, 0x65, 0x45, 0x78, 0x70,
	0x69, 0x72, 0x79, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72,
	0x79, 0x12, 0x37, 0x0a, 0x18, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x15, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x53, 0x74, 0x61, 0x72, 0x74, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x30, 0x0a, 0x14, 0x66, 0x69,
	0x72, 0x73, 0x74, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x5f, 0x73, 0x6c, 0x6f,
	0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x66, 0x69, 0x72, 0x73, 0x74, 0x41,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x53, 0x6c, 0x6f, 0x74, 0x73, 0x12, 0x2e, 0x0a, 0x13,
	0x6c, 0x61, 0x73, 0x74, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x5f, 0x73, 0x6c,
	0x6f, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x6c, 0x61, 0x73, 0x74, 0x41,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x53, 0x6c, 0x6f, 0x74, 0x73, 0x22, 0x94, 0x01, 0x0a,
	0x24, 0x53, 0x74, 0x61, 0x74, 0x65, 0x45, 0x78, 0x70, 0x69, 0x72, 0x79, 0x53, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x54, 0x6f, 0x70, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x45, 0x78, 0x70, 0x69, 0x72, 0x79, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x54, 0x6f, 0x70, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x12, 0x30, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x73, 0x22, 0x82, 0x01, 0x0a, 0x1c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x45, 0x78, 0x70,
	0x69, 0x72, 0x79, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65,
	0x64, 0x54, 0x6f, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x73,
	0x6c, 0x6f, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x65, 0x78, 0x70, 0x69,
	0x72, 0x65, 0x64, 0x53, 0x6c, 0x6f, 0x74, 0x73, 0x22, 0x86, 0x01, 0x0a, 0x1d, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x45, 0x78, 0x70, 0x69, 0x72, 0x79, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x54,
	0x6f, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x45, 0x78, 0x70, 0x69, 0x72, 0x79, 0x53, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x70, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12,
	0x30, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x73, 0x22, 0x86, 0x01, 0x0a, 0x15, 0x53, 0x74, 0x61, 0x74, 0x65, 0x45, 0x78, 0x70, 0x69, 0x72,
	0x79, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x72,
	0x61, 0x6e, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x12,
	0x29, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2e, 0x0a, 0x13, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x6c, 0x6f, 0x74,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x11, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x53, 0x6c, 0x6f, 0x74, 0x73, 0x22, 0xc0, 0x01, 0x0a, 0x1e, 0x4c,
	0x69, 0x73, 0x74, 0x42, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x53, 0x6c, 0x6f, 0x74, 0x4d, 0x65, 0x76,
	0x52, 0x65, 0x6c, 0x61, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a,
	0x06, 0x72, 0x65, 0x6c, 0x61, 0x79, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x76, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x42,
	0x69, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x06, 0x72, 0x65, 0x6c, 0x61, 0x79, 0x73, 0x12,
	0x3a, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52,
	0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x07, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x22, 0x4e, 0x0a,
	0x10, 0x4d, 0x65, 0x76, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x42, 0x69, 0x64, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x62, 0x69, 0x64, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x08, 0x62, 0x69, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xcd, 0x01,
	0x0a, 0x25, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x53, 0x6c, 0x6f, 0x74,
	0x4d, 0x65, 0x76, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x08, 0x62, 0x75, 0x69, 0x6c, 0x64,
	0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x4d, 0x65, 0x76, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x42, 0x69, 0x64,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x08, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x73, 0x12,
	0x3a, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52,
	0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x07, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x22, 0x58, 0x0a,
	0x12, 0x4d, 0x65, 0x76, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x42, 0x69, 0x64, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x70,
	0x75, 0x62, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x62, 0x75, 0x69,
	0x6c, 0x64, 0x65, 0x72, 0x50, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x69,
	0x64, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x62,
	0x69, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xb3, 0x01, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74,
	0x42, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x53, 0x6c, 0x6f, 0x74, 0x4d, 0x65, 0x76, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x06, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4d,
	0x65, 0x76, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x06, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x12,
	0x3a, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52,
	0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x07, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x22, 0xda, 0x03,
	0x0a, 0x08, 0x4d, 0x65, 0x76, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x6f, 0x6f, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x48, 0x61, 0x73, 0x68, 0x12, 0x25, 0x0a, 0x0e,
	0x62, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x70, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x50, 0x75, 0x62,
	0x6b, 0x65, 0x79, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x72, 0x5f,
	0x70, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x72,
	0x6f, 0x70, 0x6f, 0x73, 0x65, 0x72, 0x50, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x12, 0x34, 0x0a, 0x16,
	0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x72, 0x5f, 0x66, 0x65, 0x65, 0x5f, 0x72, 0x65, 0x63,
	0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x70, 0x72,
	0x6f, 0x70, 0x6f, 0x73, 0x65, 0x72, 0x46, 0x65, 0x65, 0x52, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65,
	0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x61, 0x73, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x67, 0x61, 0x73, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12,
	0x19, 0x0a, 0x08, 0x67, 0x61, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x07, 0x67, 0x61, 0x73, 0x55, 0x73, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x2b, 0x0a, 0x11, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a,
	0x0b, 0x72, 0x65, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x0c, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x2a,
	0x0a, 0x11, 0x65, 0x61, 0x72, 0x6c, 0x69, 0x65, 0x73, 0x74, 0x5f, 0x62, 0x69, 0x64, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x65, 0x61, 0x72, 0x6c, 0x69,
	0x65, 0x73, 0x74, 0x42, 0x69, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xc3, 0x01, 0x0a, 0x20, 0x4c,
	0x69, 0x73, 0x74, 0x42, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x53, 0x6c, 0x6f, 0x74, 0x4d, 0x65, 0x76,
	0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x31, 0x0a, 0x08, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x76, 0x42, 0x75,
	0x69, 0x6c, 0x64, 0x65, 0x72, 0x42, 0x69, 0x64, 0x52, 0x08, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x65,
	0x72, 0x73, 0x12, 0x3a, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x30,
	0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73,
	0x22, 0xb2, 0x01, 0x0a, 0x0d, 0x4d, 0x65, 0x76, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x42,
	0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x61, 0x73, 0x68,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73,
	0x68, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x6c, 0x61, 0x79,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65,
	0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x75, 0x69, 0x6c,
	0x64, 0x65, 0x72, 0x5f, 0x70, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x50, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x12,
	0x24, 0x0a, 0x0e, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x6d,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x4d, 0x73, 0x22, 0x72, 0x0a, 0x0d, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x22, 0x43, 0x0a, 0x11, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e,
	0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x80,
	0x01, 0x0a, 0x0e, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x12, 0x32, 0x0a, 0x08, 0x65, 0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x74, 0x68,
	0x65, 0x72, 0x65, 0x75, 0x6d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x08, 0x65, 0x74, 0x68,
	0x65, 0x72, 0x65, 0x75, 0x6d, 0x12, 0x3a, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x0b, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x22, 0xa6, 0x01, 0x0a, 0x0e, 0x45, 0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x12, 0x40, 0x0a, 0x08, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x45, 0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x4e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x1a, 0x52, 0x0a, 0x0d, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2b, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xe8, 0x01, 0x0a, 0x0d, 0x4e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x67, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x73,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x67, 0x65, 0x6e,
	0x65, 0x73, 0x69, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x05, 0x66, 0x6f, 0x72, 0x6b,
	0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x46, 0x6f, 0x72, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x05, 0x66, 0x6f, 0x72,
	0x6b, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x22, 0x42, 0x0a, 0x0a, 0x46, 0x6f, 0x72, 0x6b, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x34, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x46, 0x6f, 0x72, 0x6b, 0x73, 0x52, 0x09,
	0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x22, 0x66, 0x0a, 0x0e, 0x43, 0x6f, 0x6e,
	0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x46, 0x6f, 0x72, 0x6b, 0x73, 0x12, 0x2a, 0x0a, 0x07, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x72, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x6f, 0x72, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x72, 0x61, 0x12, 0x28, 0x0a, 0x06, 0x66, 0x75, 0x73, 0x61, 0x6b,
	0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x46, 0x6f, 0x72, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x66, 0x75, 0x73, 0x61, 0x6b,
	0x61, 0x22, 0xbf, 0x01, 0x0a, 0x08, 0x46, 0x6f, 0x72, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x65,
	0x70, 0x6f, 0x63, 0x68, 0x12, 0x57, 0x0a, 0x13, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x6f, 0x72, 0x6b, 0x49,
	0x6e, 0x66, 0x6f, 0x2e, 0x4d, 0x69, 0x6e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x11, 0x6d, 0x69, 0x6e, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x44, 0x0a,
	0x16, 0x4d, 0x69, 0x6e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0x4f, 0x0a, 0x11, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x3a, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x65,
	0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e,
	0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0b, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x22, 0xcf, 0x02, 0x0a, 0x10, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d,
	0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x12,
	0x2f, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x5b, 0x0a, 0x11, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x10, 0x64, 0x61, 0x74,
	0x61, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x1a, 0x67, 0x0a,
	0x15, 0x44, 0x61, 0x74, 0x61, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x38, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x41,
	0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x52, 0x0a, 0x1a, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69,
	0x6d, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x6c, 0x6f, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x6d, 0x69, 0x6e, 0x53, 0x6c, 0x6f, 0x74, 0x12,
	0x19, 0x0a, 0x08, 0x6d, 0x61, 0x78, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x07, 0x6d, 0x61, 0x78, 0x53, 0x6c, 0x6f, 0x74, 0x22, 0x41, 0x0a, 0x1a, 0x47, 0x65,
	0x74, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x78, 0x70, 0x65,
	0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x57, 0x0a,
	0x1b, 0x47, 0x65, 0x74, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x0a,
	0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69,
	0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x65,
	0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0xc0, 0x01, 0x0a, 0x21, 0x4c, 0x69, 0x73, 0x74, 0x42,
	0x65, 0x61, 0x63, 0x6f, 0x6e, 0x53, 0x6c, 0x6f, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x69,
	0x6d, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x05,
	0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x69, 0x6d, 0x69, 0x6e, 0x67,
	0x4e, 0x6f, 0x64, 0x65, 0x52, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x3a, 0x0a, 0x0a, 0x70,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x0a, 0x70, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x22, 0xde, 0x01, 0x0a, 0x0f, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x54, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x17, 0x0a,
	0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x2f, 0x0a, 0x14, 0x73, 0x65, 0x65, 0x6e, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x5f,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x11, 0x73, 0x65, 0x65, 0x6e, 0x53, 0x6c, 0x6f, 0x74, 0x53, 0x74, 0x61, 0x72, 0x74, 0x44,
	0x69, 0x66, 0x66, 0x12, 0x21, 0x0a, 0x03, 0x67, 0x65, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x6f, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x03, 0x67, 0x65, 0x6f, 0x12, 0x2a, 0x0a, 0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0xbe, 0x01, 0x0a, 0x20, 0x4c,
	0x69, 0x73, 0x74, 0x42, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x53, 0x6c, 0x6f, 0x74, 0x42, 0x6c, 0x6f,
	0x62, 0x54, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2c, 0x0a, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6c, 0x6f, 0x62, 0x54, 0x69, 0x6d, 0x69,
	0x6e, 0x67, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x3a, 0x0a,
	0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x0a, 0x70,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x07, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x22, 0x9b, 0x02, 0x0a, 0x0e,
	0x42, 0x6c, 0x6f, 0x62, 0x54, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x17,
	0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x2f, 0x0a, 0x14, 0x73, 0x65, 0x65, 0x6e, 0x5f, 0x73, 0x6c, 0x6f, 0x74,
	0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x11, 0x73, 0x65, 0x65, 0x6e, 0x53, 0x6c, 0x6f, 0x74, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x44, 0x69, 0x66, 0x66, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x6c, 0x6f, 0x62, 0x5f, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x62, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x72, 0x6f, 0x6f,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x6f,
	0x6f, 0x74, 0x12, 0x21, 0x0a, 0x03, 0x67, 0x65, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x6f, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x03, 0x67, 0x65, 0x6f, 0x12, 0x2a, 0x0a, 0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0xcf, 0x01, 0x0a, 0x27, 0x4c, 0x69,
	0x73, 0x74, 0x42, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x53, 0x6c, 0x6f, 0x74, 0x41, 0x74, 0x74, 0x65,
	0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x06, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x69, 0x6e, 0x67,
	0x43, 0x68, 0x75, 0x6e, 0x6b, 0x52, 0x06, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x73, 0x12, 0x3a, 0x0a,
	0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x0a, 0x70,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x07, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x22, 0x8a, 0x01, 0x0a, 0x16,
	0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x69, 0x6e,
	0x67, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f,
	0x72, 0x6f, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x52, 0x6f, 0x6f, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x5f, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x5f, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x63,
	0x68, 0x75, 0x6e, 0x6b, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4d, 0x73, 0x12, 0x2b, 0x0a, 0x11, 0x61,
	0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x98, 0x01, 0x0a, 0x2c, 0x4c, 0x69, 0x73,
	0x74, 0x42, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x53, 0x6c, 0x6f, 0x74, 0x41, 0x74, 0x74, 0x65, 0x73,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x72, 0x72, 0x65, 0x63, 0x74, 0x6e, 0x65, 0x73,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x06, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x72, 0x72, 0x65, 0x63, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x06, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x73, 0x12, 0x30, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x73, 0x22, 0xcf, 0x01, 0x0a, 0x16, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x72, 0x72, 0x65, 0x63, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x12, 0x1d,
	0x0a, 0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x6f, 0x6f, 0x74, 0x12, 0x1b, 0x0a,
	0x09, 0x76, 0x6f, 0x74, 0x65, 0x73, 0x5f, 0x6d, 0x61, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x08, 0x76, 0x6f, 0x74, 0x65, 0x73, 0x4d, 0x61, 0x78, 0x12, 0x21, 0x0a, 0x0c, 0x76, 0x6f,
	0x74, 0x65, 0x73, 0x5f, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0b, 0x76, 0x6f, 0x74, 0x65, 0x73, 0x41, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x12, 0x35, 0x0a,
	0x16, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x63, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x70, 0x65, 0x72,
	0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x15, 0x63,
	0x6f, 0x72, 0x72, 0x65, 0x63, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e,
	0x74, 0x61, 0x67, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x76, 0x6f, 0x74, 0x65, 0x73, 0x5f, 0x6f, 0x74,
	0x68, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x76, 0x6f, 0x74, 0x65, 0x73,
	0x4f, 0x74, 0x68, 0x65, 0x72, 0x22, 0x7e, 0x0a, 0x1f, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x65, 0x61,
	0x63, 0x6f, 0x6e, 0x53, 0x6c, 0x6f, 0x74, 0x42, 0x6c, 0x6f, 0x62, 0x54, 0x6f, 0x74, 0x61, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x06, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x42, 0x6c, 0x6f, 0x62, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x06, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x73, 0x12, 0x30, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x07, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x73, 0x22, 0x49, 0x0a, 0x09, 0x42, 0x6c, 0x6f, 0x62, 0x54, 0x6f, 0x74,
	0x61, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x72, 0x6f, 0x6f, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x6f, 0x6f,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x6c, 0x6f, 0x62, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x62, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x22, 0xb8, 0x01, 0x0a, 0x1b, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x53,
	0x6c, 0x6f, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2b, 0x0a, 0x06, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x65, 0x61, 0x63, 0x6f, 0x6e,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x06, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x12, 0x3a, 0x0a,
	0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x0a, 0x70,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x07, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x22, 0xbb, 0x07, 0x0a, 0x0b,
	0x42, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x1d, 0x0a, 0x0a, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x6f, 0x6f, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x52, 0x6f, 0x6f, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x74, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x72,
	0x6f, 0x70, 0x6f, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x12, 0x23, 0x0a, 0x0d, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x11, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x42, 0x79, 0x74,
	0x65, 0x73, 0x12, 0x3f, 0x0a, 0x1c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73,
	0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x19, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x42, 0x79, 0x74, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73,
	0x73, 0x65, 0x64, 0x12, 0x30, 0x0a, 0x14, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x12, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x48, 0x61, 0x73, 0x68, 0x12, 0x34, 0x0a, 0x16, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x14, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x36, 0x0a, 0x17, 0x65,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x65, 0x65, 0x5f, 0x72, 0x65, 0x63,
	0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x65, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65, 0x65, 0x52, 0x65, 0x63, 0x69, 0x70, 0x69,
	0x65, 0x6e, 0x74, 0x12, 0x3a, 0x0a, 0x1a, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x66, 0x65, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x67, 0x61,
	0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x42, 0x61, 0x73, 0x65, 0x46, 0x65, 0x65, 0x50, 0x65, 0x72, 0x47, 0x61, 0x73, 0x12,
	0x2c, 0x0a, 0x12, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x67, 0x61, 0x73,
	0x5f, 0x75, 0x73, 0x65, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x65, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x61, 0x73, 0x55, 0x73, 0x65, 0x64, 0x12, 0x2e, 0x0a,
	0x13, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x67, 0x61, 0x73, 0x5f, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x04, 0x52, 0x11, 0x65, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x61, 0x73, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x35, 0x0a,
	0x17, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x62, 0x6c, 0x6f, 0x62, 0x5f,
	0x67, 0x61, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x04, 0x52, 0x14,
	0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x6c, 0x6f, 0x62, 0x47, 0x61, 0x73,
	0x55, 0x73, 0x65, 0x64, 0x12, 0x39, 0x0a, 0x19, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x65, 0x78, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x62, 0x6c, 0x6f, 0x62, 0x5f, 0x67, 0x61,
	0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x04, 0x52, 0x16, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x45, 0x78, 0x63, 0x65, 0x73, 0x73, 0x42, 0x6c, 0x6f, 0x62, 0x47, 0x61, 0x73, 0x12,
	0x30, 0x0a, 0x14, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x65,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f,
	0x74, 0x12, 0x32, 0x0a, 0x15, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x13, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x48, 0x61, 0x73, 0x68, 0x12, 0x40, 0x0a, 0x1c, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x1a, 0x65, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x40, 0x0a, 0x1c, 0x65, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x1a, 0x65,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x22, 0xc8, 0x01, 0x0a, 0x24, 0x4c, 0x69,
	0x73, 0x74, 0x42, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x53, 0x6c, 0x6f, 0x74, 0x50, 0x72, 0x6f, 0x70,
	0x6f, 0x73, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x32, 0x0a, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72,
	0x6f, 0x70, 0x6f, 0x73, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x08, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x3a, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x07, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x73, 0x22, 0x28, 0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x72,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0xd7,
	0x01, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x64, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a,
	0x0f, 0x70, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x64, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x0e, 0x70,
	0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x12, 0x3a, 0x0a,
	0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x0a, 0x70,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3d, 0x0a, 0x07, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x64, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52,
	0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x22, 0x9a, 0x03, 0x0a, 0x0d, 0x50, 0x72, 0x65,
	0x70, 0x61, 0x72, 0x65, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6c,
	0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x12, 0x26,
	0x0a, 0x0f, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x6c, 0x6f, 0x74, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x12, 0x33, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f,
	0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x63, 0x6f, 0x6e,
	0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x12, 0x21, 0x0a, 0x03, 0x67, 0x65, 0x6f, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x6f,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x03, 0x67, 0x65, 0x6f, 0x12, 0x39, 0x0a, 0x0d, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x5f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x73, 0x12, 0x4c, 0x0a, 0x11, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73,
	0x52, 0x10, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x22, 0x7f, 0x0a, 0x0c, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x42, 0x79, 0x74, 0x65, 0x73,
	0x12, 0x34, 0x0a, 0x16, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x5f,
	0x63, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x14, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x42, 0x79, 0x74, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x70,
	0x72, 0x65, 0x73, 0x73, 0x65, 0x64, 0x22, 0xaa, 0x02, 0x0a, 0x17, 0x45, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x4d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x77, 0x65, 0x69, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x57, 0x65, 0x69, 0x12,
	0x2e, 0x0a, 0x13, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x5f, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x5f, 0x77, 0x65, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x11, 0x63, 0x6f,
	0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x57, 0x65, 0x69, 0x12,
	0x21, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x61, 0x73, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x67, 0x61, 0x73, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12,
	0x19, 0x0a, 0x08, 0x67, 0x61, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x07, 0x67, 0x61, 0x73, 0x55, 0x73, 0x65, 0x64, 0x12, 0x2d, 0x0a, 0x12, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x38, 0x0a, 0x18, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f,
	0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x16, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x42, 0x79,
	0x74, 0x65, 0x73, 0x22, 0xac, 0x02, 0x0a, 0x1b, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x64,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x6c, 0x6f, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x73, 0x6c, 0x6f,
	0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x60, 0x0a, 0x0f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x5f, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x64, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x0e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x79,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x1a,
	0x41, 0x0a, 0x13, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x42, 0x35, 0x5a, 0x33, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x65, 0x74, 0x68, 0x70, 0x61, 0x6e, 0x64, 0x61, 0x6f, 0x70, 0x73, 0x2f, 0x6c, 0x61, 0x62,
	0x2f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_backend_pkg_api_v1_proto_public_proto_rawDescOnce sync.Once
	file_backend_pkg_api_v1_proto_public_proto_rawDescData = file_backend_pkg_api_v1_proto_public_proto_rawDesc
)

func file_backend_pkg_api_v1_proto_public_proto_rawDescGZIP() []byte {
	file_backend_pkg_api_v1_proto_public_proto_rawDescOnce.Do(func() {
		file_backend_pkg_api_v1_proto_public_proto_rawDescData = protoimpl.X.CompressGZIP(file_backend_pkg_api_v1_proto_public_proto_rawDescData)
	})
	return file_backend_pkg_api_v1_proto_public_proto_rawDescData
}

var file_backend_pkg_api_v1_proto_public_proto_msgTypes = make([]protoimpl.MessageInfo, 69)
var file_backend_pkg_api_v1_proto_public_proto_goTypes = []any{
	(*ListNodesResponse)(nil),                            // 0: api.v1.ListNodesResponse
	(*ListNetworksResponse)(nil),                         // 1: api.v1.ListNetworksResponse
	(*Node)(nil),                                         // 2: api.v1.Node
	(*ClientInfo)(nil),                                   // 3: api.v1.ClientInfo
	(*GeoInfo)(nil),                                      // 4: api.v1.GeoInfo
	(*ConsensusInfo)(nil),                                // 5: api.v1.ConsensusInfo
	(*PaginationMetadata)(nil),                           // 6: api.v1.PaginationMetadata
	(*FilterMetadata)(nil),                               // 7: api.v1.FilterMetadata
	(*StateExpiryAccessTotalResponse)(nil),               // 8: api.v1.StateExpiryAccessTotalResponse
	(*StateExpiryAccessTotal)(nil),                       // 9: api.v1.StateExpiryAccessTotal
	(*StateExpiryBlockResponse)(nil),                     // 10: api.v1.StateExpiryBlockResponse
	(*StateExpiryBlock)(nil),                             // 11: api.v1.StateExpiryBlock
	(*StateExpiryStorageTotalResponse)(nil),              // 12: api.v1.StateExpiryStorageTotalResponse
	(*StateExpiryStorageTotal)(nil),                      // 13: api.v1.StateExpiryStorageTotal
	(*Network)(nil),                                      // 14: api.v1.Network
	(*NetworkFilterMetadata)(nil),                        // 15: api.v1.NetworkFilterMetadata
	(*StateExpiryAccessHistoryResponse)(nil),             // 16: api.v1.StateExpiryAccessHistoryResponse
	(*StateExpiryAccessHistory)(nil),                     // 17: api.v1.StateExpiryAccessHistory
	(*StateExpiryStorageHistoryResponse)(nil),            // 18: api.v1.StateExpiryStorageHistoryResponse
	(*StateExpiryStorageHistory)(nil),                    // 19: api.v1.StateExpiryStorageHistory
	(*StateExpiryStorageExpiredTopResponse)(nil),         // 20: api.v1.StateExpiryStorageExpiredTopResponse
	(*StateExpiryStorageExpiredTop)(nil),                 // 21: api.v1.StateExpiryStorageExpiredTop
	(*StateExpiryStorageTopResponse)(nil),                // 22: api.v1.StateExpiryStorageTopResponse
	(*StateExpiryStorageTop)(nil),                        // 23: api.v1.StateExpiryStorageTop
	(*ListBeaconSlotMevRelayResponse)(nil),               // 24: api.v1.ListBeaconSlotMevRelayResponse
	(*MevRelayBidCount)(nil),                             // 25: api.v1.MevRelayBidCount
	(*ListBeaconSlotMevBuilderCountResponse)(nil),        // 26: api.v1.ListBeaconSlotMevBuilderCountResponse
	(*MevBuilderBidCount)(nil),                           // 27: api.v1.MevBuilderBidCount
	(*ListBeaconSlotMevResponse)(nil),                    // 28: api.v1.ListBeaconSlotMevResponse
	(*MevBlock)(nil),                                     // 29: api.v1.MevBlock
	(*ListBeaconSlotMevBuilderResponse)(nil),             // 30: api.v1.ListBeaconSlotMevBuilderResponse
	(*MevBuilderBid)(nil),                                // 31: api.v1.MevBuilderBid
	(*ErrorResponse)(nil),                                // 32: api.v1.ErrorResponse
	(*GetConfigResponse)(nil),                            // 33: api.v1.GetConfigResponse
	(*FrontendConfig)(nil),                               // 34: api.v1.FrontendConfig
	(*EthereumConfig)(nil),                               // 35: api.v1.EthereumConfig
	(*NetworkConfig)(nil),                                // 36: api.v1.NetworkConfig
	(*ForkConfig)(nil),                                   // 37: api.v1.ForkConfig
	(*ConsensusForks)(nil),                               // 38: api.v1.ConsensusForks
	(*ForkInfo)(nil),                                     // 39: api.v1.ForkInfo
	(*ExperimentsConfig)(nil),                            // 40: api.v1.ExperimentsConfig
	(*ExperimentConfig)(nil),                             // 41: api.v1.ExperimentConfig
	(*ExperimentDataAvailability)(nil),                   // 42: api.v1.ExperimentDataAvailability
	(*GetExperimentConfigRequest)(nil),                   // 43: api.v1.GetExperimentConfigRequest
	(*GetExperimentConfigResponse)(nil),                  // 44: api.v1.GetExperimentConfigResponse
	(*ListBeaconSlotBlockTimingResponse)(nil),            // 45: api.v1.ListBeaconSlotBlockTimingResponse
	(*BlockTimingNode)(nil),                              // 46: api.v1.BlockTimingNode
	(*ListBeaconSlotBlobTimingResponse)(nil),             // 47: api.v1.ListBeaconSlotBlobTimingResponse
	(*BlobTimingNode)(nil),                               // 48: api.v1.BlobTimingNode
	(*ListBeaconSlotAttestationTimingResponse)(nil),      // 49: api.v1.ListBeaconSlotAttestationTimingResponse
	(*AttestationTimingChunk)(nil),                       // 50: api.v1.AttestationTimingChunk
	(*ListBeaconSlotAttestationCorrectnessResponse)(nil), // 51: api.v1.ListBeaconSlotAttestationCorrectnessResponse
	(*AttestationCorrectness)(nil),                       // 52: api.v1.AttestationCorrectness
	(*ListBeaconSlotBlobTotalResponse)(nil),              // 53: api.v1.ListBeaconSlotBlobTotalResponse
	(*BlobTotal)(nil),                                    // 54: api.v1.BlobTotal
	(*ListBeaconSlotBlockResponse)(nil),                  // 55: api.v1.ListBeaconSlotBlockResponse
	(*BeaconBlock)(nil),                                  // 56: api.v1.BeaconBlock
	(*ListBeaconSlotProposerEntityResponse)(nil),         // 57: api.v1.ListBeaconSlotProposerEntityResponse
	(*ProposerEntity)(nil),                               // 58: api.v1.ProposerEntity
	(*ListPreparedBlocksResponse)(nil),                   // 59: api.v1.ListPreparedBlocksResponse
	(*PreparedBlock)(nil),                                // 60: api.v1.PreparedBlock
	(*BlockMetrics)(nil),                                 // 61: api.v1.BlockMetrics
	(*ExecutionPayloadMetrics)(nil),                      // 62: api.v1.ExecutionPayloadMetrics
	(*PreparedBlockFilterMetadata)(nil),                  // 63: api.v1.PreparedBlockFilterMetadata
	nil,                                                  // 64: api.v1.FilterMetadata.AppliedFiltersEntry
	nil,                                                  // 65: api.v1.EthereumConfig.NetworksEntry
	nil,                                                  // 66: api.v1.ForkInfo.MinClientVersionsEntry
	nil,                                                  // 67: api.v1.ExperimentConfig.DataAvailabilityEntry
	nil,                                                  // 68: api.v1.PreparedBlockFilterMetadata.AppliedFiltersEntry
	(*structpb.Struct)(nil),                              // 69: google.protobuf.Struct
}
var file_backend_pkg_api_v1_proto_public_proto_depIdxs = []int32{
	2,  // 0: api.v1.ListNodesResponse.nodes:type_name -> api.v1.Node
	6,  // 1: api.v1.ListNodesResponse.pagination:type_name -> api.v1.PaginationMetadata
	7,  // 2: api.v1.ListNodesResponse.filters:type_name -> api.v1.FilterMetadata
	14, // 3: api.v1.ListNetworksResponse.networks:type_name -> api.v1.Network
	15, // 4: api.v1.ListNetworksResponse.filters:type_name -> api.v1.NetworkFilterMetadata
	3,  // 5: api.v1.Node.client:type_name -> api.v1.ClientInfo
	4,  // 6: api.v1.Node.geo:type_name -> api.v1.GeoInfo
	5,  // 7: api.v1.Node.consensus:type_name -> api.v1.ConsensusInfo
	64, // 8: api.v1.FilterMetadata.applied_filters:type_name -> api.v1.FilterMetadata.AppliedFiltersEntry
	9,  // 9: api.v1.StateExpiryAccessTotalResponse.item:type_name -> api.v1.StateExpiryAccessTotal
	7,  // 10: api.v1.StateExpiryAccessTotalResponse.filters:type_name -> api.v1.FilterMetadata
	11, // 11: api.v1.StateExpiryBlockResponse.item:type_name -> api.v1.StateExpiryBlock
	7,  // 12: api.v1.StateExpiryBlockResponse.filters:type_name -> api.v1.FilterMetadata
	13, // 13: api.v1.StateExpiryStorageTotalResponse.item:type_name -> api.v1.StateExpiryStorageTotal
	7,  // 14: api.v1.StateExpiryStorageTotalResponse.filters:type_name -> api.v1.FilterMetadata
	17, // 15: api.v1.StateExpiryAccessHistoryResponse.items:type_name -> api.v1.StateExpiryAccessHistory
	6,  // 16: api.v1.StateExpiryAccessHistoryResponse.pagination:type_name -> api.v1.PaginationMetadata
	7,  // 17: api.v1.StateExpiryAccessHistoryResponse.filters:type_name -> api.v1.FilterMetadata
	19, // 18: api.v1.StateExpiryStorageHistoryResponse.items:type_name -> api.v1.StateExpiryStorageHistory
	6,  // 19: api.v1.StateExpiryStorageHistoryResponse.pagination:type_name -> api.v1.PaginationMetadata
	7,  // 20: api.v1.StateExpiryStorageHistoryResponse.filters:type_name -> api.v1.FilterMetadata
	21, // 21: api.v1.StateExpiryStorageExpiredTopResponse.items:type_name -> api.v1.StateExpiryStorageExpiredTop
	7,  // 22: api.v1.StateExpiryStorageExpiredTopResponse.filters:type_name -> api.v1.FilterMetadata
	23, // 23: api.v1.StateExpiryStorageTopResponse.items:type_name -> api.v1.StateExpiryStorageTop
	7,  // 24: api.v1.StateExpiryStorageTopResponse.filters:type_name -> api.v1.FilterMetadata
	25, // 25: api.v1.ListBeaconSlotMevRelayResponse.relays:type_name -> api.v1.MevRelayBidCount
	6,  // 26: api.v1.ListBeaconSlotMevRelayResponse.pagination:type_name -> api.v1.PaginationMetadata
	7,  // 27: api.v1.ListBeaconSlotMevRelayResponse.filters:type_name -> api.v1.FilterMetadata
	27, // 28: api.v1.ListBeaconSlotMevBuilderCountResponse.builders:type_name -> api.v1.MevBuilderBidCount
	6,  // 29: api.v1.ListBeaconSlotMevBuilderCountResponse.pagination:type_name -> api.v1.PaginationMetadata
	7,  // 30: api.v1.ListBeaconSlotMevBuilderCountResponse.filters:type_name -> api.v1.FilterMetadata
	29, // 31: api.v1.ListBeaconSlotMevResponse.blocks:type_name -> api.v1.MevBlock
	6,  // 32: api.v1.ListBeaconSlotMevResponse.pagination:type_name -> api.v1.PaginationMetadata
	7,  // 33: api.v1.ListBeaconSlotMevResponse.filters:type_name -> api.v1.FilterMetadata
	31, // 34: api.v1.ListBeaconSlotMevBuilderResponse.builders:type_name -> api.v1.MevBuilderBid
	6,  // 35: api.v1.ListBeaconSlotMevBuilderResponse.pagination:type_name -> api.v1.PaginationMetadata
	7,  // 36: api.v1.ListBeaconSlotMevBuilderResponse.filters:type_name -> api.v1.FilterMetadata
	34, // 37: api.v1.GetConfigResponse.config:type_name -> api.v1.FrontendConfig
	35, // 38: api.v1.FrontendConfig.ethereum:type_name -> api.v1.EthereumConfig
	41, // 39: api.v1.FrontendConfig.experiments:type_name -> api.v1.ExperimentConfig
	65, // 40: api.v1.EthereumConfig.networks:type_name -> api.v1.EthereumConfig.NetworksEntry
	37, // 41: api.v1.NetworkConfig.forks:type_name -> api.v1.ForkConfig
	38, // 42: api.v1.ForkConfig.consensus:type_name -> api.v1.ConsensusForks
	39, // 43: api.v1.ConsensusForks.electra:type_name -> api.v1.ForkInfo
	39, // 44: api.v1.ConsensusForks.fusaka:type_name -> api.v1.ForkInfo
	66, // 45: api.v1.ForkInfo.min_client_versions:type_name -> api.v1.ForkInfo.MinClientVersionsEntry
	41, // 46: api.v1.ExperimentsConfig.experiments:type_name -> api.v1.ExperimentConfig
	69, // 47: api.v1.ExperimentConfig.config:type_name -> google.protobuf.Struct
	67, // 48: api.v1.ExperimentConfig.data_availability:type_name -> api.v1.ExperimentConfig.DataAvailabilityEntry
	41, // 49: api.v1.GetExperimentConfigResponse.experiment:type_name -> api.v1.ExperimentConfig
	46, // 50: api.v1.ListBeaconSlotBlockTimingResponse.nodes:type_name -> api.v1.BlockTimingNode
	6,  // 51: api.v1.ListBeaconSlotBlockTimingResponse.pagination:type_name -> api.v1.PaginationMetadata
	7,  // 52: api.v1.ListBeaconSlotBlockTimingResponse.filters:type_name -> api.v1.FilterMetadata
	4,  // 53: api.v1.BlockTimingNode.geo:type_name -> api.v1.GeoInfo
	3,  // 54: api.v1.BlockTimingNode.client:type_name -> api.v1.ClientInfo
	48, // 55: api.v1.ListBeaconSlotBlobTimingResponse.nodes:type_name -> api.v1.BlobTimingNode
	6,  // 56: api.v1.ListBeaconSlotBlobTimingResponse.pagination:type_name -> api.v1.PaginationMetadata
	7,  // 57: api.v1.ListBeaconSlotBlobTimingResponse.filters:type_name -> api.v1.FilterMetadata
	4,  // 58: api.v1.BlobTimingNode.geo:type_name -> api.v1.GeoInfo
	3,  // 59: api.v1.BlobTimingNode.client:type_name -> api.v1.ClientInfo
	50, // 60: api.v1.ListBeaconSlotAttestationTimingResponse.chunks:type_name -> api.v1.AttestationTimingChunk
	6,  // 61: api.v1.ListBeaconSlotAttestationTimingResponse.pagination:type_name -> api.v1.PaginationMetadata
	7,  // 62: api.v1.ListBeaconSlotAttestationTimingResponse.filters:type_name -> api.v1.FilterMetadata
	52, // 63: api.v1.ListBeaconSlotAttestationCorrectnessResponse.blocks:type_name -> api.v1.AttestationCorrectness
	7,  // 64: api.v1.ListBeaconSlotAttestationCorrectnessResponse.filters:type_name -> api.v1.FilterMetadata
	54, // 65: api.v1.ListBeaconSlotBlobTotalResponse.blocks:type_name -> api.v1.BlobTotal
	7,  // 66: api.v1.ListBeaconSlotBlobTotalResponse.filters:type_name -> api.v1.FilterMetadata
	56, // 67: api.v1.ListBeaconSlotBlockResponse.blocks:type_name -> api.v1.BeaconBlock
	6,  // 68: api.v1.ListBeaconSlotBlockResponse.pagination:type_name -> api.v1.PaginationMetadata
	7,  // 69: api.v1.ListBeaconSlotBlockResponse.filters:type_name -> api.v1.FilterMetadata
	58, // 70: api.v1.ListBeaconSlotProposerEntityResponse.entities:type_name -> api.v1.ProposerEntity
	6,  // 71: api.v1.ListBeaconSlotProposerEntityResponse.pagination:type_name -> api.v1.PaginationMetadata
	7,  // 72: api.v1.ListBeaconSlotProposerEntityResponse.filters:type_name -> api.v1.FilterMetadata
	60, // 73: api.v1.ListPreparedBlocksResponse.prepared_blocks:type_name -> api.v1.PreparedBlock
	6,  // 74: api.v1.ListPreparedBlocksResponse.pagination:type_name -> api.v1.PaginationMetadata
	63, // 75: api.v1.ListPreparedBlocksResponse.filters:type_name -> api.v1.PreparedBlockFilterMetadata
	3,  // 76: api.v1.PreparedBlock.client:type_name -> api.v1.ClientInfo
	5,  // 77: api.v1.PreparedBlock.consensus:type_name -> api.v1.ConsensusInfo
	4,  // 78: api.v1.PreparedBlock.geo:type_name -> api.v1.GeoInfo
	61, // 79: api.v1.PreparedBlock.block_metrics:type_name -> api.v1.BlockMetrics
	62, // 80: api.v1.PreparedBlock.execution_metrics:type_name -> api.v1.ExecutionPayloadMetrics
	68, // 81: api.v1.PreparedBlockFilterMetadata.applied_filters:type_name -> api.v1.PreparedBlockFilterMetadata.AppliedFiltersEntry
	36, // 82: api.v1.EthereumConfig.NetworksEntry.value:type_name -> api.v1.NetworkConfig
	42, // 83: api.v1.ExperimentConfig.DataAvailabilityEntry.value:type_name -> api.v1.ExperimentDataAvailability
	84, // [84:84] is the sub-list for method output_type
	84, // [84:84] is the sub-list for method input_type
	84, // [84:84] is the sub-list for extension type_name
	84, // [84:84] is the sub-list for extension extendee
	0,  // [0:84] is the sub-list for field type_name
}

func init() { file_backend_pkg_api_v1_proto_public_proto_init() }
func file_backend_pkg_api_v1_proto_public_proto_init() {
	if File_backend_pkg_api_v1_proto_public_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_backend_pkg_api_v1_proto_public_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*ListNodesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_pkg_api_v1_proto_public_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*ListNetworksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_pkg_api_v1_proto_public_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*Node); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_pkg_api_v1_proto_public_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*ClientInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_pkg_api_v1_proto_public_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*GeoInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_pkg_api_v1_proto_public_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*ConsensusInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_pkg_api_v1_proto_public_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*PaginationMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_pkg_api_v1_proto_public_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*FilterMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_pkg_api_v1_proto_public_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*StateExpiryAccessTotalResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_pkg_api_v1_proto_public_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*StateExpiryAccessTotal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_pkg_api_v1_proto_public_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*StateExpiryBlockResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_pkg_api_v1_proto_public_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*StateExpiryBlock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_pkg_api_v1_proto_public_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*StateExpiryStorageTotalResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_pkg_api_v1_proto_public_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*StateExpiryStorageTotal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_pkg_api_v1_proto_public_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*Network); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_pkg_api_v1_proto_public_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*NetworkFilterMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_pkg_api_v1_proto_public_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*StateExpiryAccessHistoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_pkg_api_v1_proto_public_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*StateExpiryAccessHistory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_pkg_api_v1_proto_public_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*StateExpiryStorageHistoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_pkg_api_v1_proto_public_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*StateExpiryStorageHistory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_pkg_api_v1_proto_public_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*StateExpiryStorageExpiredTopResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_pkg_api_v1_proto_public_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*StateExpiryStorageExpiredTop); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_pkg_api_v1_proto_public_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*StateExpiryStorageTopResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_pkg_api_v1_proto_public_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*StateExpiryStorageTop); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_pkg_api_v1_proto_public_proto_msgTypes[24].Exporter = func(v any, i int) any {
			switch v := v.(*ListBeaconSlotMevRelayResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_pkg_api_v1_proto_public_proto_msgTypes[25].Exporter = func(v any, i int) any {
			switch v := v.(*MevRelayBidCount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_pkg_api_v1_proto_public_proto_msgTypes[26].Exporter = func(v any, i int) any {
			switch v := v.(*ListBeaconSlotMevBuilderCountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_pkg_api_v1_proto_public_proto_msgTypes[27].Exporter = func(v any, i int) any {
			switch v := v.(*MevBuilderBidCount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_pkg_api_v1_proto_public_proto_msgTypes[28].Exporter = func(v any, i int) any {
			switch v := v.(*ListBeaconSlotMevResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_pkg_api_v1_proto_public_proto_msgTypes[29].Exporter = func(v any, i int) any {
			switch v := v.(*MevBlock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_pkg_api_v1_proto_public_proto_msgTypes[30].Exporter = func(v any, i int) any {
			switch v := v.(*ListBeaconSlotMevBuilderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_pkg_api_v1_proto_public_proto_msgTypes[31].Exporter = func(v any, i int) any {
			switch v := v.(*MevBuilderBid); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_pkg_api_v1_proto_public_proto_msgTypes[32].Exporter = func(v any, i int) any {
			switch v := v.(*ErrorResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_pkg_api_v1_proto_public_proto_msgTypes[33].Exporter = func(v any, i int) any {
			switch v := v.(*GetConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_pkg_api_v1_proto_public_proto_msgTypes[34].Exporter = func(v any, i int) any {
			switch v := v.(*FrontendConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_pkg_api_v1_proto_public_proto_msgTypes[35].Exporter = func(v any, i int) any {
			switch v := v.(*EthereumConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_pkg_api_v1_proto_public_proto_msgTypes[36].Exporter = func(v any, i int) any {
			switch v := v.(*NetworkConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_pkg_api_v1_proto_public_proto_msgTypes[37].Exporter = func(v any, i int) any {
			switch v := v.(*ForkConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_pkg_api_v1_proto_public_proto_msgTypes[38].Exporter = func(v any, i int) any {
			switch v := v.(*ConsensusForks); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_pkg_api_v1_proto_public_proto_msgTypes[39].Exporter = func(v any, i int) any {
			switch v := v.(*ForkInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_pkg_api_v1_proto_public_proto_msgTypes[40].Exporter = func(v any, i int) any {
			switch v := v.(*ExperimentsConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_pkg_api_v1_proto_public_proto_msgTypes[41].Exporter = func(v any, i int) any {
			switch v := v.(*ExperimentConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_pkg_api_v1_proto_public_proto_msgTypes[42].Exporter = func(v any, i int) any {
			switch v := v.(*ExperimentDataAvailability); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_pkg_api_v1_proto_public_proto_msgTypes[43].Exporter = func(v any, i int) any {
			switch v := v.(*GetExperimentConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_pkg_api_v1_proto_public_proto_msgTypes[44].Exporter = func(v any, i int) any {
			switch v := v.(*GetExperimentConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_pkg_api_v1_proto_public_proto_msgTypes[45].Exporter = func(v any, i int) any {
			switch v := v.(*ListBeaconSlotBlockTimingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_pkg_api_v1_proto_public_proto_msgTypes[46].Exporter = func(v any, i int) any {
			switch v := v.(*BlockTimingNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_pkg_api_v1_proto_public_proto_msgTypes[47].Exporter = func(v any, i int) any {
			switch v := v.(*ListBeaconSlotBlobTimingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_pkg_api_v1_proto_public_proto_msgTypes[48].Exporter = func(v any, i int) any {
			switch v := v.(*BlobTimingNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_pkg_api_v1_proto_public_proto_msgTypes[49].Exporter = func(v any, i int) any {
			switch v := v.(*ListBeaconSlotAttestationTimingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_pkg_api_v1_proto_public_proto_msgTypes[50].Exporter = func(v any, i int) any {
			switch v := v.(*AttestationTimingChunk); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_pkg_api_v1_proto_public_proto_msgTypes[51].Exporter = func(v any, i int) any {
			switch v := v.(*ListBeaconSlotAttestationCorrectnessResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_pkg_api_v1_proto_public_proto_msgTypes[52].Exporter = func(v any, i int) any {
			switch v := v.(*AttestationCorrectness); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_pkg_api_v1_proto_public_proto_msgTypes[53].Exporter = func(v any, i int) any {
			switch v := v.(*ListBeaconSlotBlobTotalResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_pkg_api_v1_proto_public_proto_msgTypes[54].Exporter = func(v any, i int) any {
			switch v := v.(*BlobTotal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_pkg_api_v1_proto_public_proto_msgTypes[55].Exporter = func(v any, i int) any {
			switch v := v.(*ListBeaconSlotBlockResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_pkg_api_v1_proto_public_proto_msgTypes[56].Exporter = func(v any, i int) any {
			switch v := v.(*BeaconBlock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_pkg_api_v1_proto_public_proto_msgTypes[57].Exporter = func(v any, i int) any {
			switch v := v.(*ListBeaconSlotProposerEntityResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_pkg_api_v1_proto_public_proto_msgTypes[58].Exporter = func(v any, i int) any {
			switch v := v.(*ProposerEntity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_pkg_api_v1_proto_public_proto_msgTypes[59].Exporter = func(v any, i int) any {
			switch v := v.(*ListPreparedBlocksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_pkg_api_v1_proto_public_proto_msgTypes[60].Exporter = func(v any, i int) any {
			switch v := v.(*PreparedBlock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_pkg_api_v1_proto_public_proto_msgTypes[61].Exporter = func(v any, i int) any {
			switch v := v.(*BlockMetrics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_pkg_api_v1_proto_public_proto_msgTypes[62].Exporter = func(v any, i int) any {
			switch v := v.(*ExecutionPayloadMetrics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_pkg_api_v1_proto_public_proto_msgTypes[63].Exporter = func(v any, i int) any {
			switch v := v.(*PreparedBlockFilterMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_backend_pkg_api_v1_proto_public_proto_msgTypes[4].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_backend_pkg_api_v1_proto_public_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   69,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_backend_pkg_api_v1_proto_public_proto_goTypes,
		DependencyIndexes: file_backend_pkg_api_v1_proto_public_proto_depIdxs,
		MessageInfos:      file_backend_pkg_api_v1_proto_public_proto_msgTypes,
	}.Build()
	File_backend_pkg_api_v1_proto_public_proto = out.File
	file_backend_pkg_api_v1_proto_public_proto_rawDesc = nil
	file_backend_pkg_api_v1_proto_public_proto_goTypes = nil
	file_backend_pkg_api_v1_proto_public_proto_depIdxs = nil
}
