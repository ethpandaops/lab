syntax = "proto3";
package xatu_cbt;
option go_package = "github.com/ethpandaops/lab/backend/pkg/server/proto/xatu_cbt";

// This file defines the internal XatuCBT service that acts as a pass-through layer
// to upstream CBT data.
//
// Architecture:
// - This service uses upstream CBT proto definitions directly (imported from vendor/)
// - No type transformations occur at this layer - it's a pure pass-through
// - The service enriches the request with network routing via gRPC metadata
// - Data transformation to public API types happens in the REST API layer (cbt_api.proto)
//
// Flow:
// 1. REST API receives request with network in URL path (/api/v1/mainnet/nodes)
// 2. REST handler adds network to gRPC metadata and calls this service
// 3. This service extracts network, routes to appropriate ClickHouse instance
// 4. Returns raw CBT data using upstream types
// 5. REST layer transforms CBT types to public API types

import "vendor/xatu-cbt/clickhouse/fct_node_active_last_24h.proto";
import "vendor/xatu-cbt/clickhouse/common.proto";

// XatuCBT service provides access to CBT data from multiple ClickHouse instances.
// Each RPC corresponds to a specific CBT table/view and uses upstream request/response types.
service XatuCBT {
  // ListFctNodeActiveLast24h queries the fact table of nodes active in the last 24 hours.
  // This table contains node metadata for all nodes seen within a rolling 24-hour window.
  rpc ListFctNodeActiveLast24h(cbt.ListFctNodeActiveLast24hRequest) returns (cbt.ListFctNodeActiveLast24hResponse);
}
