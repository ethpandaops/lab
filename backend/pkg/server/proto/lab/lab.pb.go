// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: pkg/server/proto/lab/lab.proto

package lab

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// GetFrontendConfigRequest is the request for the GetFrontendConfig method
type GetFrontendConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetFrontendConfigRequest) Reset() {
	*x = GetFrontendConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_server_proto_lab_lab_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFrontendConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFrontendConfigRequest) ProtoMessage() {}

func (x *GetFrontendConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_proto_lab_lab_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFrontendConfigRequest.ProtoReflect.Descriptor instead.
func (*GetFrontendConfigRequest) Descriptor() ([]byte, []int) {
	return file_pkg_server_proto_lab_lab_proto_rawDescGZIP(), []int{0}
}

// GetFrontendConfigResponse is the response for the GetFrontendConfig method
type GetFrontendConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Config *FrontendConfig `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *GetFrontendConfigResponse) Reset() {
	*x = GetFrontendConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_server_proto_lab_lab_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFrontendConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFrontendConfigResponse) ProtoMessage() {}

func (x *GetFrontendConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_proto_lab_lab_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFrontendConfigResponse.ProtoReflect.Descriptor instead.
func (*GetFrontendConfigResponse) Descriptor() ([]byte, []int) {
	return file_pkg_server_proto_lab_lab_proto_rawDescGZIP(), []int{1}
}

func (x *GetFrontendConfigResponse) GetConfig() *FrontendConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

// FrontendConfig is the frontend configuration for the lab. Data here is used to populate the frontend UI,
// and is exposed publically.
type FrontendConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Config *FrontendConfig_Config `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *FrontendConfig) Reset() {
	*x = FrontendConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_server_proto_lab_lab_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrontendConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrontendConfig) ProtoMessage() {}

func (x *FrontendConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_proto_lab_lab_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrontendConfig.ProtoReflect.Descriptor instead.
func (*FrontendConfig) Descriptor() ([]byte, []int) {
	return file_pkg_server_proto_lab_lab_proto_rawDescGZIP(), []int{2}
}

func (x *FrontendConfig) GetConfig() *FrontendConfig_Config {
	if x != nil {
		return x.Config
	}
	return nil
}

type GetConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Modules  map[string]*GetConfigResponse_ModuleConfig `protobuf:"bytes,1,rep,name=modules,proto3" json:"modules,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Ethereum *FrontendConfig_EthereumConfig             `protobuf:"bytes,2,opt,name=ethereum,proto3" json:"ethereum,omitempty"`
}

func (x *GetConfigResponse) Reset() {
	*x = GetConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_server_proto_lab_lab_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConfigResponse) ProtoMessage() {}

func (x *GetConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_proto_lab_lab_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConfigResponse.ProtoReflect.Descriptor instead.
func (*GetConfigResponse) Descriptor() ([]byte, []int) {
	return file_pkg_server_proto_lab_lab_proto_rawDescGZIP(), []int{3}
}

func (x *GetConfigResponse) GetModules() map[string]*GetConfigResponse_ModuleConfig {
	if x != nil {
		return x.Modules
	}
	return nil
}

func (x *GetConfigResponse) GetEthereum() *FrontendConfig_EthereumConfig {
	if x != nil {
		return x.Ethereum
	}
	return nil
}

// Config is the configuration for the lab
type FrontendConfig_Config struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Modules  *FrontendConfig_Modules        `protobuf:"bytes,1,opt,name=modules,proto3" json:"modules,omitempty"`
	Ethereum *FrontendConfig_EthereumConfig `protobuf:"bytes,2,opt,name=ethereum,proto3" json:"ethereum,omitempty"`
}

func (x *FrontendConfig_Config) Reset() {
	*x = FrontendConfig_Config{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_server_proto_lab_lab_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrontendConfig_Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrontendConfig_Config) ProtoMessage() {}

func (x *FrontendConfig_Config) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_proto_lab_lab_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrontendConfig_Config.ProtoReflect.Descriptor instead.
func (*FrontendConfig_Config) Descriptor() ([]byte, []int) {
	return file_pkg_server_proto_lab_lab_proto_rawDescGZIP(), []int{2, 0}
}

func (x *FrontendConfig_Config) GetModules() *FrontendConfig_Modules {
	if x != nil {
		return x.Modules
	}
	return nil
}

func (x *FrontendConfig_Config) GetEthereum() *FrontendConfig_EthereumConfig {
	if x != nil {
		return x.Ethereum
	}
	return nil
}

// Modules is the configuration for the modules
type FrontendConfig_Modules struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BeaconChainTimings     *FrontendConfig_BeaconChainTimingsModule     `protobuf:"bytes,1,opt,name=beacon_chain_timings,json=beaconChainTimings,proto3" json:"beacon_chain_timings,omitempty"`
	XatuPublicContributors *FrontendConfig_XatuPublicContributorsModule `protobuf:"bytes,2,opt,name=xatu_public_contributors,json=xatuPublicContributors,proto3" json:"xatu_public_contributors,omitempty"`
	Beacon                 *FrontendConfig_BeaconModule                 `protobuf:"bytes,3,opt,name=beacon,proto3" json:"beacon,omitempty"`
}

func (x *FrontendConfig_Modules) Reset() {
	*x = FrontendConfig_Modules{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_server_proto_lab_lab_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrontendConfig_Modules) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrontendConfig_Modules) ProtoMessage() {}

func (x *FrontendConfig_Modules) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_proto_lab_lab_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrontendConfig_Modules.ProtoReflect.Descriptor instead.
func (*FrontendConfig_Modules) Descriptor() ([]byte, []int) {
	return file_pkg_server_proto_lab_lab_proto_rawDescGZIP(), []int{2, 1}
}

func (x *FrontendConfig_Modules) GetBeaconChainTimings() *FrontendConfig_BeaconChainTimingsModule {
	if x != nil {
		return x.BeaconChainTimings
	}
	return nil
}

func (x *FrontendConfig_Modules) GetXatuPublicContributors() *FrontendConfig_XatuPublicContributorsModule {
	if x != nil {
		return x.XatuPublicContributors
	}
	return nil
}

func (x *FrontendConfig_Modules) GetBeacon() *FrontendConfig_BeaconModule {
	if x != nil {
		return x.Beacon
	}
	return nil
}

// BeaconChainTimingsModule represents the beacon chain timings module configuration
type FrontendConfig_BeaconChainTimingsModule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Networks    []string                     `protobuf:"bytes,1,rep,name=networks,proto3" json:"networks,omitempty"`
	TimeWindows []*FrontendConfig_TimeWindow `protobuf:"bytes,2,rep,name=time_windows,json=timeWindows,proto3" json:"time_windows,omitempty"`
	PathPrefix  string                       `protobuf:"bytes,3,opt,name=path_prefix,json=pathPrefix,proto3" json:"path_prefix,omitempty"`
	Enabled     bool                         `protobuf:"varint,4,opt,name=enabled,proto3" json:"enabled,omitempty"`
}

func (x *FrontendConfig_BeaconChainTimingsModule) Reset() {
	*x = FrontendConfig_BeaconChainTimingsModule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_server_proto_lab_lab_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrontendConfig_BeaconChainTimingsModule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrontendConfig_BeaconChainTimingsModule) ProtoMessage() {}

func (x *FrontendConfig_BeaconChainTimingsModule) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_proto_lab_lab_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrontendConfig_BeaconChainTimingsModule.ProtoReflect.Descriptor instead.
func (*FrontendConfig_BeaconChainTimingsModule) Descriptor() ([]byte, []int) {
	return file_pkg_server_proto_lab_lab_proto_rawDescGZIP(), []int{2, 2}
}

func (x *FrontendConfig_BeaconChainTimingsModule) GetNetworks() []string {
	if x != nil {
		return x.Networks
	}
	return nil
}

func (x *FrontendConfig_BeaconChainTimingsModule) GetTimeWindows() []*FrontendConfig_TimeWindow {
	if x != nil {
		return x.TimeWindows
	}
	return nil
}

func (x *FrontendConfig_BeaconChainTimingsModule) GetPathPrefix() string {
	if x != nil {
		return x.PathPrefix
	}
	return ""
}

func (x *FrontendConfig_BeaconChainTimingsModule) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

// XatuPublicContributorsModule represents the Xatu public contributors module configuration
type FrontendConfig_XatuPublicContributorsModule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Networks    []string                     `protobuf:"bytes,1,rep,name=networks,proto3" json:"networks,omitempty"`
	TimeWindows []*FrontendConfig_TimeWindow `protobuf:"bytes,2,rep,name=time_windows,json=timeWindows,proto3" json:"time_windows,omitempty"`
	PathPrefix  string                       `protobuf:"bytes,3,opt,name=path_prefix,json=pathPrefix,proto3" json:"path_prefix,omitempty"`
	Enabled     bool                         `protobuf:"varint,4,opt,name=enabled,proto3" json:"enabled,omitempty"`
}

func (x *FrontendConfig_XatuPublicContributorsModule) Reset() {
	*x = FrontendConfig_XatuPublicContributorsModule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_server_proto_lab_lab_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrontendConfig_XatuPublicContributorsModule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrontendConfig_XatuPublicContributorsModule) ProtoMessage() {}

func (x *FrontendConfig_XatuPublicContributorsModule) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_proto_lab_lab_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrontendConfig_XatuPublicContributorsModule.ProtoReflect.Descriptor instead.
func (*FrontendConfig_XatuPublicContributorsModule) Descriptor() ([]byte, []int) {
	return file_pkg_server_proto_lab_lab_proto_rawDescGZIP(), []int{2, 3}
}

func (x *FrontendConfig_XatuPublicContributorsModule) GetNetworks() []string {
	if x != nil {
		return x.Networks
	}
	return nil
}

func (x *FrontendConfig_XatuPublicContributorsModule) GetTimeWindows() []*FrontendConfig_TimeWindow {
	if x != nil {
		return x.TimeWindows
	}
	return nil
}

func (x *FrontendConfig_XatuPublicContributorsModule) GetPathPrefix() string {
	if x != nil {
		return x.PathPrefix
	}
	return ""
}

func (x *FrontendConfig_XatuPublicContributorsModule) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

// BeaconModule represents the beacon module configuration
type FrontendConfig_BeaconModule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled     bool                                           `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Description string                                         `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	PathPrefix  string                                         `protobuf:"bytes,3,opt,name=path_prefix,json=pathPrefix,proto3" json:"path_prefix,omitempty"`
	Networks    map[string]*FrontendConfig_BeaconNetworkConfig `protobuf:"bytes,4,rep,name=networks,proto3" json:"networks,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *FrontendConfig_BeaconModule) Reset() {
	*x = FrontendConfig_BeaconModule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_server_proto_lab_lab_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrontendConfig_BeaconModule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrontendConfig_BeaconModule) ProtoMessage() {}

func (x *FrontendConfig_BeaconModule) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_proto_lab_lab_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrontendConfig_BeaconModule.ProtoReflect.Descriptor instead.
func (*FrontendConfig_BeaconModule) Descriptor() ([]byte, []int) {
	return file_pkg_server_proto_lab_lab_proto_rawDescGZIP(), []int{2, 4}
}

func (x *FrontendConfig_BeaconModule) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *FrontendConfig_BeaconModule) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *FrontendConfig_BeaconModule) GetPathPrefix() string {
	if x != nil {
		return x.PathPrefix
	}
	return ""
}

func (x *FrontendConfig_BeaconModule) GetNetworks() map[string]*FrontendConfig_BeaconNetworkConfig {
	if x != nil {
		return x.Networks
	}
	return nil
}

// TimeWindow represents a time window configuration
type FrontendConfig_TimeWindow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	File  string `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`
	Step  string `protobuf:"bytes,2,opt,name=step,proto3" json:"step,omitempty"`
	Label string `protobuf:"bytes,3,opt,name=label,proto3" json:"label,omitempty"`
	Range string `protobuf:"bytes,4,opt,name=range,proto3" json:"range,omitempty"`
}

func (x *FrontendConfig_TimeWindow) Reset() {
	*x = FrontendConfig_TimeWindow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_server_proto_lab_lab_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrontendConfig_TimeWindow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrontendConfig_TimeWindow) ProtoMessage() {}

func (x *FrontendConfig_TimeWindow) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_proto_lab_lab_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrontendConfig_TimeWindow.ProtoReflect.Descriptor instead.
func (*FrontendConfig_TimeWindow) Descriptor() ([]byte, []int) {
	return file_pkg_server_proto_lab_lab_proto_rawDescGZIP(), []int{2, 5}
}

func (x *FrontendConfig_TimeWindow) GetFile() string {
	if x != nil {
		return x.File
	}
	return ""
}

func (x *FrontendConfig_TimeWindow) GetStep() string {
	if x != nil {
		return x.Step
	}
	return ""
}

func (x *FrontendConfig_TimeWindow) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *FrontendConfig_TimeWindow) GetRange() string {
	if x != nil {
		return x.Range
	}
	return ""
}

// BeaconNetworkConfig represents beacon network-specific configuration
type FrontendConfig_BeaconNetworkConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HeadLagSlots int32 `protobuf:"varint,1,opt,name=head_lag_slots,json=headLagSlots,proto3" json:"head_lag_slots,omitempty"`
	BacklogDays  int32 `protobuf:"varint,2,opt,name=backlog_days,json=backlogDays,proto3" json:"backlog_days,omitempty"`
}

func (x *FrontendConfig_BeaconNetworkConfig) Reset() {
	*x = FrontendConfig_BeaconNetworkConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_server_proto_lab_lab_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrontendConfig_BeaconNetworkConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrontendConfig_BeaconNetworkConfig) ProtoMessage() {}

func (x *FrontendConfig_BeaconNetworkConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_proto_lab_lab_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrontendConfig_BeaconNetworkConfig.ProtoReflect.Descriptor instead.
func (*FrontendConfig_BeaconNetworkConfig) Descriptor() ([]byte, []int) {
	return file_pkg_server_proto_lab_lab_proto_rawDescGZIP(), []int{2, 6}
}

func (x *FrontendConfig_BeaconNetworkConfig) GetHeadLagSlots() int32 {
	if x != nil {
		return x.HeadLagSlots
	}
	return 0
}

func (x *FrontendConfig_BeaconNetworkConfig) GetBacklogDays() int32 {
	if x != nil {
		return x.BacklogDays
	}
	return 0
}

// EthereumConfig represents Ethereum-specific configuration
type FrontendConfig_EthereumConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Networks map[string]*FrontendConfig_Network `protobuf:"bytes,1,rep,name=networks,proto3" json:"networks,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *FrontendConfig_EthereumConfig) Reset() {
	*x = FrontendConfig_EthereumConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_server_proto_lab_lab_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrontendConfig_EthereumConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrontendConfig_EthereumConfig) ProtoMessage() {}

func (x *FrontendConfig_EthereumConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_proto_lab_lab_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrontendConfig_EthereumConfig.ProtoReflect.Descriptor instead.
func (*FrontendConfig_EthereumConfig) Descriptor() ([]byte, []int) {
	return file_pkg_server_proto_lab_lab_proto_rawDescGZIP(), []int{2, 7}
}

func (x *FrontendConfig_EthereumConfig) GetNetworks() map[string]*FrontendConfig_Network {
	if x != nil {
		return x.Networks
	}
	return nil
}

// Network represents an Ethereum network configuration
type FrontendConfig_Network struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GenesisTime int64                      `protobuf:"varint,1,opt,name=genesis_time,json=genesisTime,proto3" json:"genesis_time,omitempty"`
	Forks       *FrontendConfig_ForkConfig `protobuf:"bytes,2,opt,name=forks,proto3" json:"forks,omitempty"`
}

func (x *FrontendConfig_Network) Reset() {
	*x = FrontendConfig_Network{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_server_proto_lab_lab_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrontendConfig_Network) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrontendConfig_Network) ProtoMessage() {}

func (x *FrontendConfig_Network) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_proto_lab_lab_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrontendConfig_Network.ProtoReflect.Descriptor instead.
func (*FrontendConfig_Network) Descriptor() ([]byte, []int) {
	return file_pkg_server_proto_lab_lab_proto_rawDescGZIP(), []int{2, 8}
}

func (x *FrontendConfig_Network) GetGenesisTime() int64 {
	if x != nil {
		return x.GenesisTime
	}
	return 0
}

func (x *FrontendConfig_Network) GetForks() *FrontendConfig_ForkConfig {
	if x != nil {
		return x.Forks
	}
	return nil
}

// ForkConfig represents fork configurations
type FrontendConfig_ForkConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Consensus *FrontendConfig_ConsensusConfig `protobuf:"bytes,1,opt,name=consensus,proto3" json:"consensus,omitempty"`
}

func (x *FrontendConfig_ForkConfig) Reset() {
	*x = FrontendConfig_ForkConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_server_proto_lab_lab_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrontendConfig_ForkConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrontendConfig_ForkConfig) ProtoMessage() {}

func (x *FrontendConfig_ForkConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_proto_lab_lab_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrontendConfig_ForkConfig.ProtoReflect.Descriptor instead.
func (*FrontendConfig_ForkConfig) Descriptor() ([]byte, []int) {
	return file_pkg_server_proto_lab_lab_proto_rawDescGZIP(), []int{2, 9}
}

func (x *FrontendConfig_ForkConfig) GetConsensus() *FrontendConfig_ConsensusConfig {
	if x != nil {
		return x.Consensus
	}
	return nil
}

// ConsensusConfig represents consensus layer fork configurations
type FrontendConfig_ConsensusConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Electra *FrontendConfig_ForkDetails `protobuf:"bytes,1,opt,name=electra,proto3" json:"electra,omitempty"`
}

func (x *FrontendConfig_ConsensusConfig) Reset() {
	*x = FrontendConfig_ConsensusConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_server_proto_lab_lab_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrontendConfig_ConsensusConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrontendConfig_ConsensusConfig) ProtoMessage() {}

func (x *FrontendConfig_ConsensusConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_proto_lab_lab_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrontendConfig_ConsensusConfig.ProtoReflect.Descriptor instead.
func (*FrontendConfig_ConsensusConfig) Descriptor() ([]byte, []int) {
	return file_pkg_server_proto_lab_lab_proto_rawDescGZIP(), []int{2, 10}
}

func (x *FrontendConfig_ConsensusConfig) GetElectra() *FrontendConfig_ForkDetails {
	if x != nil {
		return x.Electra
	}
	return nil
}

// ForkDetails represents details about a specific fork
type FrontendConfig_ForkDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Epoch             int64             `protobuf:"varint,1,opt,name=epoch,proto3" json:"epoch,omitempty"`
	MinClientVersions map[string]string `protobuf:"bytes,2,rep,name=min_client_versions,json=minClientVersions,proto3" json:"min_client_versions,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *FrontendConfig_ForkDetails) Reset() {
	*x = FrontendConfig_ForkDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_server_proto_lab_lab_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrontendConfig_ForkDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrontendConfig_ForkDetails) ProtoMessage() {}

func (x *FrontendConfig_ForkDetails) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_proto_lab_lab_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrontendConfig_ForkDetails.ProtoReflect.Descriptor instead.
func (*FrontendConfig_ForkDetails) Descriptor() ([]byte, []int) {
	return file_pkg_server_proto_lab_lab_proto_rawDescGZIP(), []int{2, 11}
}

func (x *FrontendConfig_ForkDetails) GetEpoch() int64 {
	if x != nil {
		return x.Epoch
	}
	return 0
}

func (x *FrontendConfig_ForkDetails) GetMinClientVersions() map[string]string {
	if x != nil {
		return x.MinClientVersions
	}
	return nil
}

type GetConfigResponse_ModuleConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled     bool                         `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Description string                       `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	PathPrefix  string                       `protobuf:"bytes,3,opt,name=path_prefix,json=pathPrefix,proto3" json:"path_prefix,omitempty"`
	Networks    []string                     `protobuf:"bytes,4,rep,name=networks,proto3" json:"networks,omitempty"`
	TimeWindows []*FrontendConfig_TimeWindow `protobuf:"bytes,5,rep,name=time_windows,json=timeWindows,proto3" json:"time_windows,omitempty"`
}

func (x *GetConfigResponse_ModuleConfig) Reset() {
	*x = GetConfigResponse_ModuleConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_server_proto_lab_lab_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetConfigResponse_ModuleConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConfigResponse_ModuleConfig) ProtoMessage() {}

func (x *GetConfigResponse_ModuleConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_proto_lab_lab_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConfigResponse_ModuleConfig.ProtoReflect.Descriptor instead.
func (*GetConfigResponse_ModuleConfig) Descriptor() ([]byte, []int) {
	return file_pkg_server_proto_lab_lab_proto_rawDescGZIP(), []int{3, 0}
}

func (x *GetConfigResponse_ModuleConfig) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *GetConfigResponse_ModuleConfig) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *GetConfigResponse_ModuleConfig) GetPathPrefix() string {
	if x != nil {
		return x.PathPrefix
	}
	return ""
}

func (x *GetConfigResponse_ModuleConfig) GetNetworks() []string {
	if x != nil {
		return x.Networks
	}
	return nil
}

func (x *GetConfigResponse_ModuleConfig) GetTimeWindows() []*FrontendConfig_TimeWindow {
	if x != nil {
		return x.TimeWindows
	}
	return nil
}

var File_pkg_server_proto_lab_lab_proto protoreflect.FileDescriptor

var file_pkg_server_proto_lab_lab_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x70, 0x6b, 0x67, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x6c, 0x61, 0x62, 0x2f, 0x6c, 0x61, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x03, 0x6c, 0x61, 0x62, 0x22, 0x1a, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x46, 0x72, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x48, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b,
	0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x6c, 0x61, 0x62, 0x2e, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0xbd, 0x0f, 0x0a, 0x0e,
	0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x32,
	0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x6c, 0x61, 0x62, 0x2e, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x1a, 0x7f, 0x0a, 0x06, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x35, 0x0a, 0x07,
	0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x6c, 0x61, 0x62, 0x2e, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x52, 0x07, 0x6d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x73, 0x12, 0x3e, 0x0a, 0x08, 0x65, 0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6c, 0x61, 0x62, 0x2e, 0x46, 0x72, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x45, 0x74, 0x68, 0x65, 0x72,
	0x65, 0x75, 0x6d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x08, 0x65, 0x74, 0x68, 0x65, 0x72,
	0x65, 0x75, 0x6d, 0x1a, 0x8f, 0x02, 0x0a, 0x07, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x12,
	0x5e, 0x0a, 0x14, 0x62, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x5f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f,
	0x74, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e,
	0x6c, 0x61, 0x62, 0x2e, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2e, 0x42, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x54, 0x69,
	0x6d, 0x69, 0x6e, 0x67, 0x73, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x12, 0x62, 0x65, 0x61,
	0x63, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x73, 0x12,
	0x6a, 0x0a, 0x18, 0x78, 0x61, 0x74, 0x75, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x30, 0x2e, 0x6c, 0x61, 0x62, 0x2e, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x58, 0x61, 0x74, 0x75, 0x50, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x73, 0x4d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x52, 0x16, 0x78, 0x61, 0x74, 0x75, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x38, 0x0a, 0x06, 0x62,
	0x65, 0x61, 0x63, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6c, 0x61,
	0x62, 0x2e, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2e, 0x42, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x06, 0x62,
	0x65, 0x61, 0x63, 0x6f, 0x6e, 0x1a, 0xb4, 0x01, 0x0a, 0x18, 0x42, 0x65, 0x61, 0x63, 0x6f, 0x6e,
	0x43, 0x68, 0x61, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x73, 0x4d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x12, 0x41,
	0x0a, 0x0c, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6c, 0x61, 0x62, 0x2e, 0x46, 0x72, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x57, 0x69,
	0x6e, 0x64, 0x6f, 0x77, 0x52, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77,
	0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x61, 0x74, 0x68, 0x5f, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x61, 0x74, 0x68, 0x50, 0x72, 0x65, 0x66,
	0x69, 0x78, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x1a, 0xb8, 0x01, 0x0a,
	0x1c, 0x58, 0x61, 0x74, 0x75, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x73, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x08, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x12, 0x41, 0x0a, 0x0c, 0x74, 0x69, 0x6d,
	0x65, 0x5f, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x6c, 0x61, 0x62, 0x2e, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x52,
	0x0b, 0x74, 0x69, 0x6d, 0x65, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x73, 0x12, 0x1f, 0x0a, 0x0b,
	0x70, 0x61, 0x74, 0x68, 0x5f, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x70, 0x61, 0x74, 0x68, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x18, 0x0a,
	0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x1a, 0x9d, 0x02, 0x0a, 0x0c, 0x42, 0x65, 0x61, 0x63,
	0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x61, 0x74, 0x68, 0x5f, 0x70, 0x72, 0x65,
	0x66, 0x69, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x61, 0x74, 0x68, 0x50,
	0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x4a, 0x0a, 0x08, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x6c, 0x61, 0x62, 0x2e, 0x46, 0x72,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x42, 0x65, 0x61,
	0x63, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x73, 0x1a, 0x64, 0x0a, 0x0d, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x3d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6c, 0x61, 0x62, 0x2e, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x42, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x4e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x60, 0x0a, 0x0a, 0x54, 0x69, 0x6d, 0x65, 0x57,
	0x69, 0x6e, 0x64, 0x6f, 0x77, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x74, 0x65,
	0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x74, 0x65, 0x70, 0x12, 0x14, 0x0a,
	0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x1a, 0x5e, 0x0a, 0x13, 0x42, 0x65, 0x61,
	0x63, 0x6f, 0x6e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x24, 0x0a, 0x0e, 0x68, 0x65, 0x61, 0x64, 0x5f, 0x6c, 0x61, 0x67, 0x5f, 0x73, 0x6c, 0x6f,
	0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x68, 0x65, 0x61, 0x64, 0x4c, 0x61,
	0x67, 0x53, 0x6c, 0x6f, 0x74, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x61, 0x63, 0x6b, 0x6c, 0x6f,
	0x67, 0x5f, 0x64, 0x61, 0x79, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x62, 0x61,
	0x63, 0x6b, 0x6c, 0x6f, 0x67, 0x44, 0x61, 0x79, 0x73, 0x1a, 0xb8, 0x01, 0x0a, 0x0e, 0x45, 0x74,
	0x68, 0x65, 0x72, 0x65, 0x75, 0x6d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x4c, 0x0a, 0x08,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30,
	0x2e, 0x6c, 0x61, 0x62, 0x2e, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2e, 0x45, 0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x08, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x1a, 0x58, 0x0a, 0x0d, 0x4e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x31, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6c,
	0x61, 0x62, 0x2e, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x1a, 0x62, 0x0a, 0x07, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12,
	0x21, 0x0a, 0x0c, 0x67, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x67, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x34, 0x0a, 0x05, 0x66, 0x6f, 0x72, 0x6b, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x6c, 0x61, 0x62, 0x2e, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x46, 0x6f, 0x72, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x05, 0x66, 0x6f, 0x72, 0x6b, 0x73, 0x1a, 0x4f, 0x0a, 0x0a, 0x46, 0x6f, 0x72, 0x6b,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x41, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e,
	0x73, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6c, 0x61, 0x62, 0x2e,
	0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x43,
	0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x09,
	0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x1a, 0x4c, 0x0a, 0x0f, 0x43, 0x6f, 0x6e,
	0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x39, 0x0a, 0x07,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x72, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x6c, 0x61, 0x62, 0x2e, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2e, 0x46, 0x6f, 0x72, 0x6b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x72, 0x61, 0x1a, 0xd1, 0x01, 0x0a, 0x0b, 0x46, 0x6f, 0x72, 0x6b,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x70, 0x6f, 0x63, 0x68,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x12, 0x66, 0x0a,
	0x13, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x6c, 0x61, 0x62,
	0x2e, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e,
	0x46, 0x6f, 0x72, 0x6b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x2e, 0x4d, 0x69, 0x6e, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x11, 0x6d, 0x69, 0x6e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x44, 0x0a, 0x16, 0x4d, 0x69, 0x6e, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xc0, 0x03, 0x0a, 0x11,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3d, 0x0a, 0x07, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6c, 0x61, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73,
	0x12, 0x3e, 0x0a, 0x08, 0x65, 0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6c, 0x61, 0x62, 0x2e, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x45, 0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x08, 0x65, 0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d,
	0x1a, 0xca, 0x01, 0x0a, 0x0c, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a,
	0x0b, 0x70, 0x61, 0x74, 0x68, 0x5f, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x70, 0x61, 0x74, 0x68, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x1a,
	0x0a, 0x08, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x08, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x12, 0x41, 0x0a, 0x0c, 0x74, 0x69,
	0x6d, 0x65, 0x5f, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x6c, 0x61, 0x62, 0x2e, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77,
	0x52, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x73, 0x1a, 0x5f, 0x0a,
	0x0c, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x39, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x6c, 0x61, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x32, 0x60,
	0x0a, 0x0a, 0x4c, 0x61, 0x62, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x52, 0x0a, 0x11,
	0x47, 0x65, 0x74, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x12, 0x1d, 0x2e, 0x6c, 0x61, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x72, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1e, 0x2e, 0x6c, 0x61, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x42, 0x2a, 0x5a, 0x28, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x65,
	0x74, 0x68, 0x70, 0x61, 0x6e, 0x64, 0x61, 0x6f, 0x70, 0x73, 0x2f, 0x6c, 0x61, 0x62, 0x2f, 0x70,
	0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6c, 0x61, 0x62, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pkg_server_proto_lab_lab_proto_rawDescOnce sync.Once
	file_pkg_server_proto_lab_lab_proto_rawDescData = file_pkg_server_proto_lab_lab_proto_rawDesc
)

func file_pkg_server_proto_lab_lab_proto_rawDescGZIP() []byte {
	file_pkg_server_proto_lab_lab_proto_rawDescOnce.Do(func() {
		file_pkg_server_proto_lab_lab_proto_rawDescData = protoimpl.X.CompressGZIP(file_pkg_server_proto_lab_lab_proto_rawDescData)
	})
	return file_pkg_server_proto_lab_lab_proto_rawDescData
}

var file_pkg_server_proto_lab_lab_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_pkg_server_proto_lab_lab_proto_goTypes = []any{
	(*GetFrontendConfigRequest)(nil),                    // 0: lab.GetFrontendConfigRequest
	(*GetFrontendConfigResponse)(nil),                   // 1: lab.GetFrontendConfigResponse
	(*FrontendConfig)(nil),                              // 2: lab.FrontendConfig
	(*GetConfigResponse)(nil),                           // 3: lab.GetConfigResponse
	(*FrontendConfig_Config)(nil),                       // 4: lab.FrontendConfig.Config
	(*FrontendConfig_Modules)(nil),                      // 5: lab.FrontendConfig.Modules
	(*FrontendConfig_BeaconChainTimingsModule)(nil),     // 6: lab.FrontendConfig.BeaconChainTimingsModule
	(*FrontendConfig_XatuPublicContributorsModule)(nil), // 7: lab.FrontendConfig.XatuPublicContributorsModule
	(*FrontendConfig_BeaconModule)(nil),                 // 8: lab.FrontendConfig.BeaconModule
	(*FrontendConfig_TimeWindow)(nil),                   // 9: lab.FrontendConfig.TimeWindow
	(*FrontendConfig_BeaconNetworkConfig)(nil),          // 10: lab.FrontendConfig.BeaconNetworkConfig
	(*FrontendConfig_EthereumConfig)(nil),               // 11: lab.FrontendConfig.EthereumConfig
	(*FrontendConfig_Network)(nil),                      // 12: lab.FrontendConfig.Network
	(*FrontendConfig_ForkConfig)(nil),                   // 13: lab.FrontendConfig.ForkConfig
	(*FrontendConfig_ConsensusConfig)(nil),              // 14: lab.FrontendConfig.ConsensusConfig
	(*FrontendConfig_ForkDetails)(nil),                  // 15: lab.FrontendConfig.ForkDetails
	nil,                                                 // 16: lab.FrontendConfig.BeaconModule.NetworksEntry
	nil,                                                 // 17: lab.FrontendConfig.EthereumConfig.NetworksEntry
	nil,                                                 // 18: lab.FrontendConfig.ForkDetails.MinClientVersionsEntry
	(*GetConfigResponse_ModuleConfig)(nil),              // 19: lab.GetConfigResponse.ModuleConfig
	nil,                                                 // 20: lab.GetConfigResponse.ModulesEntry
}
var file_pkg_server_proto_lab_lab_proto_depIdxs = []int32{
	2,  // 0: lab.GetFrontendConfigResponse.config:type_name -> lab.FrontendConfig
	4,  // 1: lab.FrontendConfig.config:type_name -> lab.FrontendConfig.Config
	20, // 2: lab.GetConfigResponse.modules:type_name -> lab.GetConfigResponse.ModulesEntry
	11, // 3: lab.GetConfigResponse.ethereum:type_name -> lab.FrontendConfig.EthereumConfig
	5,  // 4: lab.FrontendConfig.Config.modules:type_name -> lab.FrontendConfig.Modules
	11, // 5: lab.FrontendConfig.Config.ethereum:type_name -> lab.FrontendConfig.EthereumConfig
	6,  // 6: lab.FrontendConfig.Modules.beacon_chain_timings:type_name -> lab.FrontendConfig.BeaconChainTimingsModule
	7,  // 7: lab.FrontendConfig.Modules.xatu_public_contributors:type_name -> lab.FrontendConfig.XatuPublicContributorsModule
	8,  // 8: lab.FrontendConfig.Modules.beacon:type_name -> lab.FrontendConfig.BeaconModule
	9,  // 9: lab.FrontendConfig.BeaconChainTimingsModule.time_windows:type_name -> lab.FrontendConfig.TimeWindow
	9,  // 10: lab.FrontendConfig.XatuPublicContributorsModule.time_windows:type_name -> lab.FrontendConfig.TimeWindow
	16, // 11: lab.FrontendConfig.BeaconModule.networks:type_name -> lab.FrontendConfig.BeaconModule.NetworksEntry
	17, // 12: lab.FrontendConfig.EthereumConfig.networks:type_name -> lab.FrontendConfig.EthereumConfig.NetworksEntry
	13, // 13: lab.FrontendConfig.Network.forks:type_name -> lab.FrontendConfig.ForkConfig
	14, // 14: lab.FrontendConfig.ForkConfig.consensus:type_name -> lab.FrontendConfig.ConsensusConfig
	15, // 15: lab.FrontendConfig.ConsensusConfig.electra:type_name -> lab.FrontendConfig.ForkDetails
	18, // 16: lab.FrontendConfig.ForkDetails.min_client_versions:type_name -> lab.FrontendConfig.ForkDetails.MinClientVersionsEntry
	10, // 17: lab.FrontendConfig.BeaconModule.NetworksEntry.value:type_name -> lab.FrontendConfig.BeaconNetworkConfig
	12, // 18: lab.FrontendConfig.EthereumConfig.NetworksEntry.value:type_name -> lab.FrontendConfig.Network
	9,  // 19: lab.GetConfigResponse.ModuleConfig.time_windows:type_name -> lab.FrontendConfig.TimeWindow
	19, // 20: lab.GetConfigResponse.ModulesEntry.value:type_name -> lab.GetConfigResponse.ModuleConfig
	0,  // 21: lab.LabService.GetFrontendConfig:input_type -> lab.GetFrontendConfigRequest
	1,  // 22: lab.LabService.GetFrontendConfig:output_type -> lab.GetFrontendConfigResponse
	22, // [22:23] is the sub-list for method output_type
	21, // [21:22] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_pkg_server_proto_lab_lab_proto_init() }
func file_pkg_server_proto_lab_lab_proto_init() {
	if File_pkg_server_proto_lab_lab_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pkg_server_proto_lab_lab_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*GetFrontendConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_server_proto_lab_lab_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*GetFrontendConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_server_proto_lab_lab_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*FrontendConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_server_proto_lab_lab_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*GetConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_server_proto_lab_lab_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*FrontendConfig_Config); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_server_proto_lab_lab_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*FrontendConfig_Modules); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_server_proto_lab_lab_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*FrontendConfig_BeaconChainTimingsModule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_server_proto_lab_lab_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*FrontendConfig_XatuPublicContributorsModule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_server_proto_lab_lab_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*FrontendConfig_BeaconModule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_server_proto_lab_lab_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*FrontendConfig_TimeWindow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_server_proto_lab_lab_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*FrontendConfig_BeaconNetworkConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_server_proto_lab_lab_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*FrontendConfig_EthereumConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_server_proto_lab_lab_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*FrontendConfig_Network); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_server_proto_lab_lab_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*FrontendConfig_ForkConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_server_proto_lab_lab_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*FrontendConfig_ConsensusConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_server_proto_lab_lab_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*FrontendConfig_ForkDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_server_proto_lab_lab_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*GetConfigResponse_ModuleConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pkg_server_proto_lab_lab_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pkg_server_proto_lab_lab_proto_goTypes,
		DependencyIndexes: file_pkg_server_proto_lab_lab_proto_depIdxs,
		MessageInfos:      file_pkg_server_proto_lab_lab_proto_msgTypes,
	}.Build()
	File_pkg_server_proto_lab_lab_proto = out.File
	file_pkg_server_proto_lab_lab_proto_rawDesc = nil
	file_pkg_server_proto_lab_lab_proto_goTypes = nil
	file_pkg_server_proto_lab_lab_proto_depIdxs = nil
}
