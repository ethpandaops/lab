// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: backend/pkg/server/proto/xatu_public_contributors/xatu_public_contributors.proto

package xatu_public_contributors

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Time window configuration (mirrors Python config structure)
type TimeWindow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	File  string `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`   // e.g., "1h", "24h"
	Step  string `protobuf:"bytes,2,opt,name=step,proto3" json:"step,omitempty"`   // e.g., "5m", "1h" - duration string
	Range string `protobuf:"bytes,3,opt,name=range,proto3" json:"range,omitempty"` // e.g., "-1h", "-24h" - duration string
	Label string `protobuf:"bytes,4,opt,name=label,proto3" json:"label,omitempty"` // e.g., "Last Hour", "Last 24 Hours"
}

func (x *TimeWindow) Reset() {
	*x = TimeWindow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimeWindow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeWindow) ProtoMessage() {}

func (x *TimeWindow) ProtoReflect() protoreflect.Message {
	mi := &file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeWindow.ProtoReflect.Descriptor instead.
func (*TimeWindow) Descriptor() ([]byte, []int) {
	return file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_rawDescGZIP(), []int{0}
}

func (x *TimeWindow) GetFile() string {
	if x != nil {
		return x.File
	}
	return ""
}

func (x *TimeWindow) GetStep() string {
	if x != nil {
		return x.Step
	}
	return ""
}

func (x *TimeWindow) GetRange() string {
	if x != nil {
		return x.Range
	}
	return ""
}

func (x *TimeWindow) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

// Configuration for the xatu_public_contributors service
type Config struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled        bool          `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	RedisKeyPrefix string        `protobuf:"bytes,2,opt,name=redis_key_prefix,json=redisKeyPrefix,proto3" json:"redis_key_prefix,omitempty"`
	Networks       []string      `protobuf:"bytes,3,rep,name=networks,proto3" json:"networks,omitempty"`
	BackfillHours  int64         `protobuf:"varint,4,opt,name=backfill_hours,json=backfillHours,proto3" json:"backfill_hours,omitempty"`
	TimeWindows    []*TimeWindow `protobuf:"bytes,5,rep,name=time_windows,json=timeWindows,proto3" json:"time_windows,omitempty"` // Added time windows
	Interval       string        `protobuf:"bytes,6,opt,name=interval,proto3" json:"interval,omitempty"`                          // Added overall processing interval duration string e.g. "15m"
}

func (x *Config) Reset() {
	*x = Config{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config) ProtoMessage() {}

func (x *Config) ProtoReflect() protoreflect.Message {
	mi := &file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config.ProtoReflect.Descriptor instead.
func (*Config) Descriptor() ([]byte, []int) {
	return file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_rawDescGZIP(), []int{1}
}

func (x *Config) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *Config) GetRedisKeyPrefix() string {
	if x != nil {
		return x.RedisKeyPrefix
	}
	return ""
}

func (x *Config) GetNetworks() []string {
	if x != nil {
		return x.Networks
	}
	return nil
}

func (x *Config) GetBackfillHours() int64 {
	if x != nil {
		return x.BackfillHours
	}
	return 0
}

func (x *Config) GetTimeWindows() []*TimeWindow {
	if x != nil {
		return x.TimeWindows
	}
	return nil
}

func (x *Config) GetInterval() string {
	if x != nil {
		return x.Interval
	}
	return ""
}

// State tracking for contributors service
type ContributorsState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Network    string                     `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`
	Processors map[string]*ProcessorState `protobuf:"bytes,2,rep,name=processors,proto3" json:"processors,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ContributorsState) Reset() {
	*x = ContributorsState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContributorsState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContributorsState) ProtoMessage() {}

func (x *ContributorsState) ProtoReflect() protoreflect.Message {
	mi := &file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContributorsState.ProtoReflect.Descriptor instead.
func (*ContributorsState) Descriptor() ([]byte, []int) {
	return file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_rawDescGZIP(), []int{2}
}

func (x *ContributorsState) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *ContributorsState) GetProcessors() map[string]*ProcessorState {
	if x != nil {
		return x.Processors
	}
	return nil
}

// State for a specific processor
type ProcessorState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LastProcessed        *timestamppb.Timestamp            `protobuf:"bytes,1,opt,name=last_processed,json=lastProcessed,proto3" json:"last_processed,omitempty"`
	LastProcessedWindows map[string]*timestamppb.Timestamp `protobuf:"bytes,2,rep,name=last_processed_windows,json=lastProcessedWindows,proto3" json:"last_processed_windows,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ProcessorState) Reset() {
	*x = ProcessorState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessorState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessorState) ProtoMessage() {}

func (x *ProcessorState) ProtoReflect() protoreflect.Message {
	mi := &file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessorState.ProtoReflect.Descriptor instead.
func (*ProcessorState) Descriptor() ([]byte, []int) {
	return file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_rawDescGZIP(), []int{3}
}

func (x *ProcessorState) GetLastProcessed() *timestamppb.Timestamp {
	if x != nil {
		return x.LastProcessed
	}
	return nil
}

func (x *ProcessorState) GetLastProcessedWindows() map[string]*timestamppb.Timestamp {
	if x != nil {
		return x.LastProcessedWindows
	}
	return nil
}

// Count of nodes with total and public node counts
type NodeCountStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalNodes  int32 `protobuf:"varint,1,opt,name=total_nodes,json=totalNodes,proto3" json:"total_nodes,omitempty"`
	PublicNodes int32 `protobuf:"varint,2,opt,name=public_nodes,json=publicNodes,proto3" json:"public_nodes,omitempty"`
}

func (x *NodeCountStats) Reset() {
	*x = NodeCountStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeCountStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeCountStats) ProtoMessage() {}

func (x *NodeCountStats) ProtoReflect() protoreflect.Message {
	mi := &file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeCountStats.ProtoReflect.Descriptor instead.
func (*NodeCountStats) Descriptor() ([]byte, []int) {
	return file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_rawDescGZIP(), []int{4}
}

func (x *NodeCountStats) GetTotalNodes() int32 {
	if x != nil {
		return x.TotalNodes
	}
	return 0
}

func (x *NodeCountStats) GetPublicNodes() int32 {
	if x != nil {
		return x.PublicNodes
	}
	return 0
}

// Network statistics
type NetworkStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Network                  string                     `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`
	TotalNodes               int32                      `protobuf:"varint,2,opt,name=total_nodes,json=totalNodes,proto3" json:"total_nodes,omitempty"`
	TotalPublicNodes         int32                      `protobuf:"varint,3,opt,name=total_public_nodes,json=totalPublicNodes,proto3" json:"total_public_nodes,omitempty"`
	Countries                map[string]*NodeCountStats `protobuf:"bytes,4,rep,name=countries,proto3" json:"countries,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Continents               map[string]*NodeCountStats `protobuf:"bytes,5,rep,name=continents,proto3" json:"continents,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Cities                   map[string]*NodeCountStats `protobuf:"bytes,6,rep,name=cities,proto3" json:"cities,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ConsensusImplementations map[string]*NodeCountStats `protobuf:"bytes,7,rep,name=consensus_implementations,json=consensusImplementations,proto3" json:"consensus_implementations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *NetworkStats) Reset() {
	*x = NetworkStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetworkStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkStats) ProtoMessage() {}

func (x *NetworkStats) ProtoReflect() protoreflect.Message {
	mi := &file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkStats.ProtoReflect.Descriptor instead.
func (*NetworkStats) Descriptor() ([]byte, []int) {
	return file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_rawDescGZIP(), []int{5}
}

func (x *NetworkStats) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *NetworkStats) GetTotalNodes() int32 {
	if x != nil {
		return x.TotalNodes
	}
	return 0
}

func (x *NetworkStats) GetTotalPublicNodes() int32 {
	if x != nil {
		return x.TotalPublicNodes
	}
	return 0
}

func (x *NetworkStats) GetCountries() map[string]*NodeCountStats {
	if x != nil {
		return x.Countries
	}
	return nil
}

func (x *NetworkStats) GetContinents() map[string]*NodeCountStats {
	if x != nil {
		return x.Continents
	}
	return nil
}

func (x *NetworkStats) GetCities() map[string]*NodeCountStats {
	if x != nil {
		return x.Cities
	}
	return nil
}

func (x *NetworkStats) GetConsensusImplementations() map[string]*NodeCountStats {
	if x != nil {
		return x.ConsensusImplementations
	}
	return nil
}

// Summary data for dashboard
type SummaryData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UpdatedAt int64                    `protobuf:"varint,1,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Networks  map[string]*NetworkStats `protobuf:"bytes,2,rep,name=networks,proto3" json:"networks,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *SummaryData) Reset() {
	*x = SummaryData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SummaryData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SummaryData) ProtoMessage() {}

func (x *SummaryData) ProtoReflect() protoreflect.Message {
	mi := &file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SummaryData.ProtoReflect.Descriptor instead.
func (*SummaryData) Descriptor() ([]byte, []int) {
	return file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_rawDescGZIP(), []int{6}
}

func (x *SummaryData) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *SummaryData) GetNetworks() map[string]*NetworkStats {
	if x != nil {
		return x.Networks
	}
	return nil
}

// Data point for a country
type CountryDataPoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time      int64           `protobuf:"varint,1,opt,name=time,proto3" json:"time,omitempty"` // Unix timestamp
	Countries []*CountryCount `protobuf:"bytes,2,rep,name=countries,proto3" json:"countries,omitempty"`
}

func (x *CountryDataPoint) Reset() {
	*x = CountryDataPoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountryDataPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountryDataPoint) ProtoMessage() {}

func (x *CountryDataPoint) ProtoReflect() protoreflect.Message {
	mi := &file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountryDataPoint.ProtoReflect.Descriptor instead.
func (*CountryDataPoint) Descriptor() ([]byte, []int) {
	return file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_rawDescGZIP(), []int{7}
}

func (x *CountryDataPoint) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *CountryDataPoint) GetCountries() []*CountryCount {
	if x != nil {
		return x.Countries
	}
	return nil
}

// Country with node count
type CountryCount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`    // Country name
	Value int32  `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"` // Node count
}

func (x *CountryCount) Reset() {
	*x = CountryCount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountryCount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountryCount) ProtoMessage() {}

func (x *CountryCount) ProtoReflect() protoreflect.Message {
	mi := &file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountryCount.ProtoReflect.Descriptor instead.
func (*CountryCount) Descriptor() ([]byte, []int) {
	return file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_rawDescGZIP(), []int{8}
}

func (x *CountryCount) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CountryCount) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// Data point representing a user's node count at a specific time (for Users processor)
type UserDataPoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`    // Extracted username
	Nodes int32  `protobuf:"varint,2,opt,name=nodes,proto3" json:"nodes,omitempty"` // Distinct node count for this user in the time slot
}

func (x *UserDataPoint) Reset() {
	*x = UserDataPoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserDataPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserDataPoint) ProtoMessage() {}

func (x *UserDataPoint) ProtoReflect() protoreflect.Message {
	mi := &file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserDataPoint.ProtoReflect.Descriptor instead.
func (*UserDataPoint) Descriptor() ([]byte, []int) {
	return file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_rawDescGZIP(), []int{9}
}

func (x *UserDataPoint) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserDataPoint) GetNodes() int32 {
	if x != nil {
		return x.Nodes
	}
	return 0
}

// Represents a collection of user data points for a specific timestamp (for Users processor)
type UsersTimePoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time  int64            `protobuf:"varint,1,opt,name=time,proto3" json:"time,omitempty"` // Unix timestamp
	Users []*UserDataPoint `protobuf:"bytes,2,rep,name=users,proto3" json:"users,omitempty"`
}

func (x *UsersTimePoint) Reset() {
	*x = UsersTimePoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UsersTimePoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsersTimePoint) ProtoMessage() {}

func (x *UsersTimePoint) ProtoReflect() protoreflect.Message {
	mi := &file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsersTimePoint.ProtoReflect.Descriptor instead.
func (*UsersTimePoint) Descriptor() ([]byte, []int) {
	return file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_rawDescGZIP(), []int{10}
}

func (x *UsersTimePoint) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *UsersTimePoint) GetUsers() []*UserDataPoint {
	if x != nil {
		return x.Users
	}
	return nil
}

// Detailed information about a single node/client (for User Summaries processor)
type NodeDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Network                 string `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`
	ClientName              string `protobuf:"bytes,2,opt,name=client_name,json=clientName,proto3" json:"client_name,omitempty"` // Full meta_client_name
	ConsensusClient         string `protobuf:"bytes,3,opt,name=consensus_client,json=consensusClient,proto3" json:"consensus_client,omitempty"`
	ConsensusVersion        string `protobuf:"bytes,4,opt,name=consensus_version,json=consensusVersion,proto3" json:"consensus_version,omitempty"`
	Country                 string `protobuf:"bytes,5,opt,name=country,proto3" json:"country,omitempty"`
	City                    string `protobuf:"bytes,6,opt,name=city,proto3" json:"city,omitempty"`
	Continent               string `protobuf:"bytes,7,opt,name=continent,proto3" json:"continent,omitempty"`
	LatestSlot              int64  `protobuf:"varint,8,opt,name=latest_slot,json=latestSlot,proto3" json:"latest_slot,omitempty"`
	LatestSlotStartDateTime int64  `protobuf:"varint,9,opt,name=latest_slot_start_date_time,json=latestSlotStartDateTime,proto3" json:"latest_slot_start_date_time,omitempty"` // Unix timestamp
	ClientImplementation    string `protobuf:"bytes,10,opt,name=client_implementation,json=clientImplementation,proto3" json:"client_implementation,omitempty"`
	ClientVersion           string `protobuf:"bytes,11,opt,name=client_version,json=clientVersion,proto3" json:"client_version,omitempty"`
}

func (x *NodeDetail) Reset() {
	*x = NodeDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeDetail) ProtoMessage() {}

func (x *NodeDetail) ProtoReflect() protoreflect.Message {
	mi := &file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeDetail.ProtoReflect.Descriptor instead.
func (*NodeDetail) Descriptor() ([]byte, []int) {
	return file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_rawDescGZIP(), []int{11}
}

func (x *NodeDetail) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *NodeDetail) GetClientName() string {
	if x != nil {
		return x.ClientName
	}
	return ""
}

func (x *NodeDetail) GetConsensusClient() string {
	if x != nil {
		return x.ConsensusClient
	}
	return ""
}

func (x *NodeDetail) GetConsensusVersion() string {
	if x != nil {
		return x.ConsensusVersion
	}
	return ""
}

func (x *NodeDetail) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *NodeDetail) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *NodeDetail) GetContinent() string {
	if x != nil {
		return x.Continent
	}
	return ""
}

func (x *NodeDetail) GetLatestSlot() int64 {
	if x != nil {
		return x.LatestSlot
	}
	return 0
}

func (x *NodeDetail) GetLatestSlotStartDateTime() int64 {
	if x != nil {
		return x.LatestSlotStartDateTime
	}
	return 0
}

func (x *NodeDetail) GetClientImplementation() string {
	if x != nil {
		return x.ClientImplementation
	}
	return ""
}

func (x *NodeDetail) GetClientVersion() string {
	if x != nil {
		return x.ClientVersion
	}
	return ""
}

// Summary data for a single user (for User Summaries processor)
type UserSummary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string        `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"` // Extracted username
	NodeCount int32         `protobuf:"varint,2,opt,name=node_count,json=nodeCount,proto3" json:"node_count,omitempty"`
	Nodes     []*NodeDetail `protobuf:"bytes,3,rep,name=nodes,proto3" json:"nodes,omitempty"`
	UpdatedAt int64         `protobuf:"varint,4,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"` // Unix timestamp of when the summary was generated
}

func (x *UserSummary) Reset() {
	*x = UserSummary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserSummary) ProtoMessage() {}

func (x *UserSummary) ProtoReflect() protoreflect.Message {
	mi := &file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserSummary.ProtoReflect.Descriptor instead.
func (*UserSummary) Descriptor() ([]byte, []int) {
	return file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_rawDescGZIP(), []int{12}
}

func (x *UserSummary) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserSummary) GetNodeCount() int32 {
	if x != nil {
		return x.NodeCount
	}
	return 0
}

func (x *UserSummary) GetNodes() []*NodeDetail {
	if x != nil {
		return x.Nodes
	}
	return nil
}

func (x *UserSummary) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

// Global summary listing all contributors (for User Summaries processor)
type GlobalUserSummary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Contributors []*UserSummary `protobuf:"bytes,1,rep,name=contributors,proto3" json:"contributors,omitempty"`
	UpdatedAt    int64          `protobuf:"varint,2,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"` // Unix timestamp of when the summary was generated
}

func (x *GlobalUserSummary) Reset() {
	*x = GlobalUserSummary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalUserSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalUserSummary) ProtoMessage() {}

func (x *GlobalUserSummary) ProtoReflect() protoreflect.Message {
	mi := &file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalUserSummary.ProtoReflect.Descriptor instead.
func (*GlobalUserSummary) Descriptor() ([]byte, []int) {
	return file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_rawDescGZIP(), []int{13}
}

func (x *GlobalUserSummary) GetContributors() []*UserSummary {
	if x != nil {
		return x.Contributors
	}
	return nil
}

func (x *GlobalUserSummary) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

// Top networks by node count
type TopNetworks struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Networks []*NetworkStats `protobuf:"bytes,1,rep,name=networks,proto3" json:"networks,omitempty"`
}

func (x *TopNetworks) Reset() {
	*x = TopNetworks{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopNetworks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopNetworks) ProtoMessage() {}

func (x *TopNetworks) ProtoReflect() protoreflect.Message {
	mi := &file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopNetworks.ProtoReflect.Descriptor instead.
func (*TopNetworks) Descriptor() ([]byte, []int) {
	return file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_rawDescGZIP(), []int{14}
}

func (x *TopNetworks) GetNetworks() []*NetworkStats {
	if x != nil {
		return x.Networks
	}
	return nil
}

// Request to get summary data
type GetSummaryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Network string `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`
}

func (x *GetSummaryRequest) Reset() {
	*x = GetSummaryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSummaryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSummaryRequest) ProtoMessage() {}

func (x *GetSummaryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSummaryRequest.ProtoReflect.Descriptor instead.
func (*GetSummaryRequest) Descriptor() ([]byte, []int) {
	return file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_rawDescGZIP(), []int{15}
}

func (x *GetSummaryRequest) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

// Response containing summary data
type GetSummaryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Summary *SummaryData `protobuf:"bytes,1,opt,name=summary,proto3" json:"summary,omitempty"`
}

func (x *GetSummaryResponse) Reset() {
	*x = GetSummaryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSummaryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSummaryResponse) ProtoMessage() {}

func (x *GetSummaryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSummaryResponse.ProtoReflect.Descriptor instead.
func (*GetSummaryResponse) Descriptor() ([]byte, []int) {
	return file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_rawDescGZIP(), []int{16}
}

func (x *GetSummaryResponse) GetSummary() *SummaryData {
	if x != nil {
		return x.Summary
	}
	return nil
}

// Request to get country data
type GetCountryDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Network string `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"` // Optional time range parameters could be added here
}

func (x *GetCountryDataRequest) Reset() {
	*x = GetCountryDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCountryDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCountryDataRequest) ProtoMessage() {}

func (x *GetCountryDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCountryDataRequest.ProtoReflect.Descriptor instead.
func (*GetCountryDataRequest) Descriptor() ([]byte, []int) {
	return file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_rawDescGZIP(), []int{17}
}

func (x *GetCountryDataRequest) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

// Response containing country data
type GetCountryDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataPoints []*CountryDataPoint `protobuf:"bytes,1,rep,name=data_points,json=dataPoints,proto3" json:"data_points,omitempty"`
}

func (x *GetCountryDataResponse) Reset() {
	*x = GetCountryDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCountryDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCountryDataResponse) ProtoMessage() {}

func (x *GetCountryDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCountryDataResponse.ProtoReflect.Descriptor instead.
func (*GetCountryDataResponse) Descriptor() ([]byte, []int) {
	return file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_rawDescGZIP(), []int{18}
}

func (x *GetCountryDataResponse) GetDataPoints() []*CountryDataPoint {
	if x != nil {
		return x.DataPoints
	}
	return nil
}

// Request to get user data (for Users processor time series)
type GetUsersDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Network string `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`
	Window  string `protobuf:"bytes,2,opt,name=window,proto3" json:"window,omitempty"` // e.g., "1h", "24h"
}

func (x *GetUsersDataRequest) Reset() {
	*x = GetUsersDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUsersDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUsersDataRequest) ProtoMessage() {}

func (x *GetUsersDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUsersDataRequest.ProtoReflect.Descriptor instead.
func (*GetUsersDataRequest) Descriptor() ([]byte, []int) {
	return file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_rawDescGZIP(), []int{19}
}

func (x *GetUsersDataRequest) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *GetUsersDataRequest) GetWindow() string {
	if x != nil {
		return x.Window
	}
	return ""
}

// Response containing user data (for Users processor time series)
type GetUsersDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataPoints []*UsersTimePoint `protobuf:"bytes,1,rep,name=data_points,json=dataPoints,proto3" json:"data_points,omitempty"`
}

func (x *GetUsersDataResponse) Reset() {
	*x = GetUsersDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUsersDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUsersDataResponse) ProtoMessage() {}

func (x *GetUsersDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUsersDataResponse.ProtoReflect.Descriptor instead.
func (*GetUsersDataResponse) Descriptor() ([]byte, []int) {
	return file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_rawDescGZIP(), []int{20}
}

func (x *GetUsersDataResponse) GetDataPoints() []*UsersTimePoint {
	if x != nil {
		return x.DataPoints
	}
	return nil
}

// Request to get user summary (for User Summaries processor)
type GetUserSummaryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"` // Specific user to fetch
}

func (x *GetUserSummaryRequest) Reset() {
	*x = GetUserSummaryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserSummaryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserSummaryRequest) ProtoMessage() {}

func (x *GetUserSummaryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserSummaryRequest.ProtoReflect.Descriptor instead.
func (*GetUserSummaryRequest) Descriptor() ([]byte, []int) {
	return file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_rawDescGZIP(), []int{21}
}

func (x *GetUserSummaryRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

// Response containing user summary (for User Summaries processor)
type GetUserSummaryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserSummary *UserSummary `protobuf:"bytes,1,opt,name=user_summary,json=userSummary,proto3" json:"user_summary,omitempty"`
}

func (x *GetUserSummaryResponse) Reset() {
	*x = GetUserSummaryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserSummaryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserSummaryResponse) ProtoMessage() {}

func (x *GetUserSummaryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserSummaryResponse.ProtoReflect.Descriptor instead.
func (*GetUserSummaryResponse) Descriptor() ([]byte, []int) {
	return file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_rawDescGZIP(), []int{22}
}

func (x *GetUserSummaryResponse) GetUserSummary() *UserSummary {
	if x != nil {
		return x.UserSummary
	}
	return nil
}

// Request to get the global user summary list (for User Summaries processor)
type GetGlobalUserSummaryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetGlobalUserSummaryRequest) Reset() {
	*x = GetGlobalUserSummaryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGlobalUserSummaryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGlobalUserSummaryRequest) ProtoMessage() {}

func (x *GetGlobalUserSummaryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGlobalUserSummaryRequest.ProtoReflect.Descriptor instead.
func (*GetGlobalUserSummaryRequest) Descriptor() ([]byte, []int) {
	return file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_rawDescGZIP(), []int{23}
}

// Response containing the global user summary list (for User Summaries processor)
type GetGlobalUserSummaryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Summary *GlobalUserSummary `protobuf:"bytes,1,opt,name=summary,proto3" json:"summary,omitempty"`
}

func (x *GetGlobalUserSummaryResponse) Reset() {
	*x = GetGlobalUserSummaryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGlobalUserSummaryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGlobalUserSummaryResponse) ProtoMessage() {}

func (x *GetGlobalUserSummaryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGlobalUserSummaryResponse.ProtoReflect.Descriptor instead.
func (*GetGlobalUserSummaryResponse) Descriptor() ([]byte, []int) {
	return file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_rawDescGZIP(), []int{24}
}

func (x *GetGlobalUserSummaryResponse) GetSummary() *GlobalUserSummary {
	if x != nil {
		return x.Summary
	}
	return nil
}

// Request to get top networks
type GetTopNetworksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit int32 `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"` // Number of top networks to return
}

func (x *GetTopNetworksRequest) Reset() {
	*x = GetTopNetworksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTopNetworksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTopNetworksRequest) ProtoMessage() {}

func (x *GetTopNetworksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTopNetworksRequest.ProtoReflect.Descriptor instead.
func (*GetTopNetworksRequest) Descriptor() ([]byte, []int) {
	return file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_rawDescGZIP(), []int{25}
}

func (x *GetTopNetworksRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

// Response containing top networks
type GetTopNetworksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopNetworks *TopNetworks `protobuf:"bytes,1,opt,name=top_networks,json=topNetworks,proto3" json:"top_networks,omitempty"`
}

func (x *GetTopNetworksResponse) Reset() {
	*x = GetTopNetworksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTopNetworksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTopNetworksResponse) ProtoMessage() {}

func (x *GetTopNetworksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTopNetworksResponse.ProtoReflect.Descriptor instead.
func (*GetTopNetworksResponse) Descriptor() ([]byte, []int) {
	return file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_rawDescGZIP(), []int{26}
}

func (x *GetTopNetworksResponse) GetTopNetworks() *TopNetworks {
	if x != nil {
		return x.TopNetworks
	}
	return nil
}

var File_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto protoreflect.FileDescriptor

var file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_rawDesc = []byte{
	0x0a, 0x50, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x78, 0x61, 0x74, 0x75, 0x5f,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x6f, 0x72, 0x73, 0x2f, 0x78, 0x61, 0x74, 0x75, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x18, 0x78, 0x61, 0x74, 0x75, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x73, 0x1a, 0x1f, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x60, 0x0a,
	0x0a, 0x54, 0x69, 0x6d, 0x65, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x12, 0x12, 0x0a, 0x04, 0x66,
	0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x74, 0x65, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73,
	0x74, 0x65, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x22,
	0xf4, 0x01, 0x0a, 0x06, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x72, 0x65, 0x64, 0x69, 0x73, 0x5f, 0x6b, 0x65,
	0x79, 0x5f, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x72, 0x65, 0x64, 0x69, 0x73, 0x4b, 0x65, 0x79, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x1a,
	0x0a, 0x08, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x08, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x61,
	0x63, 0x6b, 0x66, 0x69, 0x6c, 0x6c, 0x5f, 0x68, 0x6f, 0x75, 0x72, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0d, 0x62, 0x61, 0x63, 0x6b, 0x66, 0x69, 0x6c, 0x6c, 0x48, 0x6f, 0x75, 0x72,
	0x73, 0x12, 0x47, 0x0a, 0x0c, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77,
	0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x78, 0x61, 0x74, 0x75, 0x5f, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f,
	0x72, 0x73, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x52, 0x0b, 0x74,
	0x69, 0x6d, 0x65, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x22, 0xf3, 0x01, 0x0a, 0x11, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x73, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x5b, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x6f, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x78, 0x61, 0x74,
	0x75, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x6f, 0x72, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f,
	0x72, 0x73, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f,
	0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x6f, 0x72, 0x73, 0x1a, 0x67, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x3e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x78, 0x61, 0x74, 0x75, 0x5f, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f,
	0x72, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xb2, 0x02, 0x0a,
	0x0e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x41, 0x0a, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x65, 0x64, 0x12, 0x78, 0x0a, 0x16, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x65, 0x64, 0x5f, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x42, 0x2e, 0x78, 0x61, 0x74, 0x75, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x73, 0x2e, 0x50, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x4c, 0x61, 0x73,
	0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x14, 0x6c, 0x61, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x65, 0x64, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x73, 0x1a, 0x63, 0x0a, 0x19,
	0x4c, 0x61, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x57, 0x69, 0x6e,
	0x64, 0x6f, 0x77, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x30, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0x54, 0x0a, 0x0e, 0x4e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6e, 0x6f, 0x64,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4e,
	0x6f, 0x64, 0x65, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6e,
	0x6f, 0x64, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x22, 0xa1, 0x07, 0x0a, 0x0c, 0x4e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6e, 0x6f, 0x64, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4e, 0x6f,
	0x64, 0x65, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x10, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4e, 0x6f, 0x64, 0x65,
	0x73, 0x12, 0x53, 0x0a, 0x09, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x78, 0x61, 0x74, 0x75, 0x5f, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x73, 0x2e,
	0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x12, 0x56, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e,
	0x65, 0x6e, 0x74, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x78, 0x61, 0x74,
	0x75, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x6f, 0x72, 0x73, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x53, 0x74, 0x61,
	0x74, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x4a,
	0x0a, 0x06, 0x63, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32,
	0x2e, 0x78, 0x61, 0x74, 0x75, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x73, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x53, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x43, 0x69, 0x74, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x06, 0x63, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x81, 0x01, 0x0a, 0x19, 0x63,
	0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x5f, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x44,
	0x2e, 0x78, 0x61, 0x74, 0x75, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x73, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x53, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73,
	0x49, 0x6d, 0x70, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x18, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x49,
	0x6d, 0x70, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x66,
	0x0a, 0x0e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x3e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x28, 0x2e, 0x78, 0x61, 0x74, 0x75, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x73, 0x2e, 0x4e, 0x6f, 0x64,
	0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x67, 0x0a, 0x0f, 0x43, 0x6f, 0x6e, 0x74, 0x69, 0x6e,
	0x65, 0x6e, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x3e, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x78, 0x61, 0x74,
	0x75, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x6f, 0x72, 0x73, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a,
	0x63, 0x0a, 0x0b, 0x43, 0x69, 0x74, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x3e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x28, 0x2e, 0x78, 0x61, 0x74, 0x75, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x73, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x1a, 0x75, 0x0a, 0x1d, 0x43, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75,
	0x73, 0x49, 0x6d, 0x70, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x3e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x78, 0x61, 0x74, 0x75, 0x5f, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72,
	0x73, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x73,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xe2, 0x01, 0x0a, 0x0b,
	0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x4f, 0x0a, 0x08, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x78,
	0x61, 0x74, 0x75, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x73, 0x2e, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x44,
	0x61, 0x74, 0x61, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x08, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x1a, 0x63, 0x0a, 0x0d, 0x4e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x3c,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e,
	0x78, 0x61, 0x74, 0x75, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x73, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0x6c, 0x0a, 0x10, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x44, 0x0a, 0x09, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x78, 0x61,
	0x74, 0x75, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x6f, 0x72, 0x73, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x09, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x22, 0x38,
	0x0a, 0x0c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x39, 0x0a, 0x0d, 0x55, 0x73, 0x65, 0x72,
	0x44, 0x61, 0x74, 0x61, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6e, 0x6f,
	0x64, 0x65, 0x73, 0x22, 0x63, 0x0a, 0x0e, 0x55, 0x73, 0x65, 0x72, 0x73, 0x54, 0x69, 0x6d, 0x65,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x3d, 0x0a, 0x05, 0x75, 0x73, 0x65,
	0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x78, 0x61, 0x74, 0x75, 0x5f,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x6f, 0x72, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x22, 0xa6, 0x03, 0x0a, 0x0a, 0x4e, 0x6f, 0x64,
	0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x5f,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x6f,
	0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x2b, 0x0a,
	0x11, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e,
	0x73, 0x75, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74,
	0x69, 0x6e, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e,
	0x74, 0x69, 0x6e, 0x65, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74,
	0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6c, 0x61, 0x74,
	0x65, 0x73, 0x74, 0x53, 0x6c, 0x6f, 0x74, 0x12, 0x3c, 0x0a, 0x1b, 0x6c, 0x61, 0x74, 0x65, 0x73,
	0x74, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74,
	0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x17, 0x6c, 0x61,
	0x74, 0x65, 0x73, 0x74, 0x53, 0x6c, 0x6f, 0x74, 0x53, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x33, 0x0a, 0x15, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x6d, 0x70, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x6d, 0x70, 0x6c,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x22, 0x9b, 0x01, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72,
	0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6e, 0x6f, 0x64, 0x65, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3a, 0x0a, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x78, 0x61, 0x74, 0x75, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x73, 0x2e, 0x4e,
	0x6f, 0x64, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73,
	0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22,
	0x7d, 0x0a, 0x11, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x53, 0x75, 0x6d,
	0x6d, 0x61, 0x72, 0x79, 0x12, 0x49, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x6f, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x78, 0x61, 0x74,
	0x75, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x6f, 0x72, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72,
	0x79, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x73, 0x12,
	0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x51,
	0x0a, 0x0b, 0x54, 0x6f, 0x70, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x12, 0x42, 0x0a,
	0x08, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x26, 0x2e, 0x78, 0x61, 0x74, 0x75, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x73, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x08, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x73, 0x22, 0x2d, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x22, 0x55, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x78, 0x61, 0x74, 0x75, 0x5f, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f,
	0x72, 0x73, 0x2e, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x52, 0x07,
	0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x22, 0x31, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x22, 0x65, 0x0a, 0x16, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x0b, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x78, 0x61, 0x74, 0x75,
	0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x6f, 0x72, 0x73, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x73, 0x22, 0x47, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x22, 0x61, 0x0a, 0x14, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x49, 0x0a, 0x0b, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x78, 0x61, 0x74, 0x75, 0x5f, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f,
	0x72, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x52, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x22, 0x33, 0x0a,
	0x15, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x22, 0x62, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x75, 0x6d,
	0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x0c,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x25, 0x2e, 0x78, 0x61, 0x74, 0x75, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x73, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x53,
	0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x22, 0x1d, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x47, 0x6c, 0x6f,
	0x62, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x65, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x47, 0x6c, 0x6f, 0x62,
	0x61, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x78, 0x61, 0x74, 0x75, 0x5f, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72,
	0x73, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x53, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x79, 0x52, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x22, 0x2d, 0x0a, 0x15,
	0x47, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x62, 0x0a, 0x16, 0x47,
	0x65, 0x74, 0x54, 0x6f, 0x70, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x0c, 0x74, 0x6f, 0x70, 0x5f, 0x6e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x78, 0x61,
	0x74, 0x75, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x6f, 0x72, 0x73, 0x2e, 0x54, 0x6f, 0x70, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x73, 0x52, 0x0b, 0x74, 0x6f, 0x70, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x32,
	0x1f, 0x0a, 0x1d, 0x58, 0x61, 0x74, 0x75, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x42, 0x4e, 0x5a, 0x4c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x65,
	0x74, 0x68, 0x70, 0x61, 0x6e, 0x64, 0x61, 0x6f, 0x70, 0x73, 0x2f, 0x6c, 0x61, 0x62, 0x2f, 0x62,
	0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x78, 0x61, 0x74, 0x75, 0x5f, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x73,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_rawDescOnce sync.Once
	file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_rawDescData = file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_rawDesc
)

func file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_rawDescGZIP() []byte {
	file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_rawDescOnce.Do(func() {
		file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_rawDescData = protoimpl.X.CompressGZIP(file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_rawDescData)
	})
	return file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_rawDescData
}

var file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes = make([]protoimpl.MessageInfo, 34)
var file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_goTypes = []any{
	(*TimeWindow)(nil),                   // 0: xatu_public_contributors.TimeWindow
	(*Config)(nil),                       // 1: xatu_public_contributors.Config
	(*ContributorsState)(nil),            // 2: xatu_public_contributors.ContributorsState
	(*ProcessorState)(nil),               // 3: xatu_public_contributors.ProcessorState
	(*NodeCountStats)(nil),               // 4: xatu_public_contributors.NodeCountStats
	(*NetworkStats)(nil),                 // 5: xatu_public_contributors.NetworkStats
	(*SummaryData)(nil),                  // 6: xatu_public_contributors.SummaryData
	(*CountryDataPoint)(nil),             // 7: xatu_public_contributors.CountryDataPoint
	(*CountryCount)(nil),                 // 8: xatu_public_contributors.CountryCount
	(*UserDataPoint)(nil),                // 9: xatu_public_contributors.UserDataPoint
	(*UsersTimePoint)(nil),               // 10: xatu_public_contributors.UsersTimePoint
	(*NodeDetail)(nil),                   // 11: xatu_public_contributors.NodeDetail
	(*UserSummary)(nil),                  // 12: xatu_public_contributors.UserSummary
	(*GlobalUserSummary)(nil),            // 13: xatu_public_contributors.GlobalUserSummary
	(*TopNetworks)(nil),                  // 14: xatu_public_contributors.TopNetworks
	(*GetSummaryRequest)(nil),            // 15: xatu_public_contributors.GetSummaryRequest
	(*GetSummaryResponse)(nil),           // 16: xatu_public_contributors.GetSummaryResponse
	(*GetCountryDataRequest)(nil),        // 17: xatu_public_contributors.GetCountryDataRequest
	(*GetCountryDataResponse)(nil),       // 18: xatu_public_contributors.GetCountryDataResponse
	(*GetUsersDataRequest)(nil),          // 19: xatu_public_contributors.GetUsersDataRequest
	(*GetUsersDataResponse)(nil),         // 20: xatu_public_contributors.GetUsersDataResponse
	(*GetUserSummaryRequest)(nil),        // 21: xatu_public_contributors.GetUserSummaryRequest
	(*GetUserSummaryResponse)(nil),       // 22: xatu_public_contributors.GetUserSummaryResponse
	(*GetGlobalUserSummaryRequest)(nil),  // 23: xatu_public_contributors.GetGlobalUserSummaryRequest
	(*GetGlobalUserSummaryResponse)(nil), // 24: xatu_public_contributors.GetGlobalUserSummaryResponse
	(*GetTopNetworksRequest)(nil),        // 25: xatu_public_contributors.GetTopNetworksRequest
	(*GetTopNetworksResponse)(nil),       // 26: xatu_public_contributors.GetTopNetworksResponse
	nil,                                  // 27: xatu_public_contributors.ContributorsState.ProcessorsEntry
	nil,                                  // 28: xatu_public_contributors.ProcessorState.LastProcessedWindowsEntry
	nil,                                  // 29: xatu_public_contributors.NetworkStats.CountriesEntry
	nil,                                  // 30: xatu_public_contributors.NetworkStats.ContinentsEntry
	nil,                                  // 31: xatu_public_contributors.NetworkStats.CitiesEntry
	nil,                                  // 32: xatu_public_contributors.NetworkStats.ConsensusImplementationsEntry
	nil,                                  // 33: xatu_public_contributors.SummaryData.NetworksEntry
	(*timestamppb.Timestamp)(nil),        // 34: google.protobuf.Timestamp
}
var file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_depIdxs = []int32{
	0,  // 0: xatu_public_contributors.Config.time_windows:type_name -> xatu_public_contributors.TimeWindow
	27, // 1: xatu_public_contributors.ContributorsState.processors:type_name -> xatu_public_contributors.ContributorsState.ProcessorsEntry
	34, // 2: xatu_public_contributors.ProcessorState.last_processed:type_name -> google.protobuf.Timestamp
	28, // 3: xatu_public_contributors.ProcessorState.last_processed_windows:type_name -> xatu_public_contributors.ProcessorState.LastProcessedWindowsEntry
	29, // 4: xatu_public_contributors.NetworkStats.countries:type_name -> xatu_public_contributors.NetworkStats.CountriesEntry
	30, // 5: xatu_public_contributors.NetworkStats.continents:type_name -> xatu_public_contributors.NetworkStats.ContinentsEntry
	31, // 6: xatu_public_contributors.NetworkStats.cities:type_name -> xatu_public_contributors.NetworkStats.CitiesEntry
	32, // 7: xatu_public_contributors.NetworkStats.consensus_implementations:type_name -> xatu_public_contributors.NetworkStats.ConsensusImplementationsEntry
	33, // 8: xatu_public_contributors.SummaryData.networks:type_name -> xatu_public_contributors.SummaryData.NetworksEntry
	8,  // 9: xatu_public_contributors.CountryDataPoint.countries:type_name -> xatu_public_contributors.CountryCount
	9,  // 10: xatu_public_contributors.UsersTimePoint.users:type_name -> xatu_public_contributors.UserDataPoint
	11, // 11: xatu_public_contributors.UserSummary.nodes:type_name -> xatu_public_contributors.NodeDetail
	12, // 12: xatu_public_contributors.GlobalUserSummary.contributors:type_name -> xatu_public_contributors.UserSummary
	5,  // 13: xatu_public_contributors.TopNetworks.networks:type_name -> xatu_public_contributors.NetworkStats
	6,  // 14: xatu_public_contributors.GetSummaryResponse.summary:type_name -> xatu_public_contributors.SummaryData
	7,  // 15: xatu_public_contributors.GetCountryDataResponse.data_points:type_name -> xatu_public_contributors.CountryDataPoint
	10, // 16: xatu_public_contributors.GetUsersDataResponse.data_points:type_name -> xatu_public_contributors.UsersTimePoint
	12, // 17: xatu_public_contributors.GetUserSummaryResponse.user_summary:type_name -> xatu_public_contributors.UserSummary
	13, // 18: xatu_public_contributors.GetGlobalUserSummaryResponse.summary:type_name -> xatu_public_contributors.GlobalUserSummary
	14, // 19: xatu_public_contributors.GetTopNetworksResponse.top_networks:type_name -> xatu_public_contributors.TopNetworks
	3,  // 20: xatu_public_contributors.ContributorsState.ProcessorsEntry.value:type_name -> xatu_public_contributors.ProcessorState
	34, // 21: xatu_public_contributors.ProcessorState.LastProcessedWindowsEntry.value:type_name -> google.protobuf.Timestamp
	4,  // 22: xatu_public_contributors.NetworkStats.CountriesEntry.value:type_name -> xatu_public_contributors.NodeCountStats
	4,  // 23: xatu_public_contributors.NetworkStats.ContinentsEntry.value:type_name -> xatu_public_contributors.NodeCountStats
	4,  // 24: xatu_public_contributors.NetworkStats.CitiesEntry.value:type_name -> xatu_public_contributors.NodeCountStats
	4,  // 25: xatu_public_contributors.NetworkStats.ConsensusImplementationsEntry.value:type_name -> xatu_public_contributors.NodeCountStats
	5,  // 26: xatu_public_contributors.SummaryData.NetworksEntry.value:type_name -> xatu_public_contributors.NetworkStats
	27, // [27:27] is the sub-list for method output_type
	27, // [27:27] is the sub-list for method input_type
	27, // [27:27] is the sub-list for extension type_name
	27, // [27:27] is the sub-list for extension extendee
	0,  // [0:27] is the sub-list for field type_name
}

func init() {
	file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_init()
}
func file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_init() {
	if File_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*TimeWindow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*Config); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*ContributorsState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*ProcessorState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*NodeCountStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*NetworkStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*SummaryData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*CountryDataPoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*CountryCount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*UserDataPoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*UsersTimePoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*NodeDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*UserSummary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*GlobalUserSummary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*TopNetworks); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*GetSummaryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*GetSummaryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*GetCountryDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*GetCountryDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*GetUsersDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*GetUsersDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*GetUserSummaryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*GetUserSummaryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*GetGlobalUserSummaryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[24].Exporter = func(v any, i int) any {
			switch v := v.(*GetGlobalUserSummaryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[25].Exporter = func(v any, i int) any {
			switch v := v.(*GetTopNetworksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes[26].Exporter = func(v any, i int) any {
			switch v := v.(*GetTopNetworksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   34,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_goTypes,
		DependencyIndexes: file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_depIdxs,
		MessageInfos:      file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_msgTypes,
	}.Build()
	File_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto = out.File
	file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_rawDesc = nil
	file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_goTypes = nil
	file_backend_pkg_server_proto_xatu_public_contributors_xatu_public_contributors_proto_depIdxs = nil
}
