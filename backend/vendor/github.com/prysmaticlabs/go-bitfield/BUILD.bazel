load("@bazel_gazelle//:def.bzl", "gazelle")
load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test", "nogo")

# gazelle:prefix github.com/prysmaticlabs/go-bitfield
gazelle(
    name = "gazelle",
    prefix = "github.com/prysmaticlabs/go-bitfield",
)

nogo(
    name = "nogo",
    # Some checks fail in gazelle itself. See: https://github.com/bazelbuild/bazel-gazelle/issues/568
    # Once that issue is resolved, this config can be removed.
    config = "nogo_config.json",
    visibility = ["//visibility:public"],
    deps = [
        "@org_golang_x_tools//go/analysis/passes/asmdecl",
        "@org_golang_x_tools//go/analysis/passes/assign",
        "@org_golang_x_tools//go/analysis/passes/atomic",
        "@org_golang_x_tools//go/analysis/passes/atomicalign",
        "@org_golang_x_tools//go/analysis/passes/bools",
        "@org_golang_x_tools//go/analysis/passes/buildssa",
        "@org_golang_x_tools//go/analysis/passes/buildtag",
        "@org_golang_x_tools//go/analysis/passes/cgocall",
        "@org_golang_x_tools//go/analysis/passes/composite",
        "@org_golang_x_tools//go/analysis/passes/copylock",
        "@org_golang_x_tools//go/analysis/passes/ctrlflow",
        "@org_golang_x_tools//go/analysis/passes/deepequalerrors",
        "@org_golang_x_tools//go/analysis/passes/findcall",
        "@org_golang_x_tools//go/analysis/passes/httpresponse",
        "@org_golang_x_tools//go/analysis/passes/inspect",
        "@org_golang_x_tools//go/analysis/passes/loopclosure",
        "@org_golang_x_tools//go/analysis/passes/lostcancel",
        "@org_golang_x_tools//go/analysis/passes/nilfunc",
        "@org_golang_x_tools//go/analysis/passes/nilness",
        "@org_golang_x_tools//go/analysis/passes/pkgfact",
        "@org_golang_x_tools//go/analysis/passes/printf",
        "@org_golang_x_tools//go/analysis/passes/shadow",
        "@org_golang_x_tools//go/analysis/passes/shift",
        "@org_golang_x_tools//go/analysis/passes/stdmethods",
        "@org_golang_x_tools//go/analysis/passes/structtag",
        "@org_golang_x_tools//go/analysis/passes/tests",
        "@org_golang_x_tools//go/analysis/passes/unmarshal",
        "@org_golang_x_tools//go/analysis/passes/unreachable",
        "@org_golang_x_tools//go/analysis/passes/unsafeptr",
    ],
)

go_library(
    name = "go_default_library",
    srcs = [
        "bitfield.go",
        "bitlist.go",
        "bitlist64.go",
        "bitvector128.go",
        "bitvector256.go",
        "bitvector32.go",
        "bitvector4.go",
        "bitvector512.go",
        "bitvector64.go",
        "bitvector8.go",
        "doc.go",
        "errors.go",
        "min.go",
    ],
    importpath = "github.com/prysmaticlabs/go-bitfield",
    visibility = ["//visibility:public"],
)

go_test(
    name = "go_default_test",
    size = "small",
    srcs = [
        "bitlist64_test.go",
        "bitlist_bench_test.go",
        "bitlist_test.go",
        "bitvector128_test.go",
        "bitvector256_test.go",
        "bitvector32_test.go",
        "bitvector4_test.go",
        "bitvector512_test.go",
        "bitvector64_test.go",
        "bitvector8_test.go",
    ],
    embed = [":go_default_library"],
    race = "on",
)
