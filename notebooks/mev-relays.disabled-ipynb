{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 51,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "2025-01-10 15:00:18,874 - mev-relays - INFO - Good to go!\n"
     ]
    },
    {
     "ename": "",
     "evalue": "",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31mThe Kernel crashed while executing code in the current cell or a previous cell. \n",
      "\u001b[1;31mPlease review the code in the cell(s) to identify a possible cause of the failure. \n",
      "\u001b[1;31mClick <a href='https://aka.ms/vscodeJupyterKernelCrash'>here</a> for more info. \n",
      "\u001b[1;31mView Jupyter <a href='command:jupyter.viewOutput'>log</a> for further details."
     ]
    }
   ],
   "source": [
    "import os\n",
    "from datetime import datetime, timedelta\n",
    "import pandas as pd\n",
    "from pathlib import Path\n",
    "from lib import Lab\n",
    "\n",
    "# Initialize lab\n",
    "lab = Lab('mev-relays', '../config.yaml')\n",
    "lab.setup()\n",
    "lab.setup_pandaops_clickhouse()\n",
    "log = lab.log\n",
    "\n",
    "# Get notebook specific config\n",
    "notebook_config = lab.get_notebook_config()\n",
    "\n",
    "writer = lab.get_data_writer()\n",
    "\n",
    "pandaops_clickhouse_client = lab.get_pandaops_clickhouse_client()\n",
    "\n",
    "log.info(\"Good to go!\")\n",
    "\n",
    "# EARLY EXIT. We Don't use this notebook yet.\n",
    "return\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "MevRelays(time_windows=[TimeWindow(file='last_30_days', step='1d', label='Last 30d', range='-30d'), TimeWindow(file='last_1_day', step='1h', label='Last 1d', range='-1d'), TimeWindow(file='last_6h', step='5m', label='Last 6h', range='-6h')], networks=['mainnet'])"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "mev_relays_config = lab.get_notebook_config().as_mev_relays()\n",
    "mev_relays_config"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>validator_index</th>\n",
       "      <th>entity</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>88035</td>\n",
       "      <td>whale_0x3230</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>985037</td>\n",
       "      <td>whale_0x9f1d</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>985038</td>\n",
       "      <td>whale_0x9f1d</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>985039</td>\n",
       "      <td>whale_0x9f1d</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>985040</td>\n",
       "      <td>whale_0x9f1d</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1535620</th>\n",
       "      <td>983558</td>\n",
       "      <td>rocketpool</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1535621</th>\n",
       "      <td>983572</td>\n",
       "      <td>solo_stakers</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1535622</th>\n",
       "      <td>983573</td>\n",
       "      <td>solo_stakers</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1535623</th>\n",
       "      <td>983671</td>\n",
       "      <td>solo_stakers</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1535624</th>\n",
       "      <td>983746</td>\n",
       "      <td>stakefish</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1535625 rows Ã— 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "         validator_index        entity\n",
       "0                  88035  whale_0x3230\n",
       "1                 985037  whale_0x9f1d\n",
       "2                 985038  whale_0x9f1d\n",
       "3                 985039  whale_0x9f1d\n",
       "4                 985040  whale_0x9f1d\n",
       "...                  ...           ...\n",
       "1535620           983558    rocketpool\n",
       "1535621           983572  solo_stakers\n",
       "1535622           983573  solo_stakers\n",
       "1535623           983671  solo_stakers\n",
       "1535624           983746     stakefish\n",
       "\n",
       "[1535625 rows x 2 columns]"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "validator_query = text(\"\"\"\n",
    "    SELECT \n",
    "        `index` as validator_index,\n",
    "        entity\n",
    "    FROM ethseer_validator_entity\n",
    "    WHERE \n",
    "        meta_network_name = :network\n",
    "\"\"\")\n",
    "validator_entities = pd.DataFrame(\n",
    "    pandaops_clickhouse_client.execute(validator_query, {\"network\": mev_relays_config.networks[0]}).fetchall(),\n",
    "    columns=['validator_index', 'entity']\n",
    ")\n",
    "validator_entities"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "2025-01-10 14:09:45,607 - mev-relays - INFO - Fetching relay registrations for last 2.5 weeks\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>validator_index</th>\n",
       "      <th>slot</th>\n",
       "      <th>gas_limit</th>\n",
       "      <th>timestamp</th>\n",
       "      <th>relay_name</th>\n",
       "      <th>entity</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>494481</td>\n",
       "      <td>0</td>\n",
       "      <td>30000000</td>\n",
       "      <td>1606824023</td>\n",
       "      <td>Aestus</td>\n",
       "      <td>solo_stakers</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>494481</td>\n",
       "      <td>0</td>\n",
       "      <td>30000000</td>\n",
       "      <td>1606824023</td>\n",
       "      <td>Agnostic Gnosis</td>\n",
       "      <td>solo_stakers</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>494481</td>\n",
       "      <td>0</td>\n",
       "      <td>30000000</td>\n",
       "      <td>1606824023</td>\n",
       "      <td>Titan Relay</td>\n",
       "      <td>solo_stakers</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>494481</td>\n",
       "      <td>0</td>\n",
       "      <td>30000000</td>\n",
       "      <td>1606824023</td>\n",
       "      <td>Ultra Sound</td>\n",
       "      <td>solo_stakers</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>556545</td>\n",
       "      <td>0</td>\n",
       "      <td>30000000</td>\n",
       "      <td>1606824023</td>\n",
       "      <td>Aestus</td>\n",
       "      <td>solo_stakers</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11929970</th>\n",
       "      <td>781433</td>\n",
       "      <td>10804781</td>\n",
       "      <td>36000000</td>\n",
       "      <td>1736481404</td>\n",
       "      <td>Titan Relay</td>\n",
       "      <td>coinbase</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11929971</th>\n",
       "      <td>781628</td>\n",
       "      <td>10804781</td>\n",
       "      <td>36000000</td>\n",
       "      <td>1736481404</td>\n",
       "      <td>BloXroute Max Profit</td>\n",
       "      <td>coinbase</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11929972</th>\n",
       "      <td>781628</td>\n",
       "      <td>10804781</td>\n",
       "      <td>36000000</td>\n",
       "      <td>1736481404</td>\n",
       "      <td>Titan Relay</td>\n",
       "      <td>coinbase</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11929973</th>\n",
       "      <td>782602</td>\n",
       "      <td>10804781</td>\n",
       "      <td>36000000</td>\n",
       "      <td>1736481404</td>\n",
       "      <td>BloXroute Max Profit</td>\n",
       "      <td>coinbase</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11929974</th>\n",
       "      <td>782602</td>\n",
       "      <td>10804781</td>\n",
       "      <td>36000000</td>\n",
       "      <td>1736481404</td>\n",
       "      <td>Titan Relay</td>\n",
       "      <td>coinbase</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>11929975 rows Ã— 6 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "          validator_index      slot  gas_limit   timestamp  \\\n",
       "0                  494481         0   30000000  1606824023   \n",
       "1                  494481         0   30000000  1606824023   \n",
       "2                  494481         0   30000000  1606824023   \n",
       "3                  494481         0   30000000  1606824023   \n",
       "4                  556545         0   30000000  1606824023   \n",
       "...                   ...       ...        ...         ...   \n",
       "11929970           781433  10804781   36000000  1736481404   \n",
       "11929971           781628  10804781   36000000  1736481404   \n",
       "11929972           781628  10804781   36000000  1736481404   \n",
       "11929973           782602  10804781   36000000  1736481404   \n",
       "11929974           782602  10804781   36000000  1736481404   \n",
       "\n",
       "                    relay_name        entity  \n",
       "0                       Aestus  solo_stakers  \n",
       "1              Agnostic Gnosis  solo_stakers  \n",
       "2                  Titan Relay  solo_stakers  \n",
       "3                  Ultra Sound  solo_stakers  \n",
       "4                       Aestus  solo_stakers  \n",
       "...                        ...           ...  \n",
       "11929970           Titan Relay      coinbase  \n",
       "11929971  BloXroute Max Profit      coinbase  \n",
       "11929972           Titan Relay      coinbase  \n",
       "11929973  BloXroute Max Profit      coinbase  \n",
       "11929974           Titan Relay      coinbase  \n",
       "\n",
       "[11929975 rows x 6 columns]"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sqlalchemy import text\n",
    "from datetime import datetime, timezone\n",
    "\n",
    "query = text(\"\"\"\n",
    "    SELECT\n",
    "        validator_index,\n",
    "        slot,\n",
    "        gas_limit,\n",
    "        timestamp,\n",
    "        relay_name\n",
    "    FROM\n",
    "        mev_relay_validator_registration\n",
    "    WHERE\n",
    "        event_date_time >= :start_date\n",
    "        AND event_date_time < :end_date\n",
    "        AND meta_network_name = :network\n",
    "    GROUP BY\n",
    "        validator_index,\n",
    "        slot,\n",
    "        gas_limit,\n",
    "        timestamp,\n",
    "        relay_name\n",
    "    ORDER BY\n",
    "        slot,\n",
    "        validator_index,\n",
    "        relay_name\n",
    "\"\"\")\n",
    "\n",
    "# Get last 2.5 weeks window\n",
    "end_date = datetime.now(timezone.utc)\n",
    "start_date = end_date - timedelta(days=16)\n",
    "\n",
    "# Format dates without microseconds for Clickhouse\n",
    "start_str = start_date.strftime('%Y-%m-%d %H:%M:%S')\n",
    "end_str = end_date.strftime('%Y-%m-%d %H:%M:%S')\n",
    "\n",
    "log.info(\"Fetching relay registrations for last 16 days\")\n",
    "\n",
    "registrations = pd.read_sql(\n",
    "    query, \n",
    "    pandaops_clickhouse_client, \n",
    "    params={\n",
    "        \"start_date\": start_str,\n",
    "        \"end_date\": end_str,\n",
    "        \"network\": mev_relays_config.networks[0]\n",
    "    }\n",
    ")\n",
    "\n",
    "# Add proposer entity to registrations\n",
    "registrations = registrations.merge(validator_entities, on='validator_index', how='left')\n",
    "registrations\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>index</th>\n",
       "      <th>status</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2</td>\n",
       "      <td>active_ongoing</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>3</td>\n",
       "      <td>active_ongoing</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>4</td>\n",
       "      <td>active_ongoing</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>8</td>\n",
       "      <td>active_ongoing</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>11</td>\n",
       "      <td>active_ongoing</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1759949</th>\n",
       "      <td>893333</td>\n",
       "      <td>active_ongoing</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1759950</th>\n",
       "      <td>893335</td>\n",
       "      <td>active_ongoing</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1759951</th>\n",
       "      <td>893343</td>\n",
       "      <td>active_ongoing</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1759952</th>\n",
       "      <td>893344</td>\n",
       "      <td>active_ongoing</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1759953</th>\n",
       "      <td>893352</td>\n",
       "      <td>active_ongoing</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1759954 rows Ã— 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "          index          status\n",
       "0             2  active_ongoing\n",
       "1             3  active_ongoing\n",
       "2             4  active_ongoing\n",
       "3             8  active_ongoing\n",
       "4            11  active_ongoing\n",
       "...         ...             ...\n",
       "1759949  893333  active_ongoing\n",
       "1759950  893335  active_ongoing\n",
       "1759951  893343  active_ongoing\n",
       "1759952  893344  active_ongoing\n",
       "1759953  893352  active_ongoing\n",
       "\n",
       "[1759954 rows x 2 columns]"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Get latest epoch's validators\n",
    "query = text(\"\"\"\n",
    "    SELECT \n",
    "        index,\n",
    "        status\n",
    "    FROM canonical_beacon_validators\n",
    "    WHERE \n",
    "        epoch = (\n",
    "            SELECT MAX(epoch) \n",
    "            FROM canonical_beacon_validators \n",
    "            WHERE meta_network_name = :network\n",
    "            AND epoch_start_date_time >= NOW() - INTERVAL 14 DAY\n",
    "        )\n",
    "        AND meta_network_name = :network\n",
    "        AND epoch_start_date_time >= NOW() - INTERVAL 14 DAY\n",
    "\"\"\")\n",
    "\n",
    "validators = pd.read_sql(\n",
    "    query,\n",
    "    pandaops_clickhouse_client,\n",
    "    params={\"network\": mev_relays_config.networks[0]}\n",
    ")\n",
    "validators\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>index</th>\n",
       "      <th>status</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2</td>\n",
       "      <td>active_ongoing</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>3</td>\n",
       "      <td>active_ongoing</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>4</td>\n",
       "      <td>active_ongoing</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>8</td>\n",
       "      <td>active_ongoing</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>11</td>\n",
       "      <td>active_ongoing</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1759949</th>\n",
       "      <td>893333</td>\n",
       "      <td>active_ongoing</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1759950</th>\n",
       "      <td>893335</td>\n",
       "      <td>active_ongoing</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1759951</th>\n",
       "      <td>893343</td>\n",
       "      <td>active_ongoing</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1759952</th>\n",
       "      <td>893344</td>\n",
       "      <td>active_ongoing</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1759953</th>\n",
       "      <td>893352</td>\n",
       "      <td>active_ongoing</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1070507 rows Ã— 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "          index          status\n",
       "0             2  active_ongoing\n",
       "1             3  active_ongoing\n",
       "2             4  active_ongoing\n",
       "3             8  active_ongoing\n",
       "4            11  active_ongoing\n",
       "...         ...             ...\n",
       "1759949  893333  active_ongoing\n",
       "1759950  893335  active_ongoing\n",
       "1759951  893343  active_ongoing\n",
       "1759952  893344  active_ongoing\n",
       "1759953  893352  active_ongoing\n",
       "\n",
       "[1070507 rows x 2 columns]"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "non_active_validators = validators[validators['status'] != 'active_ongoing']\n",
    "non_active_validators\n",
    "\n",
    "active_validators = validators[validators['status'] == 'active_ongoing']\n",
    "active_validators"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/fq/bp58gxy12nd2b32pw1y8wy040000gn/T/ipykernel_28284/3333959086.py:2: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  active_registrations['date'] = pd.to_datetime(active_registrations['timestamp'], unit='s').dt.date\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>validator_index</th>\n",
       "      <th>slot</th>\n",
       "      <th>gas_limit</th>\n",
       "      <th>timestamp</th>\n",
       "      <th>relay_name</th>\n",
       "      <th>entity</th>\n",
       "      <th>date</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>494481</td>\n",
       "      <td>0</td>\n",
       "      <td>30000000</td>\n",
       "      <td>1606824023</td>\n",
       "      <td>Aestus</td>\n",
       "      <td>solo_stakers</td>\n",
       "      <td>2020-12-01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>494481</td>\n",
       "      <td>0</td>\n",
       "      <td>30000000</td>\n",
       "      <td>1606824023</td>\n",
       "      <td>Agnostic Gnosis</td>\n",
       "      <td>solo_stakers</td>\n",
       "      <td>2020-12-01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>494481</td>\n",
       "      <td>0</td>\n",
       "      <td>30000000</td>\n",
       "      <td>1606824023</td>\n",
       "      <td>Titan Relay</td>\n",
       "      <td>solo_stakers</td>\n",
       "      <td>2020-12-01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>494481</td>\n",
       "      <td>0</td>\n",
       "      <td>30000000</td>\n",
       "      <td>1606824023</td>\n",
       "      <td>Ultra Sound</td>\n",
       "      <td>solo_stakers</td>\n",
       "      <td>2020-12-01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>556545</td>\n",
       "      <td>0</td>\n",
       "      <td>30000000</td>\n",
       "      <td>1606824023</td>\n",
       "      <td>Aestus</td>\n",
       "      <td>solo_stakers</td>\n",
       "      <td>2020-12-01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11929970</th>\n",
       "      <td>781433</td>\n",
       "      <td>10804781</td>\n",
       "      <td>36000000</td>\n",
       "      <td>1736481404</td>\n",
       "      <td>Titan Relay</td>\n",
       "      <td>coinbase</td>\n",
       "      <td>2025-01-10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11929971</th>\n",
       "      <td>781628</td>\n",
       "      <td>10804781</td>\n",
       "      <td>36000000</td>\n",
       "      <td>1736481404</td>\n",
       "      <td>BloXroute Max Profit</td>\n",
       "      <td>coinbase</td>\n",
       "      <td>2025-01-10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11929972</th>\n",
       "      <td>781628</td>\n",
       "      <td>10804781</td>\n",
       "      <td>36000000</td>\n",
       "      <td>1736481404</td>\n",
       "      <td>Titan Relay</td>\n",
       "      <td>coinbase</td>\n",
       "      <td>2025-01-10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11929973</th>\n",
       "      <td>782602</td>\n",
       "      <td>10804781</td>\n",
       "      <td>36000000</td>\n",
       "      <td>1736481404</td>\n",
       "      <td>BloXroute Max Profit</td>\n",
       "      <td>coinbase</td>\n",
       "      <td>2025-01-10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11929974</th>\n",
       "      <td>782602</td>\n",
       "      <td>10804781</td>\n",
       "      <td>36000000</td>\n",
       "      <td>1736481404</td>\n",
       "      <td>Titan Relay</td>\n",
       "      <td>coinbase</td>\n",
       "      <td>2025-01-10</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>11748058 rows Ã— 7 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "          validator_index      slot  gas_limit   timestamp  \\\n",
       "0                  494481         0   30000000  1606824023   \n",
       "1                  494481         0   30000000  1606824023   \n",
       "2                  494481         0   30000000  1606824023   \n",
       "3                  494481         0   30000000  1606824023   \n",
       "4                  556545         0   30000000  1606824023   \n",
       "...                   ...       ...        ...         ...   \n",
       "11929970           781433  10804781   36000000  1736481404   \n",
       "11929971           781628  10804781   36000000  1736481404   \n",
       "11929972           781628  10804781   36000000  1736481404   \n",
       "11929973           782602  10804781   36000000  1736481404   \n",
       "11929974           782602  10804781   36000000  1736481404   \n",
       "\n",
       "                    relay_name        entity        date  \n",
       "0                       Aestus  solo_stakers  2020-12-01  \n",
       "1              Agnostic Gnosis  solo_stakers  2020-12-01  \n",
       "2                  Titan Relay  solo_stakers  2020-12-01  \n",
       "3                  Ultra Sound  solo_stakers  2020-12-01  \n",
       "4                       Aestus  solo_stakers  2020-12-01  \n",
       "...                        ...           ...         ...  \n",
       "11929970           Titan Relay      coinbase  2025-01-10  \n",
       "11929971  BloXroute Max Profit      coinbase  2025-01-10  \n",
       "11929972           Titan Relay      coinbase  2025-01-10  \n",
       "11929973  BloXroute Max Profit      coinbase  2025-01-10  \n",
       "11929974           Titan Relay      coinbase  2025-01-10  \n",
       "\n",
       "[11748058 rows x 7 columns]"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "active_registrations = registrations[~registrations['validator_index'].isin(non_active_validators['index'])]\n",
    "active_registrations['date'] = pd.to_datetime(active_registrations['timestamp'], unit='s').dt.date\n",
    "active_registrations\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>validator_index</th>\n",
       "      <th>relay_name</th>\n",
       "      <th>slot</th>\n",
       "      <th>gas_limit</th>\n",
       "      <th>timestamp</th>\n",
       "      <th>entity</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>Aestus</td>\n",
       "      <td>8708041</td>\n",
       "      <td>30000000</td>\n",
       "      <td>1711320515</td>\n",
       "      <td>solo_stakers</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0</td>\n",
       "      <td>Agnostic Gnosis</td>\n",
       "      <td>8708041</td>\n",
       "      <td>30000000</td>\n",
       "      <td>1711320515</td>\n",
       "      <td>solo_stakers</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0</td>\n",
       "      <td>BloXroute Max Profit</td>\n",
       "      <td>10681573</td>\n",
       "      <td>30000000</td>\n",
       "      <td>1735002899</td>\n",
       "      <td>solo_stakers</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0</td>\n",
       "      <td>Eden Network</td>\n",
       "      <td>10681573</td>\n",
       "      <td>30000000</td>\n",
       "      <td>1735002899</td>\n",
       "      <td>solo_stakers</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0</td>\n",
       "      <td>Flashbots</td>\n",
       "      <td>8708041</td>\n",
       "      <td>30000000</td>\n",
       "      <td>1711320515</td>\n",
       "      <td>solo_stakers</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6708979</th>\n",
       "      <td>1734312</td>\n",
       "      <td>BloXroute Regulated</td>\n",
       "      <td>10799168</td>\n",
       "      <td>30000000</td>\n",
       "      <td>1736414039</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6708980</th>\n",
       "      <td>1734312</td>\n",
       "      <td>Flashbots</td>\n",
       "      <td>10796057</td>\n",
       "      <td>30000000</td>\n",
       "      <td>1736376707</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6708981</th>\n",
       "      <td>1734312</td>\n",
       "      <td>Manifold</td>\n",
       "      <td>10796057</td>\n",
       "      <td>30000000</td>\n",
       "      <td>1736376707</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6708982</th>\n",
       "      <td>1734312</td>\n",
       "      <td>Titan Relay</td>\n",
       "      <td>10799168</td>\n",
       "      <td>30000000</td>\n",
       "      <td>1736414039</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6708983</th>\n",
       "      <td>1734312</td>\n",
       "      <td>Ultra Sound</td>\n",
       "      <td>10796057</td>\n",
       "      <td>30000000</td>\n",
       "      <td>1736376707</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>6708984 rows Ã— 6 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "         validator_index            relay_name      slot  gas_limit  \\\n",
       "0                      0                Aestus   8708041   30000000   \n",
       "1                      0       Agnostic Gnosis   8708041   30000000   \n",
       "2                      0  BloXroute Max Profit  10681573   30000000   \n",
       "3                      0          Eden Network  10681573   30000000   \n",
       "4                      0             Flashbots   8708041   30000000   \n",
       "...                  ...                   ...       ...        ...   \n",
       "6708979          1734312   BloXroute Regulated  10799168   30000000   \n",
       "6708980          1734312             Flashbots  10796057   30000000   \n",
       "6708981          1734312              Manifold  10796057   30000000   \n",
       "6708982          1734312           Titan Relay  10799168   30000000   \n",
       "6708983          1734312           Ultra Sound  10796057   30000000   \n",
       "\n",
       "          timestamp        entity  \n",
       "0        1711320515  solo_stakers  \n",
       "1        1711320515  solo_stakers  \n",
       "2        1735002899  solo_stakers  \n",
       "3        1735002899  solo_stakers  \n",
       "4        1711320515  solo_stakers  \n",
       "...             ...           ...  \n",
       "6708979  1736414039          None  \n",
       "6708980  1736376707          None  \n",
       "6708981  1736376707          None  \n",
       "6708982  1736414039          None  \n",
       "6708983  1736376707          None  \n",
       "\n",
       "[6708984 rows x 6 columns]"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Ensure we've got the most recent registrations with a unique key of validator index and relay name\n",
    "most_recent_registrations_per_relay = active_registrations.groupby(['validator_index', 'relay_name']).last().reset_index()\n",
    "most_recent_registrations_per_relay\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>validator_index</th>\n",
       "      <th>slot</th>\n",
       "      <th>gas_limit</th>\n",
       "      <th>timestamp</th>\n",
       "      <th>relay_name</th>\n",
       "      <th>entity</th>\n",
       "      <th>date</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>10681573</td>\n",
       "      <td>30000000</td>\n",
       "      <td>1735002899</td>\n",
       "      <td>Titan Relay</td>\n",
       "      <td>solo_stakers</td>\n",
       "      <td>2024-12-24</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>10681573</td>\n",
       "      <td>30000000</td>\n",
       "      <td>1735002899</td>\n",
       "      <td>Titan Relay</td>\n",
       "      <td>solo_stakers</td>\n",
       "      <td>2024-12-24</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>10681573</td>\n",
       "      <td>30000000</td>\n",
       "      <td>1735002899</td>\n",
       "      <td>Titan Relay</td>\n",
       "      <td>solo_stakers</td>\n",
       "      <td>2024-12-24</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>10681573</td>\n",
       "      <td>30000000</td>\n",
       "      <td>1735002899</td>\n",
       "      <td>Titan Relay</td>\n",
       "      <td>solo_stakers</td>\n",
       "      <td>2024-12-24</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>10681573</td>\n",
       "      <td>30000000</td>\n",
       "      <td>1735002899</td>\n",
       "      <td>Titan Relay</td>\n",
       "      <td>solo_stakers</td>\n",
       "      <td>2024-12-24</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1036498</th>\n",
       "      <td>1734308</td>\n",
       "      <td>10799168</td>\n",
       "      <td>30000000</td>\n",
       "      <td>1736414039</td>\n",
       "      <td>Titan Relay</td>\n",
       "      <td>None</td>\n",
       "      <td>2025-01-09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1036499</th>\n",
       "      <td>1734309</td>\n",
       "      <td>10799168</td>\n",
       "      <td>30000000</td>\n",
       "      <td>1736414039</td>\n",
       "      <td>Titan Relay</td>\n",
       "      <td>None</td>\n",
       "      <td>2025-01-09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1036500</th>\n",
       "      <td>1734310</td>\n",
       "      <td>10799168</td>\n",
       "      <td>30000000</td>\n",
       "      <td>1736414039</td>\n",
       "      <td>Titan Relay</td>\n",
       "      <td>None</td>\n",
       "      <td>2025-01-09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1036501</th>\n",
       "      <td>1734311</td>\n",
       "      <td>10799168</td>\n",
       "      <td>30000000</td>\n",
       "      <td>1736414039</td>\n",
       "      <td>Titan Relay</td>\n",
       "      <td>None</td>\n",
       "      <td>2025-01-09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1036502</th>\n",
       "      <td>1734312</td>\n",
       "      <td>10799168</td>\n",
       "      <td>30000000</td>\n",
       "      <td>1736414039</td>\n",
       "      <td>Titan Relay</td>\n",
       "      <td>None</td>\n",
       "      <td>2025-01-09</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1036503 rows Ã— 7 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "         validator_index      slot  gas_limit   timestamp   relay_name  \\\n",
       "0                      0  10681573   30000000  1735002899  Titan Relay   \n",
       "1                      1  10681573   30000000  1735002899  Titan Relay   \n",
       "2                      2  10681573   30000000  1735002899  Titan Relay   \n",
       "3                      3  10681573   30000000  1735002899  Titan Relay   \n",
       "4                      4  10681573   30000000  1735002899  Titan Relay   \n",
       "...                  ...       ...        ...         ...          ...   \n",
       "1036498          1734308  10799168   30000000  1736414039  Titan Relay   \n",
       "1036499          1734309  10799168   30000000  1736414039  Titan Relay   \n",
       "1036500          1734310  10799168   30000000  1736414039  Titan Relay   \n",
       "1036501          1734311  10799168   30000000  1736414039  Titan Relay   \n",
       "1036502          1734312  10799168   30000000  1736414039  Titan Relay   \n",
       "\n",
       "               entity        date  \n",
       "0        solo_stakers  2024-12-24  \n",
       "1        solo_stakers  2024-12-24  \n",
       "2        solo_stakers  2024-12-24  \n",
       "3        solo_stakers  2024-12-24  \n",
       "4        solo_stakers  2024-12-24  \n",
       "...               ...         ...  \n",
       "1036498          None  2025-01-09  \n",
       "1036499          None  2025-01-09  \n",
       "1036500          None  2025-01-09  \n",
       "1036501          None  2025-01-09  \n",
       "1036502          None  2025-01-09  \n",
       "\n",
       "[1036503 rows x 7 columns]"
      ]
     },
     "execution_count": 50,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Ensure we've got the most recent registrations with a unique key of validator index ordered by timestamp\n",
    "# Filter for active validators only\n",
    "most_recent_registrations = active_registrations[active_registrations['validator_index'].isin(active_validators['index'])] \\\n",
    "    .groupby(['validator_index']).last().reset_index()\n",
    "most_recent_registrations\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>relay_name</th>\n",
       "      <th>count</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Aestus</td>\n",
       "      <td>1994</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Agnostic Gnosis</td>\n",
       "      <td>12105</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>BloXroute Max Profit</td>\n",
       "      <td>43775</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>BloXroute Regulated</td>\n",
       "      <td>43515</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Eden Network</td>\n",
       "      <td>16</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Flashbots</td>\n",
       "      <td>12401</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>Manifold</td>\n",
       "      <td>4673</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>Titan Relay</td>\n",
       "      <td>735983</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>Ultra Sound</td>\n",
       "      <td>175433</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>Wenmerge</td>\n",
       "      <td>6608</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "             relay_name   count\n",
       "0                Aestus    1994\n",
       "1       Agnostic Gnosis   12105\n",
       "2  BloXroute Max Profit   43775\n",
       "3   BloXroute Regulated   43515\n",
       "4          Eden Network      16\n",
       "5             Flashbots   12401\n",
       "6              Manifold    4673\n",
       "7           Titan Relay  735983\n",
       "8           Ultra Sound  175433\n",
       "9              Wenmerge    6608"
      ]
     },
     "execution_count": 48,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Start building out the data we want to write to file\n",
    "\n",
    "total_validators_registered = len(most_recent_registrations)\n",
    "total_active_validators = len(active_validators)\n",
    "\n",
    "## Count the number of validators registered to each relay\n",
    "relay_totals = most_recent_registrations.groupby('relay_name').size().reset_index(name='count')\n",
    "relay_totals\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "entity\n",
       "solo_stakers     7756\n",
       "whale_0x24d6     1014\n",
       "whale_0xe43c     1011\n",
       "abyss_finance     616\n",
       "whale_0xefa0      507\n",
       "whale_0x39fd      329\n",
       "whale_0x900c      309\n",
       "whale_0x1d5b      308\n",
       "whale_0x10d5      304\n",
       "whale_0xe3f7      290\n",
       "dtype: int64"
      ]
     },
     "execution_count": 39,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Get the number of validators who are not registered to any relay and their entities\n",
    "non_registered_validators = active_validators[~active_validators['index'].isin(most_recent_registrations['validator_index'])]\n",
    "non_registered_validators = non_registered_validators.merge(validator_entities, left_on='index', right_on='validator_index')\n",
    "\n",
    "# Count per entity, show the top 10\n",
    "non_registered_validators.groupby('entity').size().sort_values(ascending=False).head(10)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'total_active_validators': 1070507,\n",
       " 'total_validators_registered': 1036503,\n",
       " 'relay_registrations': [{'relay_name': 'Aestus', 'count': 1994},\n",
       "  {'relay_name': 'Agnostic Gnosis', 'count': 12105},\n",
       "  {'relay_name': 'BloXroute Max Profit', 'count': 43775},\n",
       "  {'relay_name': 'BloXroute Regulated', 'count': 43515},\n",
       "  {'relay_name': 'Eden Network', 'count': 16},\n",
       "  {'relay_name': 'Flashbots', 'count': 12401},\n",
       "  {'relay_name': 'Manifold', 'count': 4673},\n",
       "  {'relay_name': 'Titan Relay', 'count': 735983},\n",
       "  {'relay_name': 'Ultra Sound', 'count': 175433},\n",
       "  {'relay_name': 'Wenmerge', 'count': 6608}],\n",
       " 'top_unregistered_entities': {'solo_stakers': 7756,\n",
       "  'whale_0x24d6': 1014,\n",
       "  'whale_0xe43c': 1011,\n",
       "  'abyss_finance': 616,\n",
       "  'whale_0xefa0': 507,\n",
       "  'whale_0x39fd': 329,\n",
       "  'whale_0x900c': 309,\n",
       "  'whale_0x1d5b': 308,\n",
       "  'whale_0x10d5': 304,\n",
       "  'whale_0xe3f7': 290}}"
      ]
     },
     "execution_count": 49,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Write summary data to JSON\n",
    "summary = {\n",
    "    \"total_active_validators\": int(total_active_validators),\n",
    "    \"total_validators_registered\": int(total_validators_registered),\n",
    "    \"relay_registrations\": relay_totals.to_dict('records'),\n",
    "    \"top_unregistered_entities\": non_registered_validators.groupby('entity').size().sort_values(ascending=False).head(10).to_dict()\n",
    "}\n",
    "\n",
    "\n",
    "lab.write_json('mev-relays-summary.json', summary)\n",
    "\n",
    "\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
